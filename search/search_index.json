{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Snitch System Generator","text":"<p>The Snitch project is an open-source RISC-V hardware research project of ETH Zurich and University of Bologna targeting highest possible energy-efficiency. The system is designed around a versatile and small integer core, which we call Snitch. The system is ought to be highly parameterizable and suitable for many use-cases, ranging from small, control-only cores, to large many-core system made for pure number crunching in the HPC domain.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>See our dedicated getting started guide.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>The documentation is built from the latest master and hosted at github pages: https://pulp-platform.github.io/snitch.</p>"},{"location":"#about-this-repository","title":"About this Repository","text":"<p>This repository is developed as a monorepo, external dependencies are \"vendored-in\" and checked in. Keeping it a monolithic repository helps to keep the hardware dependencies under control and enables precise snapshotting (invaluable when you are taping-out chips).</p>"},{"location":"#licensing","title":"Licensing","text":"<p>Snitch is being made available under permissive open source licenses. See the <code>README.md</code> for a more detailed break-down.</p>"},{"location":"publications/","title":"Publications","text":"<p>The Snitch architecture is built on research that is described in the following publications.</p>"},{"location":"publications/#2021","title":"2021","text":"<p>F. Zaruba, F. Schuiki, T. Hoefler and L. Benini, \"Snitch: A Tiny Pseudo Dual-Issue Processor for Area and Energy Efficient Execution of Floating-Point Intensive Workloads,\" in IEEE Transactions on Computers, vol. 70, no. 11, pp. 1845-1860, 1 Nov. 2021, doi: 10.1109/TC.2020.3027900.</p> <p>F. Schuiki, F. Zaruba, T. Hoefler and L. Benini, \"Stream Semantic Registers: A Lightweight RISC-V ISA Extension Achieving Full Compute Utilization in Single-Issue Cores,\" in IEEE Transactions on Computers, vol. 70, no. 2, pp. 212-227, 1 Feb. 2021, doi: 10.1109/TC.2020.2987314.</p> <p>S. Riedel, F. Schuiki, P. Scheffler, F. Zaruba and L. Benini, \"Banshee: A Fast LLVM-Based RISC-V Binary Translator,\" 2021 IEEE/ACM International Conference On Computer Aided Design (ICCAD), 2021, pp. 1-9, doi: 10.1109/ICCAD51958.2021.9643546.</p> <p>F. Zaruba, F. Schuiki and L. Benini, \"Manticore: A 4096-Core RISC-V Chiplet Architecture for Ultraefficient Floating-Point Computing,\" in IEEE Micro, vol. 41, no. 2, pp. 36-42, 1 March-April 2021, doi: 10.1109/MM.2020.3045564.</p> <p>P. Scheffler, F. Zaruba, F. Schuiki, T. Hoefler and L. Benini, \"Indirection Stream Semantic Register Architecture for Efficient Sparse-Dense Linear Algebra,\" 2021 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE), 2021, pp. 1787-1792, doi: 10.23919/DATE51398.2021.9474230.</p>"},{"location":"rm/custom_instructions/","title":"Instruction Set Extensions","text":"<p>For efficient execution we have defined a number of custom instructions. This document gives a brief overview of their encoding.</p>"},{"location":"rm/custom_instructions/#xssr-extension-for-stream-semantic-registers","title":"\"Xssr\" Extension for Stream Semantic Registers","text":"<p>The \"Xssr\" extension assigns stream semantics to a handful of the processor's registers. If enabled, reading and writing these registers translates into corresponding memory reads and writes. The addresses for these memory accesses are derived from a hardware address generator.</p>"},{"location":"rm/custom_instructions/#configuration-register-operations","title":"Configuration Register Operations","text":"imm[11:5] imm[4:0] rs1 funct3 rd opcode operation 7 5 5 3 5 7 reg ssr 00000 001 dest OP-CUSTOM1 SCFGRI reg ssr value 010 00000 OP-CUSTOM1 SCFGWI <p>SCFGRI and SCFGWI read and write a value from or to an SSR configuration register. The immediate argument reg specifies the index of the register, ssr specifies which SSR should be accessed. SCFGRI places the read value in rd. SCFGWI moves the value in rs1 to the selected SSR configuration register.</p> funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000000 addr 00001 001 dest OP-CUSTOM1 SCFGR 0000000 addr value 010 00001 OP-CUSTOM1 SCFGW <p>SCFGR and SCFGW read and write a value from or to an SSR configuration register. The value in register rs2 specifies specifies the address of the register as follows: bits 4 to 0 correspond to ssr and indicate the SSR to be used, and the bits 11 to 5 correspond to reg and indicate the index of the register. SCFGR places the read value in rd. SCFGW moves the value in rs1 to the selected SSR configuration register.</p>"},{"location":"rm/custom_instructions/#xfrep-extension-for-floating-point-repetition","title":"\"Xfrep\" Extension for Floating-Point Repetition","text":"<p>With the \"Xfrep\" extension we can automatically repeat a sequence of instructions without the need to manage a loop in software, issuing the instructions from Snitch's FPU sequencer buffer. This has a number of benefits, including alleviating the pressure on the I$ bandwidth. Furthermore, after the first iteration the instructions can be fetched from the FPU sequencer, which has a lower energy access cost than the L1 I$.</p> <p>The FREP instruction has the following signature:</p> imm1 rs1 imm2 imm3 is_outer opcode operation 12 5 3 4 1 7 max_inst max_rpt stagger_max stagger_mask 0 OP-CUSTOM1 FREP.I max_inst max_rpt stagger_max stagger_mask 1 OP-CUSTOM1 FREP.O <p>FREP.I and FREP.O repeat the max_inst instructions following the FREP instruction for max_rpt + 1 times. The FREP.I instruction (I stands for inner) repeats every instruction the specified number of times and moves on to executing and repeating the next. The FREP.O instruction (O stands for outer) repeats the whole sequence of instructions max_rpt + 1 times. Register staggering can be enabled and configured via the stagger_mask and stagger_max immediates. A detailed explanation of their use can be found in the Snitch paper.</p> <p>The assembly instruction signature follows:</p> <pre><code>frep.i   rs1, imm1, imm2, imm3\n</code></pre>"},{"location":"rm/custom_instructions/#xdma-extension-for-asynchronous-data-movement","title":"\"Xdma\" Extension for Asynchronous Data Movement","text":"<p>The \"Xdma\" extension provides custom instructions to control an asynchronous data movement engine tightly coupled to the processor core.</p>"},{"location":"rm/custom_instructions/#address-operations","title":"Address Operations","text":"funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000000 ptrhi ptrlo 000 00000 OP-CUSTOM1 DMSRC 0000001 ptrhi ptrlo 000 00000 OP-CUSTOM1 DMDST <p>DMSRC and DMDST specify the source and destination address pointers for the next data movement operation. The arguments ptrhi and ptrlo are truncated to 32-bit values, and concatenated to form a 64-bit value, and truncated to PLEN.</p>"},{"location":"rm/custom_instructions/#stride-operations","title":"Stride Operations","text":"funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000110 dststrd srcstrd 000 00000 OP-CUSTOM1 DMSTR 0000111 00000 reps 000 00000 OP-CUSTOM1 DMREP <p>DMSTRD configures the stride for two-dimensional transfers. The value in registers rs1 and rs2 are sign-extended to PLEN and configured as the source and destination stride, respectively. After each transfer of the innermost dimension, the strides are added to the respective address pointers.</p> <p>DMREPS configures the value in register rs1 as the size of the outer dimension for two-dimensional transfers.</p>"},{"location":"rm/custom_instructions/#control-operations","title":"Control Operations","text":"funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000011 config size 000 dest OP-CUSTOM1 DMCPY 0000101 status 00000 000 dest OP-CUSTOM1 DMSTAT funct7 imm5 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000010 config size 000 dest OP-CUSTOM1 DMCPYI 0000100 status 00000 000 dest OP-CUSTOM1 DMSTATI <p>DMCPY and DMCPYI initiate an asynchronous data movement with the parameters configured by the previous DM instructions. A transfer id is placed in register rd, which is necessary to later check for transfer completion. size contains the number of consecutive bytes to transfer. For multi-dimensional transfers this is the size of the innermost dimension. config* determines the following parameters of the transfer:</p> Bits Value Description config[0] decouple_rw Decouple the handshakes of the read and write channels config[1] enable_2d Enable two-dimensional transfer <p>DMSTAT and DMSTATI place the selected status flag of the DMA into register rd. The following status flags are supported:</p> status Name Description 0 completed_id Id of last completed transfer 1 next_id Id allocated to the next transfer 2 busy At least one transfer in progress 3 would_block Next DMCPY[I] blocks (transfer queue full) <p>The DMSTATI instruction can be used to implement a blocking wait for the completion of a specific DMA transfer:</p> <pre><code>    dmcpyi a0, ...\n1:  dmstati t0, 0\n    bltu a0, t0, 1b\n</code></pre> <p>Similarly, waiting for the completion of all DMA transfers:</p> <pre><code>1:  dmstati t0, 2\n    bnez t0, zero, 1b\n</code></pre>"},{"location":"rm/solder/","title":"Solder","text":"<p>Solder generates (complex) interconnects, their respective address maps, and SystemVerilog description from a simple, imperative Python description. The user specifies the topology and high-level address map of the system using Solder's API. Solder will take of generating the underlying graph representations, propagating address maps, calculating routes and performing various sanity checks. Finally, the hardware description is generated.</p>"},{"location":"rm/solder/#graph-representations","title":"Graph Representations","text":"<p>Under the hood Solder maintains several different graph representations:</p> Hardware instance graph This representation contains all hardware blocks which need to be instantiated. This includes crossbars, converter modules and peripherals. Address Map Graph Provides an abstract view of the memory map. Components which do not change the topology (router nodes) or routing decisions (filters and leafs) are stripped from the representation."},{"location":"rm/reqrsp_interface/","title":"Reqrsp Interface","text":"<p>The <code>reqrsp_interface</code> (request and response) is a custom interface based on common principles found in other interconnects such as AXI or TileLink. It has only two channels (request and response) which are handshaked according to the AMBA standard:</p> <ul> <li>The initiator asserts <code>valid</code>. The assertion of <code>valid</code> must not depend on   <code>ready</code>.</li> <li>Once <code>valid</code> has been asserted all data must remain stable.</li> <li>The receiver asserts <code>ready</code> whenever it is ready to receive the transaction.</li> <li>When both <code>valid</code> and <code>ready</code> are high the transaction is successful.</li> </ul> <p>The bus is little endian.</p>"},{"location":"rm/reqrsp_interface/#channels","title":"Channels","text":"<p>The two channels are:</p> <ul> <li>Request (<code>q</code>): The initiator requests a memory transaction. Supported are   read, write, atomic memory operations, load-linked and store-conditional   pairs.</li> <li>Response (<code>p</code>): Every transaction which was requested ultimately returns a   response. For reads the response channel returns the read response, for writes   the response acknowledges that the data is committed and subsequent reads will   return the last written value, for atomic operations the data before the   memory operations has happened is being returned. For load-linked the the read   response is returned, for store-conditionals the the success code is returned.   Additionally, the response channel carries error information.</li> </ul>"},{"location":"rm/reqrsp_interface/#sizes","title":"Sizes","text":"<p>Data bus size of 32, 64, 128, 256, 512, 1024-bit are supported. Atomic memory operations are 32 bit or 64 bit for bus sizes greater than 32.</p>"},{"location":"rm/reqrsp_interface/#data-alignment","title":"Data Alignment","text":"<p>The data is always bus-aligned. similar to AXI. For reads the address and size fields indicate which data is valid. Similarly for writes the address and size fields in addition to the write strobe field indicate valid bytes (8 bit of data). Atomics and LR/SCs addresses are always naturally aligned to their size.</p>"},{"location":"rm/reqrsp_interface/#ordering","title":"Ordering","text":"<p>Transactions on the request channel are always strongly ordered (as if they would all use the same ID in AXI terms). Reads and writes are ordered with respect to each other (that needs to be maintained when translating to AXI).</p>"},{"location":"rm/reqrsp_interface/#atomic-memory-operations","title":"Atomic Memory Operations","text":"<p>Atomic memory operations supported are:</p> Operation Description <code>Swap</code> Swaps the values. <code>Add</code> Signed addition. <code>And</code>, <code>Or</code>, <code>Xor</code> Bitwise <code>and</code>, <code>or</code>, and <code>xor</code> operation. <code>Max</code>, <code>Maxu</code> Signed and unsigned maximum operation. <code>Min</code>, <code>Minu</code> Signed and unsigned minimum operation. <code>Lr</code> Places a reservation on the given memory address <code>Sc</code> Conditional store, returns <code>0</code> on <code>q.data</code> if successful, <code>1</code> otherwise. <p>The operation reads the value at the given address and returns the read value on the <code>p</code> channel. The same memory location is updated with the data and operation supplied on the <code>q.amo</code> and <code>q.data</code> signals. The <code>q.write</code> signal must be set to <code>1'b0</code>.</p>"},{"location":"rm/reqrsp_interface/#load-reservedstore-conditional","title":"Load-Reserved/Store-conditional","text":"<p>The <code>q.amo</code> field carries the information on whether the transaction encodes an LR/SC.</p> Operation Description Lr Places a reservation on the given memory address Sc Conditional store, returns <code>0</code> on <code>q.data</code> if successful, <code>1</code> otherwise. <p>For <code>Sc</code> and <code>LR</code> the <code>q.write</code> signal must be set to <code>0</code>.</p>"},{"location":"rm/reqrsp_interface/#error","title":"Error","text":"<p>The <code>p</code> channel carries additional error information:</p> <ul> <li><code>0</code>: The access is ok.</li> <li><code>1</code>: The access has encountered an error.</li> </ul>"},{"location":"rm/snitch/","title":"Snitch","text":"<p>Snitch is a single-stage, single-issue, in-order RISC-V core (RV32I or RV32E) tuned for simplicity and minimal area footprint. Furthermore it is highly configurable and can be used in a plethora of different applications.</p> <p>The core has an optional accelerator interface which can be used to control and off-load RISC-V instructions. The load/store interface is a dual-channel interface with a separately handshaked request and response channel. More information can be found here.</p> <p>This folder contains the main Snitch core, incl. L0 translation lookaside buffer (TLB), register file and load store unit (LSU).</p> <p>Info</p> <p>The virtual memory support in Snitch is still in a very early, untested stage so do not expect it to work yet.</p>"},{"location":"rm/snitch/#core-integration","title":"Core Integration","text":"<p>This section covers integration aspects of the core.</p>"},{"location":"rm/snitch/#file-list","title":"File List","text":"<p>We use <code>Bender</code> to generate the file lists for the modules. To get stated with the Snitch core and a file list you can:</p> <ul> <li>In <code>hw/ip/snitch</code>, call <code>bender sources</code> (or <code>bender script flist</code> for a flat   file list).</li> <li>If you also want to use bender for your project you can create a minimal   bender manifest with a path dependency to the Snitch core. For an example   please have a look at <code>hw/system/snitch_cluster/Bender.yml</code>.</li> </ul>"},{"location":"rm/snitch/#parameters","title":"Parameters","text":"Name Type/Range Default Description <code>AddrWidth</code> int 48 Address width of the system. <code>DataWidth</code> int 64 Data width of the data bus. Can either be <code>32</code> or <code>64</code>. <code>acc_req_t</code> type logic Type of accelerator request port. See <code>snitch_pkg.sv</code> for an example. Must be set to a meaningful type. <code>acc_resp_t</code> type logic Type of accelerator response port. See <code>snitch_pkg.sv</code> for an example. Must be set to a meaningful type. <code>dreq_t</code> type logic Type of data request port. See <code>hw/ip/reqrsp_intf</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>drsp_t</code> type logic Type of data response port. See <code>hw/ip/reqrsp_intf</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>pa_t</code> type logic Type of physical address. See <code>hw/ip/snitch_vm</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>l0_pte_t</code> type logic Type of L0 page table entry. See <code>hw/ip/snitch_vm</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>BootAddr</code> int 0x1000 Address where the core starts to fetch for instruction after reset. <code>SnitchPMACfg</code> struct '0 Physical memory attribute configuration. <code>NumIntOutstandingLoads</code> int 0 Number of outstanding loads. This determines the size of the load queue. <code>NumIntOutstandingMem</code> int 0 Number of outstanding memory operations (loads and stores). <code>NumDTLBEntries</code> int 0 Number of TLB entries for the data TLB. <code>NumITLBEntries</code> int 0 Number of TLB entries for the instruction TLB. <code>RVE</code> bit 0 Enable embedded ABI (reduced register ABI). <code>FP_EN</code> bit 0 Enable floating point support (in general). <code>Xdma</code> bit 0 Enable custom DMA extension (changes the decoder of the core). <code>Xssr</code> bit 0 Enable custom SSR extension (changes the decoder of the core). <code>RVF</code> bit 0 Enable single-precision floating point extension (needs <code>FP_EN</code>). <code>RVD</code> bit 0 Enable double-precision floating point extension (needs <code>FP_EN</code>). <code>XF16</code> bit 0 Enable half-precision floating point extension (needs <code>FP_EN</code>). <code>XF16ALT</code> bit 0 Enable brain-float extension (needs <code>FP_EN</code>). <code>XF8</code> bit 0 Enable eight byte floating-point extensions (needs <code>FP_EN</code>). <code>XF8ALT</code> bit 0 Enable alternate eight byte floating-point extensions (needs <code>FP_EN</code>). <code>XFVEC</code> bit 0 Enable vectorized extension (needs <code>FP_EN</code>). <code>XFDOTP</code> bit 0 Enable DOTP operation group (needs <code>FP_EN</code>). <code>FLEN</code> bit 0 Required floating-point length (depends on enabled extension). Determined by the maximum floating-point length (<code>64</code> for double, <code>32</code> for single, etc.)."},{"location":"rm/snitch/#ports","title":"Ports","text":"Signals Width Dir Description clk_i <code>1</code> In Clock. rst_i <code>1</code> In Reset, asynchronous, active-high. hart_id_i <code>32</code> In Id present in <code>mhartid</code>. irq_i <code>3</code> In M-Mode timer, software, and external interrupt. flush_i_valid_o <code>1</code> In Flush the instruction cache (<code>fence.i</code>). Once high wait for <code>flush_i_ready_i</code> is asserted. AXI-style handshake. flush_i_ready_i <code>1</code> In Instruction cache is ready. inst_addr_o <code>AddrWidth</code> Out Instruction address. inst_cacheable_o <code>1</code> Out If asserted high, the instruction should be cached. inst_data_i <code>32</code> In 32-bit RISC-V instruction word. inst_valid_o <code>1</code> Out Instruction request is valid. inst_ready_i <code>1</code> In Instruction word has been consumed. acc_qreq_o <code>bits(acc_req_t)</code> Out Accelerator off-load information. acc_qvalid_o <code>1</code> Out Accelerator off-load request is valid. AXI-style handshake. acc_qready_i <code>1</code> In Request has been accepted. acc_prsp_i <code>bits(acc_resp_t)</code> In Accelerator response information. acc_pvalid_i <code>1</code> In Accelerator response is valid. AXI-style handshake. acc_pready_o <code>1</code> Out Accelerator response has been accepted by the core. data_req_o <code>bits(dreq_t)</code> Out Load/store request. See reqrsp interface. data_rsp_i <code>bits(drsp_t)</code> In Load/store response. See reqrsp interface. wake_up_sync_i <code>1</code> In Deprecated. Tie-low. ptw_valid_o <code>2</code> Out Instruction or data TLB missed. Page table walking request. ptw_ready_i <code>2</code> In Instruction or data miss has been accepted. ptw_va_o <code>2*bits(va_t)</code> Out Instruction or data virtual address requested to be translated. ptw_ppn_o, <code>2*bits(pa_t)</code> Out Instruction or data physical base address. Forwarded from <code>satp</code> register. ptw_pte_i, <code>2*bits(l0_pte_t)</code> In Instruction or data PTE entry in (translated virtual address). ptw_is_4mega_i, <code>2</code> In Instruction or data PTE is a 4 mega page. fpu_rnd_mode_o <code>bits(roundmode_e)</code> Out Side-band signal forwarding the rounding mode from <code>fcsr</code>. fpu_status_i <code>bits(status_t)</code> In Exception status of FPU (can be tied to <code>0</code> if no FPU is used)."},{"location":"rm/snitch/#instantiation-template","title":"Instantiation Template","text":"<pre><code>  snitch #(\n    .AddrWidth (),\n    .DataWidth (),\n    .acc_req_t (),\n    .acc_resp_t (),\n    .dreq_t (),\n    .drsp_t (),\n    .pa_t (pa_t,\n    .l0_pte_t (),\n    .BootAddr (),\n    .SnitchPMACfg (),\n    .NumIntOutstandingLoads (),\n    .NumIntOutstandingMem (),\n    .NumDTLBEntries (),\n    .NumITLBEntries (),\n    .RVE (),\n    .FP_EN (),\n    .Xdma (),\n    .Xssr (),\n    .RVF (),\n    .RVD (),\n    .XF16 (),\n    .XF16ALT (),\n    .XF8 (),\n    .XF8ALT (),\n    .XFVEC (),\n    .XFDOTP (),\n    .FLEN ()\n  ) i_snitch (\n    .clk_i ( ),\n    .rst_i (),\n    .hart_id_i (),\n    .irq_i (),\n    .flush_i_valid_o (),\n    .flush_i_ready_i (),\n    .inst_addr_o (),\n    .inst_cacheable_o (),\n    .inst_data_i (),\n    .inst_valid_o (),\n    .inst_ready_i (),\n    .acc_qreq_o (),\n    .acc_qvalid_o (),\n    .acc_qready_i (),\n    .acc_prsp_i (),\n    .acc_pvalid_i (),\n    .acc_pready_o (),\n    .data_req_o (),\n    .data_rsp_i (),\n    .ptw_valid_o (),\n    .ptw_ready_i (),\n    .ptw_va_o (),\n    .ptw_ppn_o (),\n    .ptw_pte_i (),\n    .ptw_is_4mega_i (),\n    .wake_up_sync_i (),\n    .fpu_rnd_mode_o (),\n    .fpu_status_i ()\n  );\n</code></pre>"},{"location":"rm/snitch/#testbench","title":"Testbench","text":"<ul> <li>The L0 TLBs: Random requests are generated. The golden model saves all   requests, if a new request comes in it is either sourced from memory (if it   exists) or re-generated based on constraint randomization. Response from the   DUT are compared to the golden model.</li> </ul>"},{"location":"rm/snitch_cluster/","title":"Snitch Cluster","text":"<p>This ip contains a cluster of Snitch cores, arranged in a specific (but configurable fashion).</p>"},{"location":"rm/snitch_cluster/#memory-map","title":"Memory Map","text":"<p>The memory map of the cluster is determined by the <code>cluster_base_addr_i</code> signal. Depending on the amount of memory the <code>TCDM</code> and <code>Periph</code> regions will be scaled accordingly. The peripheral region will always be the same size as the <code>TCDM</code>.</p> <ul> <li>Let <code>TCDMSize</code> denote the size of the <code>TCDM</code>.</li> <li>Let <code>PeripheralSize</code> denote the size of the cluster peripheral address space.</li> <li>Let <code>TCDMEndAddress = cluster_base_addr_i + TCDMSize</code></li> <li>Let <code>SocEndAddress = TCDMEndAddress + PeripheralSize</code></li> </ul> Range Dest Description [<code>SocEndAddress</code> - ) SoC Routed out of the cluster. Address range depends on available address bits. [<code>TCDMEndAddress</code> - <code>SocEndAddress</code>) Periph Cluster local peripherals. [<code>cluster_base_addr_i</code> - <code>TCDMEndAddress</code>) TCDM Cluster local tightly coupled data memory. [<code>0x0</code> - <code>cluster_base_addr_i</code>) SoC Routed out of the cluster. <p>Info</p> <p>Because the address check on each core's LSU path is quite critical, we rely on a simplified checking scheme were we revert to checking the address against a mask and base combination. This makes the hardware less expensive (and faster) as no complicated adder circuits are needed and a couple of <code>and</code> gates are enough. (In comparison to a full address check where two adders are need)</p> <pre><code>assign match = (addr_base &amp; addr_mask) == (addr_to_check &amp; addr_mask);\n</code></pre> <p>As a consequence the <code>cluster_base_addr_i</code> has to be aligned to the the <code>TCDM</code> size, otherwise this check can't distinguish between routing to the <code>TCDM</code> or <code>SoC</code>/<code>Periph</code>. A static assertion checks that this holds true.</p>"},{"location":"runtime/Classes/","title":"Classes","text":"<ul> <li>struct cls_t </li> <li>struct cnn_t_ </li> <li>struct conv_layer_struct This structure contains all parameters necessary for Convolutional layers. </li> <li>struct dm_t </li> <li>struct dm_task_t </li> <li>struct eu_t </li> <li>struct gemm_layer_struct This structure contains all parameters necessary for GEMM. </li> <li>struct gemm_result_t </li> <li>struct ident </li> <li>struct kernel_fp32 parameters for single-precision fusedconv kernel </li> <li>struct kernel_fp64 parameters for double-precision fusedconv kernel </li> <li>struct network_benchmark_t_ </li> <li>struct network_fp16_t_ </li> <li>struct network_fp32_t_ </li> <li>struct network_fp64_t_ </li> <li>struct network_fp8_t_ </li> <li>struct network_single_cluster_t_ </li> <li>struct network_t_ This structure contains all parameters necessary for building a simple neural netowork. </li> <li>struct omp_prof_t </li> <li>struct omp_t </li> <li>struct omp_team_t </li> <li>union perf_reg32_t </li> <li>struct perf_regs_t </li> <li>struct snrt_allocator_t </li> <li>struct snrt_barrier_t </li> <li>union v2s </li> <li>union v4s </li> <li>union v8s </li> </ul> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structcls__t/","title":"cls_t","text":"<p><code>#include &lt;cls_decls.h&gt;</code></p>"},{"location":"runtime/Classes/structcls__t/#public-attributes","title":"Public Attributes","text":"Name uint32_t hw_barrier snrt_allocator_t l1_allocator"},{"location":"runtime/Classes/structcls__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structcls__t/#variable-hw_barrier","title":"variable hw_barrier","text":"<pre><code>uint32_t hw_barrier;\n</code></pre>"},{"location":"runtime/Classes/structcls__t/#variable-l1_allocator","title":"variable l1_allocator","text":"<pre><code>snrt_allocator_t l1_allocator;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structcnn__t__/","title":"cnn_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structcnn__t__/#public-attributes","title":"Public Attributes","text":"Name uint16_t CO uint16_t CI uint16_t H uint16_t W uint16_t K uint16_t M uint16_t padding uint16_t stride double * image double * conv1_weights double * conv1_biases precision_t dtype"},{"location":"runtime/Classes/structcnn__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structcnn__t__/#variable-co","title":"variable CO","text":"<pre><code>uint16_t CO;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-ci","title":"variable CI","text":"<pre><code>uint16_t CI;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-h","title":"variable H","text":"<pre><code>uint16_t H;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-w","title":"variable W","text":"<pre><code>uint16_t W;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-k","title":"variable K","text":"<pre><code>uint16_t K;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-m","title":"variable M","text":"<pre><code>uint16_t M;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-padding","title":"variable padding","text":"<pre><code>uint16_t padding;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-stride","title":"variable stride","text":"<pre><code>uint16_t stride;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-image","title":"variable image","text":"<pre><code>double * image;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-conv1_weights","title":"variable conv1_weights","text":"<pre><code>double * conv1_weights;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-conv1_biases","title":"variable conv1_biases","text":"<pre><code>double * conv1_biases;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structconv__layer__struct/","title":"conv_layer_struct","text":"<p>This structure contains all parameters necessary for Convolutional layers. </p> <p><code>#include &lt;layer.h&gt;</code></p>"},{"location":"runtime/Classes/structconv__layer__struct/#public-attributes","title":"Public Attributes","text":"Name uint32_t CO uint32_t CI uint32_t IH uint32_t IW uint32_t OH uint32_t OW uint32_t FH uint32_t FW uint32_t pad double * ifmap double * weights double * ofmap uint32_t TILE_CI uint32_t cluster2cluster uint32_t im2col double * gamma double * beta precision_t dtype"},{"location":"runtime/Classes/structconv__layer__struct/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structconv__layer__struct/#variable-co","title":"variable CO","text":"<pre><code>uint32_t CO;\n</code></pre> <p>Number of output channels </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ci","title":"variable CI","text":"<pre><code>uint32_t CI;\n</code></pre> <p>Number of input channels </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ih","title":"variable IH","text":"<pre><code>uint32_t IH;\n</code></pre> <p>Height of input feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-iw","title":"variable IW","text":"<pre><code>uint32_t IW;\n</code></pre> <p>Width of input feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-oh","title":"variable OH","text":"<pre><code>uint32_t OH;\n</code></pre> <p>Height of output feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ow","title":"variable OW","text":"<pre><code>uint32_t OW;\n</code></pre> <p>Width of output feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-fh","title":"variable FH","text":"<pre><code>uint32_t FH;\n</code></pre> <p>Height of filter </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-fw","title":"variable FW","text":"<pre><code>uint32_t FW;\n</code></pre> <p>Width of filter </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-pad","title":"variable pad","text":"<pre><code>uint32_t pad;\n</code></pre> <p>Padding on all sides </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ifmap","title":"variable ifmap","text":"<pre><code>double * ifmap;\n</code></pre> <p>Pointer to input feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-weights","title":"variable weights","text":"<pre><code>double * weights;\n</code></pre> <p>Pointer to weights </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ofmap","title":"variable ofmap","text":"<pre><code>double * ofmap;\n</code></pre> <p>Pointer to output feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-tile_ci","title":"variable TILE_CI","text":"<pre><code>uint32_t TILE_CI;\n</code></pre> <p>Tiling factor of input channel </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-cluster2cluster","title":"variable cluster2cluster","text":"<pre><code>uint32_t cluster2cluster;\n</code></pre> <p>Flag for enabling cluster 2 cluster communication </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-im2col","title":"variable im2col","text":"<pre><code>uint32_t im2col;\n</code></pre> <p>Flag for enabling im2col + GEMM </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-gamma","title":"variable gamma","text":"<pre><code>double * gamma;\n</code></pre> <p>Pointer to gamma for BatchNorm </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-beta","title":"variable beta","text":"<pre><code>double * beta;\n</code></pre> <p>Pointer to beta for BatchNorm </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structdm__t/","title":"dm_t","text":"<p><code>#include &lt;dm.h&gt;</code></p>"},{"location":"runtime/Classes/structdm__t/#public-attributes","title":"Public Attributes","text":"Name dm_task_t queue uint32_t queue_back uint32_t queue_front volatile uint32_t queue_fill volatile uint32_t mutex volatile en_stat_t stat_q volatile uint32_t stat_p volatile uint32_t stat_pvalid volatile uint32_t dm_wfi"},{"location":"runtime/Classes/structdm__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structdm__t/#variable-queue","title":"variable queue","text":"<pre><code>dm_task_t queue;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-queue_back","title":"variable queue_back","text":"<pre><code>uint32_t queue_back;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-queue_front","title":"variable queue_front","text":"<pre><code>uint32_t queue_front;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-queue_fill","title":"variable queue_fill","text":"<pre><code>volatile uint32_t queue_fill;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-mutex","title":"variable mutex","text":"<pre><code>volatile uint32_t mutex;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-stat_q","title":"variable stat_q","text":"<pre><code>volatile en_stat_t stat_q;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-stat_p","title":"variable stat_p","text":"<pre><code>volatile uint32_t stat_p;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-stat_pvalid","title":"variable stat_pvalid","text":"<pre><code>volatile uint32_t stat_pvalid;\n</code></pre>"},{"location":"runtime/Classes/structdm__t/#variable-dm_wfi","title":"variable dm_wfi","text":"<pre><code>volatile uint32_t dm_wfi;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structdm__task__t/","title":"dm_task_t","text":"<p><code>#include &lt;dm.h&gt;</code></p>"},{"location":"runtime/Classes/structdm__task__t/#public-attributes","title":"Public Attributes","text":"Name uint64_t src uint64_t dst uint32_t size uint32_t sstrd uint32_t dstrd uint32_t nreps uint32_t cfg uint32_t twod"},{"location":"runtime/Classes/structdm__task__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structdm__task__t/#variable-src","title":"variable src","text":"<pre><code>uint64_t src;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-dst","title":"variable dst","text":"<pre><code>uint64_t dst;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-size","title":"variable size","text":"<pre><code>uint32_t size;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-sstrd","title":"variable sstrd","text":"<pre><code>uint32_t sstrd;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-dstrd","title":"variable dstrd","text":"<pre><code>uint32_t dstrd;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-nreps","title":"variable nreps","text":"<pre><code>uint32_t nreps;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-cfg","title":"variable cfg","text":"<pre><code>uint32_t cfg;\n</code></pre>"},{"location":"runtime/Classes/structdm__task__t/#variable-twod","title":"variable twod","text":"<pre><code>uint32_t twod;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structeu__t/","title":"eu_t","text":"<p><code>#include &lt;eu_decls.h&gt;</code></p>"},{"location":"runtime/Classes/structeu__t/#public-attributes","title":"Public Attributes","text":"Name uint32_t workers_in_loop uint32_t exit_flag uint32_t workers_mutex uint32_t workers_wfi void(* fn void * data uint32_t argc uint32_t nthreads uint32_t fini_count struct eu_t::@0 e"},{"location":"runtime/Classes/structeu__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structeu__t/#variable-workers_in_loop","title":"variable workers_in_loop","text":"<pre><code>uint32_t workers_in_loop;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-exit_flag","title":"variable exit_flag","text":"<pre><code>uint32_t exit_flag;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-workers_mutex","title":"variable workers_mutex","text":"<pre><code>uint32_t workers_mutex;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-workers_wfi","title":"variable workers_wfi","text":"<pre><code>uint32_t workers_wfi;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-fn","title":"variable fn","text":"<pre><code>void(* fn;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-data","title":"variable data","text":"<pre><code>void * data;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-argc","title":"variable argc","text":"<pre><code>uint32_t argc;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-nthreads","title":"variable nthreads","text":"<pre><code>uint32_t nthreads;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-fini_count","title":"variable fini_count","text":"<pre><code>uint32_t fini_count;\n</code></pre>"},{"location":"runtime/Classes/structeu__t/#variable-e","title":"variable e","text":"<pre><code>struct eu_t::@0 e;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structgemm__layer__struct/","title":"gemm_layer_struct","text":"<p>This structure contains all parameters necessary for GEMM. </p> <p><code>#include &lt;layer.h&gt;</code></p>"},{"location":"runtime/Classes/structgemm__layer__struct/#public-attributes","title":"Public Attributes","text":"Name uint32_t M uint32_t M_p uint32_t N uint32_t K uint32_t TA uint32_t TB uint32_t TILE_M uint32_t TILE_N uint32_t TILE_K double * A double * B double * C uint32_t ALPHA precision_t dtype uint32_t expand"},{"location":"runtime/Classes/structgemm__layer__struct/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structgemm__layer__struct/#variable-m","title":"variable M","text":"<pre><code>uint32_t M;\n</code></pre> <p>Dimension of matrix product MxK * KxN </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-m_p","title":"variable M_p","text":"<pre><code>uint32_t M_p;\n</code></pre> <p>M divided by number of compute cores </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-n","title":"variable N","text":"<pre><code>uint32_t N;\n</code></pre> <p>Dimension of matrix product MxK * KxN </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-k","title":"variable K","text":"<pre><code>uint32_t K;\n</code></pre> <p>Dimension of matrix product MxK * KxN </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-ta","title":"variable TA","text":"<pre><code>uint32_t TA;\n</code></pre> <p>Transpose matrix A </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tb","title":"variable TB","text":"<pre><code>uint32_t TB;\n</code></pre> <p>Transpose matrix B </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tile_m","title":"variable TILE_M","text":"<pre><code>uint32_t TILE_M;\n</code></pre> <p>Tile factor across M dimension </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tile_n","title":"variable TILE_N","text":"<pre><code>uint32_t TILE_N;\n</code></pre> <p>Tile factor across N dimension </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tile_k","title":"variable TILE_K","text":"<pre><code>uint32_t TILE_K;\n</code></pre> <p>Tile factor across K dimension </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-a","title":"variable A","text":"<pre><code>double * A;\n</code></pre> <p>Pointer to matrix A </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-b","title":"variable B","text":"<pre><code>double * B;\n</code></pre> <p>Pointer to matrix B </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-c","title":"variable C","text":"<pre><code>double * C;\n</code></pre> <p>Pointer to matrix C </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-alpha","title":"variable ALPHA","text":"<pre><code>uint32_t ALPHA;\n</code></pre> <p>constant factor: A * B + ALPHA * C </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Precision of GEMM</p> <p>Precision of Convolution layer </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-expand","title":"variable expand","text":"<pre><code>uint32_t expand;\n</code></pre> <p>Use expanding DOTP instructions </p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structgemm__result__t/","title":"gemm_result_t","text":"<p><code>#include &lt;matmul.h&gt;</code></p>"},{"location":"runtime/Classes/structgemm__result__t/#public-attributes","title":"Public Attributes","text":"Name size_t errors size_t cycles_core size_t cycles_total"},{"location":"runtime/Classes/structgemm__result__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structgemm__result__t/#variable-errors","title":"variable errors","text":"<pre><code>size_t errors;\n</code></pre>"},{"location":"runtime/Classes/structgemm__result__t/#variable-cycles_core","title":"variable cycles_core","text":"<pre><code>size_t cycles_core;\n</code></pre>"},{"location":"runtime/Classes/structgemm__result__t/#variable-cycles_total","title":"variable cycles_total","text":"<pre><code>size_t cycles_total;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structident/","title":"ident","text":"<p><code>#include &lt;interface.h&gt;</code></p>"},{"location":"runtime/Classes/structident/#public-attributes","title":"Public Attributes","text":"Name kmp_int32 reserved_1 kmp_int32 flags kmp_int32 reserved_2 kmp_int32 reserved_3 char const  * psource"},{"location":"runtime/Classes/structident/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structident/#variable-reserved_1","title":"variable reserved_1","text":"<pre><code>kmp_int32 reserved_1;\n</code></pre> <p>might be used in Fortran; see above </p>"},{"location":"runtime/Classes/structident/#variable-flags","title":"variable flags","text":"<pre><code>kmp_int32 flags;\n</code></pre> <p>also f.flags; KMP_IDENT_xxx flags; KMP_IDENT_KMPC identifies this union member </p>"},{"location":"runtime/Classes/structident/#variable-reserved_2","title":"variable reserved_2","text":"<pre><code>kmp_int32 reserved_2;\n</code></pre> <p>not really used in Fortran any more; see above </p>"},{"location":"runtime/Classes/structident/#variable-reserved_3","title":"variable reserved_3","text":"<pre><code>kmp_int32 reserved_3;\n</code></pre> <p>source[4] in Fortran, do not use for C++ </p>"},{"location":"runtime/Classes/structident/#variable-psource","title":"variable psource","text":"<pre><code>char const  * psource;\n</code></pre> <p>String describing the source location. The string is composed of semi-colon separated fields which describe the source file, the function and a pair of line numbers that delimit the construct. </p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structkernel__fp32/","title":"kernel_fp32","text":"<p>parameters for single-precision fusedconv kernel </p> <p><code>#include &lt;conv2d.h&gt;</code></p>"},{"location":"runtime/Classes/structkernel__fp32/#public-attributes","title":"Public Attributes","text":"Name float * pInBuffer uint16_t dim_in_x uint16_t dim_in_y uint16_t ch_in float * pWeight uint16_t ch_out uint16_t dim_kernel_x uint16_t dim_kernel_y uint16_t padding_y_top uint16_t padding_y_bottom uint16_t padding_x_left uint16_t padding_x_right uint16_t stride_x uint16_t stride_y int8_t * bias uint16_t bias_shift uint16_t out_shift uint16_t out_mult float * pOutBuffer uint16_t dim_out_x uint16_t dim_out_y float * kappa float * lambda uint8_t * pIm2ColBuffer int flag_relu int flag_batch_norm int flag_y_accumulate_start int flag_y_accumulate_end unsigned int * memory_chan"},{"location":"runtime/Classes/structkernel__fp32/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structkernel__fp32/#variable-pinbuffer","title":"variable pInBuffer","text":"<pre><code>float * pInBuffer;\n</code></pre> <p>pointer to the input feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_in_x","title":"variable dim_in_x","text":"<pre><code>uint16_t dim_in_x;\n</code></pre> <p>width of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_in_y","title":"variable dim_in_y","text":"<pre><code>uint16_t dim_in_y;\n</code></pre> <p>height of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-ch_in","title":"variable ch_in","text":"<pre><code>uint16_t ch_in;\n</code></pre> <p>number of input channels </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-pweight","title":"variable pWeight","text":"<pre><code>float * pWeight;\n</code></pre> <p>pointer to weights </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-ch_out","title":"variable ch_out","text":"<pre><code>uint16_t ch_out;\n</code></pre> <p>number of output channels </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_kernel_x","title":"variable dim_kernel_x","text":"<pre><code>uint16_t dim_kernel_x;\n</code></pre> <p>width of kernel </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_kernel_y","title":"variable dim_kernel_y","text":"<pre><code>uint16_t dim_kernel_y;\n</code></pre> <p>height of kernel </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_y_top","title":"variable padding_y_top","text":"<pre><code>uint16_t padding_y_top;\n</code></pre> <p>number of pixels padded on the top </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_y_bottom","title":"variable padding_y_bottom","text":"<pre><code>uint16_t padding_y_bottom;\n</code></pre> <p>number of pixels padded on the bottom </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_x_left","title":"variable padding_x_left","text":"<pre><code>uint16_t padding_x_left;\n</code></pre> <p>number of pixels padded on the left </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_x_right","title":"variable padding_x_right","text":"<pre><code>uint16_t padding_x_right;\n</code></pre> <p>number of pixels padded on the right </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-stride_x","title":"variable stride_x","text":"<pre><code>uint16_t stride_x;\n</code></pre> <p>stride in x direction </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-stride_y","title":"variable stride_y","text":"<pre><code>uint16_t stride_y;\n</code></pre> <p>stride in y direction </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-bias","title":"variable bias","text":"<pre><code>int8_t * bias;\n</code></pre> <p>bias of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-bias_shift","title":"variable bias_shift","text":"<pre><code>uint16_t bias_shift;\n</code></pre> <p>bias shift of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-out_shift","title":"variable out_shift","text":"<pre><code>uint16_t out_shift;\n</code></pre> <p>shift factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-out_mult","title":"variable out_mult","text":"<pre><code>uint16_t out_mult;\n</code></pre> <p>mult factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-poutbuffer","title":"variable pOutBuffer","text":"<pre><code>float * pOutBuffer;\n</code></pre> <p>pointer to output feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_out_x","title":"variable dim_out_x","text":"<pre><code>uint16_t dim_out_x;\n</code></pre> <p>width of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_out_y","title":"variable dim_out_y","text":"<pre><code>uint16_t dim_out_y;\n</code></pre> <p>height of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-kappa","title":"variable kappa","text":"<pre><code>float * kappa;\n</code></pre> <p>multiplication factor for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-lambda","title":"variable lambda","text":"<pre><code>float * lambda;\n</code></pre>"},{"location":"runtime/Classes/structkernel__fp32/#variable-pim2colbuffer","title":"variable pIm2ColBuffer","text":"<pre><code>uint8_t * pIm2ColBuffer;\n</code></pre> <p>pointer to im2col Buffer (not used) bias for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_relu","title":"variable flag_relu","text":"<pre><code>int flag_relu;\n</code></pre> <p>RELU activation flag </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_batch_norm","title":"variable flag_batch_norm","text":"<pre><code>int flag_batch_norm;\n</code></pre> <p>BatchNorm flag </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_y_accumulate_start","title":"variable flag_y_accumulate_start","text":"<pre><code>int flag_y_accumulate_start;\n</code></pre> <p>indicates that output feature map is initizialized with zeros </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_y_accumulate_end","title":"variable flag_y_accumulate_end","text":"<pre><code>int flag_y_accumulate_end;\n</code></pre> <p>indicates that BN, RELU can be performed </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-memory_chan","title":"variable memory_chan","text":"<pre><code>unsigned int * memory_chan;\n</code></pre> <p>Not used </p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structkernel__fp64/","title":"kernel_fp64","text":"<p>parameters for double-precision fusedconv kernel </p> <p><code>#include &lt;conv2d.h&gt;</code></p>"},{"location":"runtime/Classes/structkernel__fp64/#public-attributes","title":"Public Attributes","text":"Name double * pInBuffer uint16_t dim_in_x uint16_t dim_in_y uint16_t ch_in double * pWeight uint16_t ch_out uint16_t dim_kernel_x uint16_t dim_kernel_y uint16_t padding_y_top uint16_t padding_y_bottom uint16_t padding_x_left uint16_t padding_x_right uint16_t stride_x uint16_t stride_y int8_t * bias uint16_t bias_shift uint16_t out_shift uint16_t out_mult double * pOutBuffer uint16_t dim_out_x uint16_t dim_out_y double * kappa double * lambda uint8_t * pIm2ColBuffer int flag_relu int flag_batch_norm int flag_y_accumulate_start int flag_y_accumulate_end unsigned int * memory_chan"},{"location":"runtime/Classes/structkernel__fp64/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structkernel__fp64/#variable-pinbuffer","title":"variable pInBuffer","text":"<pre><code>double * pInBuffer;\n</code></pre> <p>pointer to the input feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_in_x","title":"variable dim_in_x","text":"<pre><code>uint16_t dim_in_x;\n</code></pre> <p>width of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_in_y","title":"variable dim_in_y","text":"<pre><code>uint16_t dim_in_y;\n</code></pre> <p>height of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-ch_in","title":"variable ch_in","text":"<pre><code>uint16_t ch_in;\n</code></pre> <p>number of input channels </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-pweight","title":"variable pWeight","text":"<pre><code>double * pWeight;\n</code></pre> <p>pointer to weights </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-ch_out","title":"variable ch_out","text":"<pre><code>uint16_t ch_out;\n</code></pre> <p>number of output channels </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_kernel_x","title":"variable dim_kernel_x","text":"<pre><code>uint16_t dim_kernel_x;\n</code></pre> <p>width of kernel </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_kernel_y","title":"variable dim_kernel_y","text":"<pre><code>uint16_t dim_kernel_y;\n</code></pre> <p>height of kernel </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_y_top","title":"variable padding_y_top","text":"<pre><code>uint16_t padding_y_top;\n</code></pre> <p>number of pixels padded on the top </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_y_bottom","title":"variable padding_y_bottom","text":"<pre><code>uint16_t padding_y_bottom;\n</code></pre> <p>number of pixels padded on the bottom </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_x_left","title":"variable padding_x_left","text":"<pre><code>uint16_t padding_x_left;\n</code></pre> <p>number of pixels padded on the left </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_x_right","title":"variable padding_x_right","text":"<pre><code>uint16_t padding_x_right;\n</code></pre> <p>number of pixels padded on the right </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-stride_x","title":"variable stride_x","text":"<pre><code>uint16_t stride_x;\n</code></pre> <p>stride in x direction </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-stride_y","title":"variable stride_y","text":"<pre><code>uint16_t stride_y;\n</code></pre> <p>stride in y direction </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-bias","title":"variable bias","text":"<pre><code>int8_t * bias;\n</code></pre> <p>bias of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-bias_shift","title":"variable bias_shift","text":"<pre><code>uint16_t bias_shift;\n</code></pre> <p>bias shift of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-out_shift","title":"variable out_shift","text":"<pre><code>uint16_t out_shift;\n</code></pre> <p>shift factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-out_mult","title":"variable out_mult","text":"<pre><code>uint16_t out_mult;\n</code></pre> <p>mult factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-poutbuffer","title":"variable pOutBuffer","text":"<pre><code>double * pOutBuffer;\n</code></pre> <p>pointer to output feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_out_x","title":"variable dim_out_x","text":"<pre><code>uint16_t dim_out_x;\n</code></pre> <p>width of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_out_y","title":"variable dim_out_y","text":"<pre><code>uint16_t dim_out_y;\n</code></pre> <p>height of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-kappa","title":"variable kappa","text":"<pre><code>double * kappa;\n</code></pre> <p>multiplication factor for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-lambda","title":"variable lambda","text":"<pre><code>double * lambda;\n</code></pre> <p>bias for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-pim2colbuffer","title":"variable pIm2ColBuffer","text":"<pre><code>uint8_t * pIm2ColBuffer;\n</code></pre> <p>pointer to im2col Buffer (not used) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_relu","title":"variable flag_relu","text":"<pre><code>int flag_relu;\n</code></pre> <p>RELU activation flag </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_batch_norm","title":"variable flag_batch_norm","text":"<pre><code>int flag_batch_norm;\n</code></pre> <p>BatchNorm flag </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_y_accumulate_start","title":"variable flag_y_accumulate_start","text":"<pre><code>int flag_y_accumulate_start;\n</code></pre> <p>indicates that output feature map is initizialized with zeros </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_y_accumulate_end","title":"variable flag_y_accumulate_end","text":"<pre><code>int flag_y_accumulate_end;\n</code></pre> <p>indicates that BN, RELU can be performed </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-memory_chan","title":"variable memory_chan","text":"<pre><code>unsigned int * memory_chan;\n</code></pre> <p>Not used </p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/","title":"network_benchmark_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH uint32_t OUT_CH void * b void * W void * images uint32_t * targets precision_t dtype"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-in_ch","title":"variable IN_CH","text":"<pre><code>uint32_t IN_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-b","title":"variable b","text":"<pre><code>void * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-w","title":"variable W","text":"<pre><code>void * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-images","title":"variable images","text":"<pre><code>void * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp16__t__/","title":"network_fp16_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH __fp16 * b __fp16 * W __fp16 * b_grad __fp16 * W_grad __fp16 * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp16__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-b","title":"variable b","text":"<pre><code>__fp16 * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-w","title":"variable W","text":"<pre><code>__fp16 * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>__fp16 * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>__fp16 * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-images","title":"variable images","text":"<pre><code>__fp16 * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp32__t__/","title":"network_fp32_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH float * b float * W float * b_grad float * W_grad float * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp32__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-b","title":"variable b","text":"<pre><code>float * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-w","title":"variable W","text":"<pre><code>float * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>float * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>float * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-images","title":"variable images","text":"<pre><code>float * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp64__t__/","title":"network_fp64_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH double * b double * W double * b_grad double * W_grad double * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp64__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-b","title":"variable b","text":"<pre><code>double * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-w","title":"variable W","text":"<pre><code>double * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>double * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>double * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-images","title":"variable images","text":"<pre><code>double * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp8__t__/","title":"network_fp8_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH char * b char * W char * b_grad char * W_grad char * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp8__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-b","title":"variable b","text":"<pre><code>char * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-w","title":"variable W","text":"<pre><code>char * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>char * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>char * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-images","title":"variable images","text":"<pre><code>char * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/","title":"network_single_cluster_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH uint32_t OUT_CH void * b void * W void * b_grads void * W_grads void * images uint32_t * targets precision_t dtype"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-in_ch","title":"variable IN_CH","text":"<pre><code>uint32_t IN_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-b","title":"variable b","text":"<pre><code>void * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-w","title":"variable W","text":"<pre><code>void * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-b_grads","title":"variable b_grads","text":"<pre><code>void * b_grads;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-w_grads","title":"variable W_grads","text":"<pre><code>void * W_grads;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-images","title":"variable images","text":"<pre><code>void * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structnetwork__t__/","title":"network_t_","text":"<p>This structure contains all parameters necessary for building a simple neural netowork. </p> <p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH float * b float * W float * b_grad float * W_grad float * images uint32_t * targets precision_t dtype"},{"location":"runtime/Classes/structnetwork__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre> <p>First dimension of the input data matrix (first channel) </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre> <p>Second dimension of the input data matrix (second channel) </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre> <p>Dimension of input matix along which we perform SoftMax </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-b","title":"variable b","text":"<pre><code>float * b;\n</code></pre> <p>Pointer to biases of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-w","title":"variable W","text":"<pre><code>float * W;\n</code></pre> <p>Pointer to weights of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>float * b_grad;\n</code></pre> <p>Pointer to bias gradients of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>float * W_grad;\n</code></pre> <p>Pointer to weight gradients of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-images","title":"variable images","text":"<pre><code>float * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Precision of the neural network (uniform for now) </p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structomp__prof__t/","title":"omp_prof_t","text":"<p><code>#include &lt;omp.h&gt;</code></p>"},{"location":"runtime/Classes/structomp__prof__t/#public-attributes","title":"Public Attributes","text":"Name uint32_t fork_oh"},{"location":"runtime/Classes/structomp__prof__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structomp__prof__t/#variable-fork_oh","title":"variable fork_oh","text":"<pre><code>uint32_t fork_oh;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structomp__t/","title":"omp_t","text":"<p><code>#include &lt;omp.h&gt;</code></p>"},{"location":"runtime/Classes/structomp__t/#public-attributes","title":"Public Attributes","text":"Name omp_team_t plainTeam int numThreads int maxThreads snrt_barrier_t * kmpc_barrier Pointer to the barrier register used for synchronization eg with #pragma omp barrier. _kmp_ptr32 * kmpc_args Usually the arguments passed to __kmpc_fork_call would do a malloc with the amount of arguments passed. This is too slow for our case and thus we reserve a chunk of arguments in TCDM and use it. This limits the maximum number of arguments."},{"location":"runtime/Classes/structomp__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structomp__t/#variable-plainteam","title":"variable plainTeam","text":"<pre><code>omp_team_t plainTeam;\n</code></pre>"},{"location":"runtime/Classes/structomp__t/#variable-numthreads","title":"variable numThreads","text":"<pre><code>int numThreads;\n</code></pre>"},{"location":"runtime/Classes/structomp__t/#variable-maxthreads","title":"variable maxThreads","text":"<pre><code>int maxThreads;\n</code></pre>"},{"location":"runtime/Classes/structomp__t/#variable-kmpc_barrier","title":"variable kmpc_barrier","text":"<pre><code>snrt_barrier_t * kmpc_barrier;\n</code></pre> <p>Pointer to the barrier register used for synchronization eg with #pragma omp barrier. </p>"},{"location":"runtime/Classes/structomp__t/#variable-kmpc_args","title":"variable kmpc_args","text":"<pre><code>_kmp_ptr32 * kmpc_args;\n</code></pre> <p>Usually the arguments passed to __kmpc_fork_call would do a malloc with the amount of arguments passed. This is too slow for our case and thus we reserve a chunk of arguments in TCDM and use it. This limits the maximum number of arguments. </p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structomp__team__t/","title":"omp_team_t","text":"<p><code>#include &lt;omp.h&gt;</code></p>"},{"location":"runtime/Classes/structomp__team__t/#public-attributes","title":"Public Attributes","text":"Name char nbThreads int loop_epoch int loop_start int loop_end int loop_incr int loop_chunk int loop_is_setup int core_epoch"},{"location":"runtime/Classes/structomp__team__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structomp__team__t/#variable-nbthreads","title":"variable nbThreads","text":"<pre><code>char nbThreads;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_epoch","title":"variable loop_epoch","text":"<pre><code>int loop_epoch;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_start","title":"variable loop_start","text":"<pre><code>int loop_start;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_end","title":"variable loop_end","text":"<pre><code>int loop_end;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_incr","title":"variable loop_incr","text":"<pre><code>int loop_incr;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_chunk","title":"variable loop_chunk","text":"<pre><code>int loop_chunk;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_is_setup","title":"variable loop_is_setup","text":"<pre><code>int loop_is_setup;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-core_epoch","title":"variable core_epoch","text":"<pre><code>int core_epoch;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structperf__regs__t/","title":"perf_regs_t","text":"<p><code>#include &lt;perf_cnt.h&gt;</code></p>"},{"location":"runtime/Classes/structperf__regs__t/#public-attributes","title":"Public Attributes","text":"Name volatile perf_reg32_t enable volatile perf_reg32_t hart_select volatile perf_reg32_t perf_counter"},{"location":"runtime/Classes/structperf__regs__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structperf__regs__t/#variable-enable","title":"variable enable","text":"<pre><code>volatile perf_reg32_t enable;\n</code></pre>"},{"location":"runtime/Classes/structperf__regs__t/#variable-hart_select","title":"variable hart_select","text":"<pre><code>volatile perf_reg32_t hart_select;\n</code></pre>"},{"location":"runtime/Classes/structperf__regs__t/#variable-perf_counter","title":"variable perf_counter","text":"<pre><code>volatile perf_reg32_t perf_counter;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structsnrt__allocator__t/","title":"snrt_allocator_t","text":"<p><code>#include &lt;alloc_decls.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__allocator__t/#public-attributes","title":"Public Attributes","text":"Name uint32_t base uint32_t size uint32_t next"},{"location":"runtime/Classes/structsnrt__allocator__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__allocator__t/#variable-base","title":"variable base","text":"<pre><code>uint32_t base;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__allocator__t/#variable-size","title":"variable size","text":"<pre><code>uint32_t size;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__allocator__t/#variable-next","title":"variable next","text":"<pre><code>uint32_t next;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/structsnrt__barrier__t/","title":"snrt_barrier_t","text":"<p><code>#include &lt;sync_decls.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__barrier__t/#public-attributes","title":"Public Attributes","text":"Name uint32_t volatile cnt uint32_t volatile iteration"},{"location":"runtime/Classes/structsnrt__barrier__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__barrier__t/#variable-cnt","title":"variable cnt","text":"<pre><code>uint32_t volatile cnt;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__barrier__t/#variable-iteration","title":"variable iteration","text":"<pre><code>uint32_t volatile iteration;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/unionperf__reg32__t/","title":"perf_reg32_t","text":"<p><code>#include &lt;perf_cnt.h&gt;</code></p>"},{"location":"runtime/Classes/unionperf__reg32__t/#public-functions","title":"Public Functions","text":"Name uint32_t value attribute((aligned(8)) )"},{"location":"runtime/Classes/unionperf__reg32__t/#public-functions-documentation","title":"Public Functions Documentation","text":""},{"location":"runtime/Classes/unionperf__reg32__t/#function-attribute","title":"function attribute","text":"<pre><code>uint32_t value __attribute__(\n    (aligned(8)) \n)\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/unionv2s/","title":"v2s","text":"<p><code>#include &lt;nnlinear_baseline.h&gt;</code></p>"},{"location":"runtime/Classes/unionv2s/#public-attributes","title":"Public Attributes","text":"Name double f64 v2f32 vec"},{"location":"runtime/Classes/unionv2s/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/unionv2s/#variable-f64","title":"variable f64","text":"<pre><code>double f64;\n</code></pre>"},{"location":"runtime/Classes/unionv2s/#variable-vec","title":"variable vec","text":"<pre><code>v2f32 vec;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/unionv4s/","title":"v4s","text":"<p><code>#include &lt;nnlinear_baseline.h&gt;</code></p>"},{"location":"runtime/Classes/unionv4s/#public-attributes","title":"Public Attributes","text":"Name double f64 v4f16 vec"},{"location":"runtime/Classes/unionv4s/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/unionv4s/#variable-f64","title":"variable f64","text":"<pre><code>double f64;\n</code></pre>"},{"location":"runtime/Classes/unionv4s/#variable-vec","title":"variable vec","text":"<pre><code>v4f16 vec;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Classes/unionv8s/","title":"v8s","text":"<p><code>#include &lt;nnlinear_baseline.h&gt;</code></p>"},{"location":"runtime/Classes/unionv8s/#public-attributes","title":"Public Attributes","text":"Name double f64 v8f8 vec"},{"location":"runtime/Classes/unionv8s/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/unionv8s/#variable-f64","title":"variable f64","text":"<pre><code>double f64;\n</code></pre>"},{"location":"runtime/Classes/unionv8s/#variable-vec","title":"variable vec","text":"<pre><code>v8f8 vec;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Examples/","title":"Examples","text":"<p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/","title":"Files","text":"<ul> <li>file README.md </li> <li>dir applications <ul> <li>dir applications/data <ul> <li>file applications/data/data_fp32_nnlinear.h </li> </ul> </li> <li>dir applications/include <ul> <li>file applications/include/layer.h </li> <li>file applications/include/network.h </li> </ul> </li> <li>dir applications/src <ul> <li>dir applications/src/kernels <ul> <li>file applications/src/kernels/batchnorm.h </li> <li>file applications/src/kernels/conv2d.h </li> <li>file applications/src/kernels/gemm.h </li> <li>file applications/src/kernels/maxpool.h </li> <li>file applications/src/kernels/nnlinear_baseline.h </li> </ul> </li> <li>dir applications/src/layers <ul> <li>file applications/src/layers/batchnorm_layer.h </li> <li>file applications/src/layers/conv2d_layer.h </li> <li>file applications/src/layers/maxpool_layer.h </li> <li>file applications/src/layers/nnlinear_backend_baseline.h </li> </ul> </li> <li>dir applications/src/utils <ul> <li>file applications/src/utils/utils.h </li> </ul> </li> </ul> </li> </ul> </li> <li>dir benchmark <ul> <li>dir benchmark/include <ul> <li>file benchmark/include/benchmark.h </li> </ul> </li> <li>dir benchmark/src <ul> <li>dir benchmark/src/matmul <ul> <li>file benchmark/src/matmul/matmul.h </li> </ul> </li> </ul> </li> </ul> </li> <li>dir snRuntime <ul> <li>dir snRuntime/api <ul> <li>file snRuntime/api/alloc_decls.h </li> <li>file snRuntime/api/cls_decls.h </li> <li>file snRuntime/api/cluster_interrupt_decls.h </li> <li>file snRuntime/api/global_interrupt_decls.h </li> <li>file snRuntime/api/memory_decls.h </li> <li>file snRuntime/api/riscv_decls.h </li> <li>dir snRuntime/api/omp <ul> <li>file snRuntime/api/omp/eu_decls.h </li> </ul> </li> <li>file snRuntime/api/start_decls.h </li> <li>file snRuntime/api/sync_decls.h </li> <li>file snRuntime/api/team_decls.h </li> </ul> </li> <li>dir snRuntime/src <ul> <li>file snRuntime/src/alloc.h </li> <li>file snRuntime/src/cls.h </li> <li>file snRuntime/src/cluster_interrupts.h </li> <li>file snRuntime/src/dm.h </li> <li>file snRuntime/src/dma.h </li> <li>file snRuntime/src/global_interrupts.h </li> <li>file snRuntime/src/perf_cnt.h </li> <li>file snRuntime/src/printf.h </li> <li>file snRuntime/src/riscv.h </li> <li>dir snRuntime/src/omp <ul> <li>file snRuntime/src/omp/eu.h </li> <li>file snRuntime/src/omp/interface.h </li> <li>file snRuntime/src/omp/kmp.h </li> <li>file snRuntime/src/omp/omp.h </li> </ul> </li> <li>file snRuntime/src/ssr.h </li> <li>file snRuntime/src/sync.h </li> <li>file snRuntime/src/team.h </li> </ul> </li> <li>dir snRuntime/vendor <ul> <li>dir snRuntime/vendor/printf <ul> <li>file snRuntime/vendor/printf/printf.h </li> </ul> </li> <li>dir snRuntime/vendor/riscv-opcodes <ul> <li>file snRuntime/vendor/riscv-opcodes/encoding.h </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/README_8md/","title":"README.md","text":""},{"location":"runtime/Files/README_8md/#source-code","title":"Source code","text":"<p><pre><code># Applications\n\nThis subdirectory contains some applications or benchmarks specifically implemented and optimized for Snitch.\n\n## Contents\n- Data generation:\n    - `data_gen.py`: script to generate data and expected results for various benchmarks\n    - `data`: output folder of `data_gen.py` which also contains the configuration to generate the data\n- `src`:\n    - `kernels`: basic kernels, currently contains `GEMM`, `BatchNorm`, `Maxpool`, `Fusedconv`\n    - `layers`: wraps the kernel to form a DNN layer. Manages data-movement, synchronization, double buffering etc.\n    - `utils`: some helpful functions for benchmarking, verification, fast `memset`\n    - `net_layer.c`: various ready tests to run layers.\n- `include`: includes `layer` struct.\n\n## SW Testbenches\nThere are currently a few tests for various layer types. Some additional information about these tests is given below:\n- `net_maxpool.c`: Naive implementation of a maxpooling layer, not optimized in any way due to memory-boundness\n- `net-batchnorm.c`: Implementation of a batchnorm layer with SSR streams (both read and write)\n- `net-conv2d.c`: Implementation and tiling of a 2D convolution that can be distributed to multiple clusters. The convolution is implemented as an `im2col` transformation (performed by 2D DMA transfers) + optimized GEMM. The memory layout of input and output feature map is Height x Width x Channels. The convolution is globally parallelized over output channels. Inside a cluster, the output pixels are distributed among the cores. There is an option to load the feature map from a different cluster instead of the main memory by setting `cluster2cluster` in the layer struct to `1`. Currently only `fp64` is implemented, but the data movement for `fp32` or lower precision SIMD should be analogously.\n- `net-gemm.c`: Testbench to benchmark the optimized GEMM implementation for different memory layouts, dimensions and precisions.\n- `net-fusedconv.c`: Implementation of a fused kernel with Conv2d + BatchNorm + ReLU. The interface of the kernel is compatible with DORY. Parameters of a tile can be specified in `data/fusedconv_param.hjson`. Supported paramters are input/output dimension, padding, kernel dimension &amp; stride, flags for BatchNorm and ReLU. Further there are two additional specialized kernels 1) a CHW kernel for input layers with very few input channels, the output of this kernel is in the HWC layout again 2) A depthwise kernel\n\n## Usage\nTo run a specific benchmark, first configure the dimensions and the desired precision `data/app_params.hjson`.\n</code></pre> {     kernel: \"GEMM\"     M: 16,     N: 16,     K: 16,     alpha: 0,     transpose_A: false,     transpose_B: true,     prec: 16 } <pre><code>The file will be automatically generated with a `cmake` macro and is stored in `data/data_app.h`. The result will also be checked. Reference is a golden model written in `python` with help of the `torch`.\n\nThe applications are compiled into a folder which can be enabled by adding `add_subdirectory(${SNITCH_SOFTWARE_DIR}/applications` to `CMakeLists.txt` in the specific `sw` folder.\n\n## Requirements\n- `torch`\n</code></pre></p> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/alloc_8h/","title":"snRuntime/src/alloc.h","text":""},{"location":"runtime/Files/alloc_8h/#functions","title":"Functions","text":"Name snrt_allocator_t * snrt_l1_allocator() snrt_allocator_t * snrt_l3_allocator() void * snrt_l1_next() void * snrt_l3_next() void * snrt_l1alloc(size_t size)Allocate a chunk of memory in the L1 memory. void snrt_l1_update_next(void * next)Override the L1 allocator next pointer. void * snrt_l3alloc(size_t size)Allocate a chunk of memory in the L3 memory. void snrt_alloc_init() void * snrt_memset(void * ptr, int value, size_t num)"},{"location":"runtime/Files/alloc_8h/#attributes","title":"Attributes","text":"Name snrt_allocator_t l3_allocator"},{"location":"runtime/Files/alloc_8h/#defines","title":"Defines","text":"Name ALIGN_UP(addr, size) ALIGN_DOWN(addr, size) MIN_CHUNK_SIZE"},{"location":"runtime/Files/alloc_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/alloc_8h/#function-snrt_l1_allocator","title":"function snrt_l1_allocator","text":"<pre><code>inline snrt_allocator_t * snrt_l1_allocator()\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#function-snrt_l3_allocator","title":"function snrt_l3_allocator","text":"<pre><code>inline snrt_allocator_t * snrt_l3_allocator()\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#function-snrt_l1_next","title":"function snrt_l1_next","text":"<pre><code>inline void * snrt_l1_next()\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#function-snrt_l3_next","title":"function snrt_l3_next","text":"<pre><code>inline void * snrt_l3_next()\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#function-snrt_l1alloc","title":"function snrt_l1alloc","text":"<pre><code>inline void * snrt_l1alloc(\n    size_t size\n)\n</code></pre> <p>Allocate a chunk of memory in the L1 memory. </p> <p>Parameters: </p> <ul> <li>size number of bytes to allocate </li> </ul> <p>Return: pointer to the allocated memory </p> <p>This currently does not support free-ing of memory</p>"},{"location":"runtime/Files/alloc_8h/#function-snrt_l1_update_next","title":"function snrt_l1_update_next","text":"<pre><code>inline void snrt_l1_update_next(\n    void * next\n)\n</code></pre> <p>Override the L1 allocator next pointer. </p>"},{"location":"runtime/Files/alloc_8h/#function-snrt_l3alloc","title":"function snrt_l3alloc","text":"<pre><code>inline void * snrt_l3alloc(\n    size_t size\n)\n</code></pre> <p>Allocate a chunk of memory in the L3 memory. </p> <p>Parameters: </p> <ul> <li>size number of bytes to allocate </li> </ul> <p>Return: pointer to the allocated memory </p> <p>This currently does not support free-ing of memory</p>"},{"location":"runtime/Files/alloc_8h/#function-snrt_alloc_init","title":"function snrt_alloc_init","text":"<pre><code>inline void snrt_alloc_init()\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#function-snrt_memset","title":"function snrt_memset","text":"<pre><code>inline void * snrt_memset(\n    void * ptr,\n    int value,\n    size_t num\n)\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/alloc_8h/#variable-l3_allocator","title":"variable l3_allocator","text":"<pre><code>snrt_allocator_t l3_allocator;\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/alloc_8h/#define-align_up","title":"define ALIGN_UP","text":"<pre><code>#define ALIGN_UP(\n    addr,\n    size\n)\n(((addr) + (size)-1) &amp; ~((size)-1))\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#define-align_down","title":"define ALIGN_DOWN","text":"<pre><code>#define ALIGN_DOWN(\n    addr,\n    size\n)\n((addr) &amp; ~((size)-1))\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#define-min_chunk_size","title":"define MIN_CHUNK_SIZE","text":"<pre><code>#define MIN_CHUNK_SIZE 8\n</code></pre>"},{"location":"runtime/Files/alloc_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#define ALIGN_UP(addr, size) (((addr) + (size)-1) &amp; ~((size)-1))\n#define ALIGN_DOWN(addr, size) ((addr) &amp; ~((size)-1))\n\n#define MIN_CHUNK_SIZE 8\n\nextern snrt_allocator_t l3_allocator;\n\ninline snrt_allocator_t *snrt_l1_allocator() {\n    return (snrt_allocator_t *)&amp;(cls()-&gt;l1_allocator);\n}\n\ninline snrt_allocator_t *snrt_l3_allocator() { return &amp;l3_allocator; }\n\ninline void *snrt_l1_next() { return (void *)snrt_l1_allocator()-&gt;next; }\n\ninline void *snrt_l3_next() { return (void *)snrt_l3_allocator()-&gt;next; }\n\ninline void *snrt_l1alloc(size_t size) {\n    snrt_allocator_t *alloc = snrt_l1_allocator();\n\n    // TODO colluca: do we need this? What does it imply?\n    //               one more instruction, TCDM consumption...\n    size = ALIGN_UP(size, MIN_CHUNK_SIZE);\n\n    // TODO colluca\n    // if (alloc-&gt;next + size &gt; alloc-&gt;base + alloc-&gt;size) {\n    //     snrt_trace(\n    //         SNRT_TRACE_ALLOC,\n    //         \"Not enough memory to allocate: base %#x size %#x next %#x\\n\",\n    //         alloc-&gt;base, alloc-&gt;size, alloc-&gt;next);\n    //     return 0;\n    // }\n\n    void *ret = (void *)alloc-&gt;next;\n    alloc-&gt;next += size;\n    return ret;\n}\n\ninline void snrt_l1_update_next(void *next) {\n    snrt_allocator_t *alloc = snrt_l1_allocator();\n    alloc-&gt;next = (uint32_t)next;\n}\n\ninline void *snrt_l3alloc(size_t size) {\n    snrt_allocator_t *alloc = snrt_l3_allocator();\n\n    // TODO: L3 alloc size check\n\n    void *ret = (void *)alloc-&gt;next;\n    alloc-&gt;next += size;\n    return ret;\n}\n\ninline void snrt_alloc_init() {\n    // Only one core per cluster has to initialize the L1 allocator\n    if (snrt_is_dm_core()) {\n        // Initialize L1 allocator\n        // Note: at the moment the allocator assumes all of the TCDM is\n        // available for allocation. However, the CLS, TLS and stack already\n        // occupy a possibly significant portion.\n        snrt_l1_allocator()-&gt;base =\n            ALIGN_UP(snrt_l1_start_addr(), MIN_CHUNK_SIZE);\n        snrt_l1_allocator()-&gt;size = snrt_l1_end_addr() - snrt_l1_start_addr();\n        snrt_l1_allocator()-&gt;next = snrt_l1_allocator()-&gt;base;\n        // Initialize L3 allocator\n        extern uint32_t _edram;\n        snrt_l3_allocator()-&gt;base = ALIGN_UP((uint32_t)&amp;_edram, MIN_CHUNK_SIZE);\n        snrt_l3_allocator()-&gt;size = 0;\n        snrt_l3_allocator()-&gt;next = snrt_l3_allocator()-&gt;base;\n    }\n}\n\n// TODO colluca: optimize by using DMA\ninline void *snrt_memset(void *ptr, int value, size_t num) {\n    for (uint32_t i = 0; i &lt; num; ++i)\n        *((uint8_t *)ptr + i) = (unsigned char)value;\n    return ptr;\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/alloc__decls_8h/","title":"snRuntime/api/alloc_decls.h","text":""},{"location":"runtime/Files/alloc__decls_8h/#classes","title":"Classes","text":"Name struct snrt_allocator_t"},{"location":"runtime/Files/alloc__decls_8h/#functions","title":"Functions","text":"Name void * snrt_l1_next() void * snrt_l3_next() void * snrt_l1alloc(size_t size)Allocate a chunk of memory in the L1 memory. void snrt_l1_update_next(void * next)Override the L1 allocator next pointer. void * snrt_l3alloc(size_t size)Allocate a chunk of memory in the L3 memory. void snrt_alloc_init()"},{"location":"runtime/Files/alloc__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/alloc__decls_8h/#function-snrt_l1_next","title":"function snrt_l1_next","text":"<pre><code>inline void * snrt_l1_next()\n</code></pre>"},{"location":"runtime/Files/alloc__decls_8h/#function-snrt_l3_next","title":"function snrt_l3_next","text":"<pre><code>inline void * snrt_l3_next()\n</code></pre>"},{"location":"runtime/Files/alloc__decls_8h/#function-snrt_l1alloc","title":"function snrt_l1alloc","text":"<pre><code>inline void * snrt_l1alloc(\n    size_t size\n)\n</code></pre> <p>Allocate a chunk of memory in the L1 memory. </p> <p>Parameters: </p> <ul> <li>size number of bytes to allocate </li> </ul> <p>Return: pointer to the allocated memory </p> <p>This currently does not support free-ing of memory</p>"},{"location":"runtime/Files/alloc__decls_8h/#function-snrt_l1_update_next","title":"function snrt_l1_update_next","text":"<pre><code>inline void snrt_l1_update_next(\n    void * next\n)\n</code></pre> <p>Override the L1 allocator next pointer. </p>"},{"location":"runtime/Files/alloc__decls_8h/#function-snrt_l3alloc","title":"function snrt_l3alloc","text":"<pre><code>inline void * snrt_l3alloc(\n    size_t size\n)\n</code></pre> <p>Allocate a chunk of memory in the L3 memory. </p> <p>Parameters: </p> <ul> <li>size number of bytes to allocate </li> </ul> <p>Return: pointer to the allocated memory </p> <p>This currently does not support free-ing of memory</p>"},{"location":"runtime/Files/alloc__decls_8h/#function-snrt_alloc_init","title":"function snrt_alloc_init","text":"<pre><code>inline void snrt_alloc_init()\n</code></pre>"},{"location":"runtime/Files/alloc__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ntypedef struct {\n    // Base address from where allocation starts\n    uint32_t base;\n    // Number of bytes alloctable\n    uint32_t size;\n    // Address of the next allocated block\n    uint32_t next;\n} snrt_allocator_t;\n\ninline void *snrt_l1_next();\n\ninline void *snrt_l3_next();\n\ninline void *snrt_l1alloc(size_t size);\n\ninline void snrt_l1_update_next(void *next);\n\ninline void *snrt_l3alloc(size_t size);\n\ninline void snrt_alloc_init();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/batchnorm_8h/","title":"applications/src/kernels/batchnorm.h","text":""},{"location":"runtime/Files/batchnorm_8h/#functions","title":"Functions","text":"Name void batchnorm_fp64(double * ifmap, double * gamma, double * beta, double * ofmap, uint32_t OW, uint32_t CI, uint32_t compute_num, uint32_t setup_SSR)implementation of a FP64 batchnorm as a linear combination y = gamma * x + beta"},{"location":"runtime/Files/batchnorm_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/batchnorm_8h/#function-batchnorm_fp64","title":"function batchnorm_fp64","text":"<pre><code>void batchnorm_fp64(\n    double * ifmap,\n    double * gamma,\n    double * beta,\n    double * ofmap,\n    uint32_t OW,\n    uint32_t CI,\n    uint32_t compute_num,\n    uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP64 batchnorm as a linear combination y = gamma * x + beta </p> <p>Parameters: </p> <ul> <li>ifmap pointer to input feature map </li> <li>gamma pointer to gamma </li> <li>beta pointer to beta </li> <li>ofmap pointer to output feature map </li> <li>OW width of output feature map </li> <li>CI number of input channels </li> <li>compute_num number of compute units </li> <li>setup_SSR setup SSR strides and bounds </li> </ul>"},{"location":"runtime/Files/batchnorm_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"snrt.h\"\n\nvoid batchnorm_fp64(double *ifmap, double *gamma, double *beta, double *ofmap,\n                    uint32_t OW, uint32_t CI, uint32_t compute_num,\n                    uint32_t setup_SSR);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/batchnorm__layer_8h/","title":"applications/src/layers/batchnorm_layer.h","text":""},{"location":"runtime/Files/batchnorm__layer_8h/#functions","title":"Functions","text":"Name void batchnorm_layer(const conv_layer * l)batchnorm layer that handles data transfers in a double buffered fashion"},{"location":"runtime/Files/batchnorm__layer_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/batchnorm__layer_8h/#function-batchnorm_layer","title":"function batchnorm_layer","text":"<pre><code>void batchnorm_layer(\n    const conv_layer * l\n)\n</code></pre> <p>batchnorm layer that handles data transfers in a double buffered fashion </p> <p>Parameters: </p> <ul> <li>l conv_layer struct that holds addresses and parameters </li> </ul>"},{"location":"runtime/Files/batchnorm__layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n\nvoid batchnorm_layer(const conv_layer *l);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/benchmark_8h/","title":"benchmark/include/benchmark.h","text":""},{"location":"runtime/Files/benchmark_8h/#functions","title":"Functions","text":"Name size_t benchmark_get_cycle()"},{"location":"runtime/Files/benchmark_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/benchmark_8h/#function-benchmark_get_cycle","title":"function benchmark_get_cycle","text":"<pre><code>size_t benchmark_get_cycle()\n</code></pre>"},{"location":"runtime/Files/benchmark_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n#include &lt;snrt.h&gt;\n#include &lt;stddef.h&gt;\n\n#include \"printf.h\"\n\nsize_t benchmark_get_cycle();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/cls_8h/","title":"snRuntime/src/cls.h","text":""},{"location":"runtime/Files/cls_8h/#functions","title":"Functions","text":"Name cls_t * cls()"},{"location":"runtime/Files/cls_8h/#attributes","title":"Attributes","text":"Name __thread cls_t * _cls_ptr"},{"location":"runtime/Files/cls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/cls_8h/#function-cls","title":"function cls","text":"<pre><code>inline cls_t * cls()\n</code></pre>"},{"location":"runtime/Files/cls_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/cls_8h/#variable-_cls_ptr","title":"variable _cls_ptr","text":"<pre><code>__thread cls_t * _cls_ptr;\n</code></pre>"},{"location":"runtime/Files/cls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\nextern __thread cls_t* _cls_ptr;\n\ninline cls_t* cls() { return _cls_ptr; }\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/cls__decls_8h/","title":"snRuntime/api/cls_decls.h","text":""},{"location":"runtime/Files/cls__decls_8h/#classes","title":"Classes","text":"Name struct cls_t"},{"location":"runtime/Files/cls__decls_8h/#functions","title":"Functions","text":"Name cls_t * cls()"},{"location":"runtime/Files/cls__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/cls__decls_8h/#function-cls","title":"function cls","text":"<pre><code>inline cls_t * cls()\n</code></pre>"},{"location":"runtime/Files/cls__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ntypedef struct {\n    uint32_t hw_barrier;\n    snrt_allocator_t l1_allocator;\n} cls_t;\n\ninline cls_t* cls();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/cluster__interrupt__decls_8h/","title":"snRuntime/api/cluster_interrupt_decls.h","text":""},{"location":"runtime/Files/cluster__interrupt__decls_8h/#functions","title":"Functions","text":"Name void snrt_int_cluster_set(uint32_t mask)Write mask to the cluster-local interrupt set register. void snrt_int_cluster_clr(uint32_t mask)Write mask to the cluster-local interrupt clear register. void snrt_int_clr_mcip() void snrt_int_set_mcip()"},{"location":"runtime/Files/cluster__interrupt__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/cluster__interrupt__decls_8h/#function-snrt_int_cluster_set","title":"function snrt_int_cluster_set","text":"<pre><code>inline void snrt_int_cluster_set(\n    uint32_t mask\n)\n</code></pre> <p>Write mask to the cluster-local interrupt set register. </p> <p>Parameters: </p> <ul> <li>mask set bit at X sets the interrupt of hart X </li> </ul>"},{"location":"runtime/Files/cluster__interrupt__decls_8h/#function-snrt_int_cluster_clr","title":"function snrt_int_cluster_clr","text":"<pre><code>inline void snrt_int_cluster_clr(\n    uint32_t mask\n)\n</code></pre> <p>Write mask to the cluster-local interrupt clear register. </p> <p>Parameters: </p> <ul> <li>mask set bit at X clears the interrupt of hart X </li> </ul>"},{"location":"runtime/Files/cluster__interrupt__decls_8h/#function-snrt_int_clr_mcip","title":"function snrt_int_clr_mcip","text":"<pre><code>inline void snrt_int_clr_mcip()\n</code></pre>"},{"location":"runtime/Files/cluster__interrupt__decls_8h/#function-snrt_int_set_mcip","title":"function snrt_int_set_mcip","text":"<pre><code>inline void snrt_int_set_mcip()\n</code></pre>"},{"location":"runtime/Files/cluster__interrupt__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline void snrt_int_cluster_set(uint32_t mask);\n\ninline void snrt_int_cluster_clr(uint32_t mask);\n\ninline void snrt_int_clr_mcip();\n\ninline void snrt_int_set_mcip();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/cluster__interrupts_8h/","title":"snRuntime/src/cluster_interrupts.h","text":""},{"location":"runtime/Files/cluster__interrupts_8h/#functions","title":"Functions","text":"Name void snrt_int_cluster_set(uint32_t mask)Write mask to the cluster-local interrupt set register. void snrt_int_cluster_clr(uint32_t mask)Write mask to the cluster-local interrupt clear register. void snrt_int_clr_mcip() void snrt_int_set_mcip()"},{"location":"runtime/Files/cluster__interrupts_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/cluster__interrupts_8h/#function-snrt_int_cluster_set","title":"function snrt_int_cluster_set","text":"<pre><code>inline void snrt_int_cluster_set(\n    uint32_t mask\n)\n</code></pre> <p>Write mask to the cluster-local interrupt set register. </p> <p>Parameters: </p> <ul> <li>mask set bit at X sets the interrupt of hart X </li> </ul>"},{"location":"runtime/Files/cluster__interrupts_8h/#function-snrt_int_cluster_clr","title":"function snrt_int_cluster_clr","text":"<pre><code>inline void snrt_int_cluster_clr(\n    uint32_t mask\n)\n</code></pre> <p>Write mask to the cluster-local interrupt clear register. </p> <p>Parameters: </p> <ul> <li>mask set bit at X clears the interrupt of hart X </li> </ul>"},{"location":"runtime/Files/cluster__interrupts_8h/#function-snrt_int_clr_mcip","title":"function snrt_int_clr_mcip","text":"<pre><code>inline void snrt_int_clr_mcip()\n</code></pre>"},{"location":"runtime/Files/cluster__interrupts_8h/#function-snrt_int_set_mcip","title":"function snrt_int_set_mcip","text":"<pre><code>inline void snrt_int_set_mcip()\n</code></pre>"},{"location":"runtime/Files/cluster__interrupts_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline void snrt_int_cluster_set(uint32_t mask) {\n    *(snrt_cluster_clint_set_ptr()) = mask;\n}\n\ninline void snrt_int_cluster_clr(uint32_t mask) {\n    *(snrt_cluster_clint_clr_ptr()) = mask;\n}\n\ninline void snrt_int_clr_mcip() {\n    snrt_int_cluster_clr(1 &lt;&lt; snrt_cluster_core_idx());\n}\n\ninline void snrt_int_set_mcip() {\n    snrt_int_cluster_set(1 &lt;&lt; snrt_cluster_core_idx());\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/conv2d_8h/","title":"applications/src/kernels/conv2d.h","text":""},{"location":"runtime/Files/conv2d_8h/#classes","title":"Classes","text":"Name struct kernel_fp32 parameters for single-precision fusedconv kernel struct kernel_fp64 parameters for double-precision fusedconv kernel"},{"location":"runtime/Files/conv2d_8h/#functions","title":"Functions","text":"Name void occamy_conv_opt_fp64(kernel_fp64 * k)implementation of a double-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void occamy_conv_opt_fp32(kernel_fp32 * k)implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void occamy_conv_dw_opt_fp32(kernel_fp32 * k)implementation of a single-precision fp DEPTHWISE convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void occamy_conv_chw_opt_fp32(kernel_fp32 * k)implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input feature map is C x H x W, resp. Co x Fh x Fw x Ci for weights Howevever, the output memory layout is H x W x C. This kernel should be used for the first layers in a network where Ci is very small and usually odd numbered. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void bn_relu(const float * pBuffer, const uint16_t dim_x, const uint16_t dim_y, const uint16_t ch, float * kappa, float * lambda, int flag_relu, int flag_batch_norm)helper function that implements Batch Normalization and ReLU"},{"location":"runtime/Files/conv2d_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_opt_fp64","title":"function occamy_conv_opt_fp64","text":"<pre><code>void occamy_conv_opt_fp64(\n    kernel_fp64 * k\n)\n</code></pre> <p>implementation of a double-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp64 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_opt_fp32","title":"function occamy_conv_opt_fp32","text":"<pre><code>void occamy_conv_opt_fp32(\n    kernel_fp32 * k\n)\n</code></pre> <p>implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp32 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_dw_opt_fp32","title":"function occamy_conv_dw_opt_fp32","text":"<pre><code>void occamy_conv_dw_opt_fp32(\n    kernel_fp32 * k\n)\n</code></pre> <p>implementation of a single-precision fp DEPTHWISE convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp32 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_chw_opt_fp32","title":"function occamy_conv_chw_opt_fp32","text":"<pre><code>void occamy_conv_chw_opt_fp32(\n    kernel_fp32 * k\n)\n</code></pre> <p>implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input feature map is C x H x W, resp. Co x Fh x Fw x Ci for weights Howevever, the output memory layout is H x W x C. This kernel should be used for the first layers in a network where Ci is very small and usually odd numbered. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp32 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-bn_relu","title":"function bn_relu","text":"<pre><code>void bn_relu(\n    const float * pBuffer,\n    const uint16_t dim_x,\n    const uint16_t dim_y,\n    const uint16_t ch,\n    float * kappa,\n    float * lambda,\n    int flag_relu,\n    int flag_batch_norm\n)\n</code></pre> <p>helper function that implements Batch Normalization and ReLU </p> <p>Parameters: </p> <ul> <li>pBuffer pointer to the feature map </li> <li>dim_x width of feature map </li> <li>dim_y height of feature map </li> <li>ch number of channels (SIMD restricts multiple of 2) </li> <li>kappa multiplication factor for BatchNorm </li> <li>lambda bias for BatchNorm </li> <li>flag_relu RELU activation flag </li> <li>flag_batch_norm BatchNorm flag </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include \"snrt.h\"\n\ntypedef struct {\n    float *pInBuffer;\n    uint16_t dim_in_x;\n    uint16_t dim_in_y;\n    uint16_t ch_in;\n    float *pWeight;\n    uint16_t ch_out;\n    uint16_t dim_kernel_x;\n    uint16_t dim_kernel_y;\n    uint16_t padding_y_top;\n    uint16_t padding_y_bottom;\n    uint16_t padding_x_left;\n    uint16_t padding_x_right;\n    uint16_t stride_x;\n    uint16_t stride_y;\n    int8_t *bias;\n    uint16_t bias_shift;\n    uint16_t out_shift;\n    uint16_t out_mult;\n    float *pOutBuffer;\n    uint16_t dim_out_x;\n    uint16_t dim_out_y;\n    float *kappa;\n    float *lambda;\n    uint8_t *pIm2ColBuffer;\n    int flag_relu;\n    int flag_batch_norm;\n    int flag_y_accumulate_start;\n    int flag_y_accumulate_end;\n    unsigned int *memory_chan;\n} kernel_fp32;\n\ntypedef struct {\n    double *pInBuffer;\n    uint16_t dim_in_x;\n    uint16_t dim_in_y;\n    uint16_t ch_in;\n    double *pWeight;\n    uint16_t ch_out;\n    uint16_t dim_kernel_x;\n    uint16_t dim_kernel_y;\n    uint16_t padding_y_top;\n    uint16_t padding_y_bottom;\n    uint16_t padding_x_left;\n    uint16_t padding_x_right;\n    uint16_t stride_x;\n    uint16_t stride_y;\n    int8_t *bias;\n    uint16_t bias_shift;\n    uint16_t out_shift;\n    uint16_t out_mult;\n    double *pOutBuffer;\n    uint16_t dim_out_x;\n    uint16_t dim_out_y;\n    double *kappa;\n    double *lambda;\n    uint8_t *pIm2ColBuffer;\n    int flag_relu;\n    int flag_batch_norm;\n    int flag_y_accumulate_start;\n    int flag_y_accumulate_end;\n    unsigned int *memory_chan;\n} kernel_fp64;\n\nvoid occamy_conv_opt_fp64(kernel_fp64 *k);\n\nvoid occamy_conv_opt_fp32(kernel_fp32 *k);\n\nvoid occamy_conv_dw_opt_fp32(kernel_fp32 *k);\n\nvoid occamy_conv_chw_opt_fp32(kernel_fp32 *k);\n\nvoid bn_relu(const float *pBuffer, const uint16_t dim_x, const uint16_t dim_y,\n             const uint16_t ch, float *kappa, float *lambda, int flag_relu,\n             int flag_batch_norm);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/conv2d__layer_8h/","title":"applications/src/layers/conv2d_layer.h","text":""},{"location":"runtime/Files/conv2d__layer_8h/#functions","title":"Functions","text":"Name void conv2d_layer(const conv_layer * l)conv2d layer that handles data transfers in a double buffered fashion"},{"location":"runtime/Files/conv2d__layer_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/conv2d__layer_8h/#function-conv2d_layer","title":"function conv2d_layer","text":"<pre><code>void conv2d_layer(\n    const conv_layer * l\n)\n</code></pre> <p>conv2d layer that handles data transfers in a double buffered fashion </p> <p>Parameters: </p> <ul> <li>l conv_layer struct that holds addresses and parameters </li> </ul>"},{"location":"runtime/Files/conv2d__layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n\nvoid conv2d_layer(const conv_layer *l);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/","title":"applications/data/data_fp32_nnlinear.h","text":""},{"location":"runtime/Files/data__fp32__nnlinear_8h/#attributes","title":"Attributes","text":"Name network_fp32_t nn_linear_baseline_t float nn_linear_baseline_weights_dram float nn_linear_baseline_biases_dram"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/data__fp32__nnlinear_8h/#variable-nn_linear_baseline_t","title":"variable nn_linear_baseline_t","text":"<pre><code>network_fp32_t nn_linear_baseline_t = {.IN_CH1 = 28,\n                                       .IN_CH2 = 28,\n                                       .OUT_CH = 10,\n                                       .learning_rate = 0.5,\n                                       .dtype = FP32};\n</code></pre>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#variable-nn_linear_baseline_weights_dram","title":"variable nn_linear_baseline_weights_dram","text":"<pre><code>static float nn_linear_baseline_weights_dram;\n</code></pre>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#variable-nn_linear_baseline_biases_dram","title":"variable nn_linear_baseline_biases_dram","text":"<pre><code>static float nn_linear_baseline_biases_dram = {\n    0.029830838495251873,  -0.027718893800693683, 0.014915538915354814,\n    0.013144414092396091,  0.026214015226942618,  0.005715480139309234,\n    -0.016521356227486333, 0.01685057481095459,   0.007825814410188814,\n    0.031028853769378233};\n</code></pre>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2022 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"network.h\"\n\n// This file is used to initialize the network\n// parameters with the same values as in the\n// Python golden model implementation.\nnetwork_fp32_t nn_linear_baseline_t = {.IN_CH1 = 28,\n                                       .IN_CH2 = 28,\n                                       .OUT_CH = 10,\n                                       .learning_rate = 0.5,\n                                       .dtype = FP32};\n\nstatic float nn_linear_baseline_weights_dram[10][784] = {\n    -0.031560393859897874,   -0.031220702326815886,   -0.02688670908754221,\n    -0.031958559688494495,   0.0018694212039115602,   -0.0016582318723228826,\n    0.03251683573208154,     0.030625184389816394,    -0.02974690223193801,\n    -0.02623995198902153,    -0.024496178749235136,   -0.008902354853535672,\n    0.02446569505939191,     0.02646436012740696,     -0.008747646052102898,\n    0.008031184928127948,    -0.029420729648959212,   0.01437013513927148,\n    0.00881450595387147,     -0.0044800715863819885,  -0.030376080109017996,\n    0.013102158364761496,    -0.013411522805502674,   -0.013638658769766252,\n    -0.03347570246947031,    -0.03283096659571734,    0.030850627846785612,\n    -0.02484815518410254,    -0.016782506303688507,   -0.026397607669135393,\n    -0.01772462707561974,    -0.019042272210146583,   -0.019595350086179526,\n    -0.013030871588783466,   0.008172020342970399,    0.006983667966859888,\n    0.02492877469629074,     -0.033393170803144294,   -0.013625443287390673,\n    -0.004835446110332891,   0.031021343299206892,    -0.02697764692323844,\n    -0.005164617355733353,   -0.01512972317216705,    0.034385789538658916,\n    0.024687894935655888,    -0.008265855477337245,   -0.028620951245796212,\n    0.01161771391801586,     0.005852461927730415,    0.01495139402269543,\n    -0.0019980345537277994,  -0.029012360056801134,   0.0076009861625556275,\n    -6.056760815225421e-05,  0.0356025466421935,      -0.019097206577438082,\n    -0.009078212437143802,   0.008963208919662362,    -0.015963695916657774,\n    -0.03492247215951814,    0.015915514390541126,    -0.017541456673786694,\n    0.009343622931593172,    -0.010437161342271739,   -0.0041723497935981825,\n    0.008058013107896063,    0.02853005835897382,     0.012837001788153135,\n    -0.02539694570127634,    0.004092332120674566,    0.03355119206183898,\n    -0.013620955123907375,   -0.031070906814765827,   0.010274093877994979,\n    -0.035237898480022456,   0.004404361110414106,    0.01024535473077222,\n    -0.025871050321135163,   -0.014298271623350027,   0.00970046350065555,\n    0.0010400312100367626,   0.012796711765361377,    -0.023749781648831535,\n    0.027985391236756765,    0.03396033102860969,     -0.019039610750410028,\n    0.01555004374373951,     -0.03487850729930664,    -0.02884563776674017,\n    0.030643087513518106,    0.01609413449811319,     -0.02944507865464626,\n    -0.00030649607573512186, 0.03148536191900533,     -0.014758313028008879,\n    0.004059134574034887,    0.007429331060505814,    -0.031545045057824427,\n    0.032974658752141894,    -0.009501903541987345,   -0.009391564118173308,\n    0.021503569850770905,    0.003770000441281467,    0.014010740666098372,\n    0.00360620377463537,     -0.0025554200635266667,  -0.009376178364711845,\n    0.0056164585812968106,   0.011061518494247222,    -0.0063587360795928395,\n    -0.022771907517983626,   -0.03422976819603633,    -0.0335329500050651,\n    -0.02064977014084346,    0.017948881439977738,    0.03003022392955638,\n    -0.028894308072841313,   0.032916405653281265,    0.005207958369426121,\n    0.009817706587926085,    -0.021786439204289527,   -0.016349557235293813,\n    -0.008118756425985347,   0.022229625418871586,    0.015483209082752516,\n    -0.01469682446313406,    0.01973098703048088,     -0.018716874645238246,\n    -0.034966348440666796,   0.025552221190247415,    0.02691339398915536,\n    -0.0011230785706270294,  -0.004580523486630556,   -0.030065871365034722,\n    0.029972254166065724,    -0.001200009819371287,   0.020201833038199724,\n    0.015245167353910943,    -0.020735050817373393,   -0.02913818199716079,\n    0.010724670420519642,    -0.009647856021929191,   -0.021515432491066497,\n    -0.01047675957882438,    0.0031765619952684055,   -0.00801791543228448,\n    -0.0009547161702762597,  -0.005107708213985445,   0.011996825935883129,\n    -0.02653392266030506,    0.008767900490946674,    0.01747790510091047,\n    -0.007196308960806879,   0.008009759115937383,    0.01637157687789113,\n    0.0024000944700692645,   0.021212249812209934,    0.01297849390029691,\n    -0.00806540069785272,    -0.020010012548288936,   0.033023969903099075,\n    -0.0022254194932514143,  -0.016675308212829334,   0.02953174449188785,\n    0.014250624204279472,    0.032684173182037264,    0.0349929569725585,\n    0.0005350405270304297,   -0.02508915063453039,    0.01084444251200295,\n    0.03370512251000862,     0.019040884614026594,    0.02595364532014257,\n    -0.013293705797994096,   -0.028397017188642324,   -0.032822731645719666,\n    -0.03328597485163059,    -0.005499095994741354,   0.010205973069671795,\n    0.00027778268596526497,  -0.007587153262015145,   0.019466622946874557,\n    0.020785661962522763,    -0.01682491886445392,    0.010524040459051285,\n    0.012218815332424391,    -0.032052431221148224,   0.016028106581455526,\n    -0.013323034686575648,   0.012461524875482537,    -0.0001521942174963328,\n    -0.031702147802749846,   0.006556721711400949,    -0.011927731416179388,\n    -0.022771470875132805,   0.018373211678816215,    -0.01558566582801377,\n    0.018071563056813858,    -0.022491731379028934,   0.027200693775192415,\n    -0.012954339448554286,   -0.034600128945601154,   -0.0186449572362814,\n    0.033336761361756596,    0.02396836867614369,     0.02240855149314891,\n    0.025114978165757394,    -0.009561937743562374,   -0.011792887777469523,\n    0.021914396477213882,    -0.03561655288341595,    -0.020239149009927085,\n    -0.014032357899623323,   0.0030746466117369292,   0.027580278052388454,\n    -0.005815091173216031,   0.02245723746397785,     -0.0037013549746609292,\n    -0.020747364557132726,   0.0208004647684368,      0.028286543660171824,\n    0.024708731134076803,    -0.029859725532101866,   -0.026110299980237766,\n    0.013627651414559468,    0.016114574803381528,    -0.031132953959119303,\n    0.029381544457121732,    0.005136572783142009,    0.0195389253779278,\n    -0.007087787726832875,   -6.009275831293197e-05,  0.012588496350137288,\n    0.025545536796885527,    0.005852716282210393,    -0.034157256671217516,\n    0.021363488897392296,    0.03051921448039251,     0.015904596688083455,\n    -0.03148666552323908,    0.0104096371637187,      0.010161974889687833,\n    -0.029642283994171275,   0.011081455539697955,    -0.02168412444420174,\n    0.030081086593524476,    0.014933605612770795,    -0.00045003276785497503,\n    0.03309740595634522,     -0.033475661083731546,   0.012868206532036646,\n    -0.026577872260132702,   -0.031694702241084456,   -0.027060393854997263,\n    -0.012214919679796288,   -0.018215763765977434,   -0.0022127311564571167,\n    -0.0010515257148697324,  -0.03446663417411814,    0.0024860815028978317,\n    0.009306408972290086,    0.02800428030026477,     0.002795433837706156,\n    0.025717644097149866,    -0.02899112535647694,    -0.0008403186586472623,\n    0.01338559249166077,     -0.018723094367300575,   -0.01599242699111735,\n    0.005117907516644894,    -0.027697895043000454,   0.01886506119842902,\n    -0.013095989172997376,   -0.019339663465198092,   -0.02818759414487533,\n    0.029180669589517903,    -0.026705058270150815,   0.0091552528920795,\n    0.02024238623103167,     0.016495155832329838,    -0.020422048990495805,\n    -0.021864905396022285,   -0.0017852293261757602,  -0.013019334519722052,\n    0.007841564183666645,    0.0031964491109036887,   -0.011699166235212157,\n    0.024034664935163173,    -0.033820225156899045,   -0.0025344150321359644,\n    -0.0007786396968456541,  0.013281866593548748,    0.012173977480017409,\n    -0.020004431634247682,   0.0038703110514027622,   0.03191444776885579,\n    -0.035610336397313105,   0.012834973242118098,    0.020828377928838585,\n    0.02458341443130075,     -0.020407969224319873,   -0.019948186209807855,\n    -0.003110949027433101,   -0.033210102737105965,   0.003217866404971641,\n    -0.008348883404217316,   -0.006080728222046067,   0.0029520443106005796,\n    0.011747034397150396,    -0.03475203704688725,    0.012762555083565472,\n    0.029880121242443936,    0.00028297154811338495,  -0.029479216564911544,\n    -0.010345163055832036,   0.002545631210926404,    0.02905470695542377,\n    -0.008353082031787085,   -0.0001819733283396352,  0.022587268484432002,\n    -0.0005389900593758386,  -0.02969878283180516,    -0.013955639489358263,\n    0.0045781652142748985,   -0.020508675673643808,   -0.013063756545172587,\n    0.02172053643769264,     -0.011361597343304282,   -0.010495473111111311,\n    -0.03342495105448974,    -0.030797545563675588,   -0.001580635415497086,\n    0.015483757148438582,    -0.020470615994692146,   -0.006243558903649542,\n    0.03451912673917941,     -0.029192680109219302,   -0.0279995026874166,\n    -0.009688453559724768,   0.02352196172009121,     0.012156021469127126,\n    0.015530193351807473,    0.0020129901945141588,   -0.025878155297588433,\n    -0.01707206626804448,    0.012270412672601006,    0.02018633096196396,\n    -0.020953654721650474,   0.01865039326246495,     -0.005495565242771259,\n    -0.02920094424052072,    -0.03538933195510009,    0.013549927842656795,\n    0.0017708350553377445,   0.012477021362154728,    -0.014631514304061089,\n    0.012028273051248197,    0.006538214034669563,    0.00507980337035118,\n    0.0337148929789079,      -0.0032655467816642414,  0.00013626681750771624,\n    -0.0054870734678176105,  -0.027148497924134738,   0.017013645867853047,\n    0.0013046486542826633,   -0.02442028840322628,    0.03430323171483221,\n    -0.03200380411866319,    -0.007617460752927027,   -0.012978654624287123,\n    -0.0057726376991992946,  0.02127628110320975,     0.021024998791648278,\n    -0.016993679816497353,   -0.013954377800612077,   0.011495090914609436,\n    -0.03346793104258502,    -0.018673198698675467,   -0.03560298875773432,\n    0.029837075244924127,    -0.030361279874251648,   -0.031235966028951692,\n    -0.0053219312277510734,  0.0020671901560019063,   0.007629140716684976,\n    -0.0074154505228676915,  -0.01721380204744737,    -0.007317693712896335,\n    0.0038948308279770677,   -0.032785172881748766,   0.028074579580049757,\n    -0.02901872292436814,    0.03326061341137904,     -0.022070831507727318,\n    -0.03362041750646117,    0.0056975459999622415,   0.020281544409777776,\n    -0.014013282290998455,   -0.021594170920205585,   -0.0051176706611267666,\n    0.018347518667534042,    0.006063712992603078,    -0.0027436768111102705,\n    -0.03345836571336172,    -0.029639650975455643,   -0.021749906589593318,\n    -0.019837214362854697,   0.03250814692991767,     0.03245132162914563,\n    0.016207479639390683,    0.02453175553325073,     -0.00708598773732666,\n    -0.03552743083121397,    -0.005968771944586004,   -0.0003105367101626391,\n    -0.02821484450942953,    -0.013013764356616766,   0.02593026659129489,\n    -0.02472282200894873,    -0.02585955642071442,    0.020720786058191117,\n    0.005198137223659717,    0.027166332378770315,    -0.004631108697102505,\n    -0.01753872677136998,    -0.034416520734658444,   0.012424288675835653,\n    0.018088816528727195,    0.024782851356438443,    0.0052689769255731935,\n    -0.027815278364293632,   -0.028625595961953423,   -0.01780460813755741,\n    0.006055975729275385,    -0.03438318127728879,    -0.02361454650685073,\n    -0.00827921640515936,    0.007306933856901937,    0.017688350446839543,\n    0.009846911474821092,    0.0004702930157021802,   -0.030349701460430707,\n    0.008108521757302636,    0.033220526412340586,    -0.012129899709948948,\n    0.029894261708199792,    0.005687363085787679,    -0.035037501142127635,\n    0.006920827388340695,    0.007993074999004177,    0.021905975638939645,\n    -0.020443734773481492,   0.01660287156962829,     0.02830077081687711,\n    -0.017695413139817127,   0.022642802220515915,    -0.0136350311220079,\n    -0.011493282073059972,   0.013839613464571885,    0.005906539106765909,\n    0.028564476321064514,    0.017088080729977417,    0.0020990848617177577,\n    0.016782436293019398,    -0.02583149218929424,    0.027929834923407677,\n    0.030305230152124305,    0.012839378701252758,    0.028025353905155464,\n    -0.013439738545927282,   -0.00774941026529636,    -0.03134958936824857,\n    0.01656198244923617,     0.006563831026748964,    -0.026045518160201325,\n    -0.0147453479967417,     -0.02631422194635702,    -0.013972106449419073,\n    -0.035113463510475666,   0.028094063298836663,    0.02857858779877834,\n    -0.01864662521481322,    0.01255108234547973,     0.005114410165402229,\n    -0.03041536756057937,    -0.0062426172425950445,  -0.004090477471218973,\n    -0.01712664895324038,    -0.022497616265294663,   -0.03345941354002042,\n    -0.030238316070014804,   -0.016275826629626445,   0.011024249903419459,\n    0.011812251955943367,    -0.012305625304565065,   -0.021389710550816097,\n    0.004326148031434202,    0.018543769742449614,    0.023942846308979103,\n    0.03038298333588691,     0.02946800542581829,     0.010871464960298527,\n    -0.012182124309620013,   -0.03289263135415754,    0.00563420827730635,\n    0.004019496799599144,    -0.022126830760442986,   -0.016174330671766227,\n    -0.016120402500406184,   0.004409826917253739,    -0.019433434463859072,\n    0.014203260680194523,    0.007702833067834781,    0.03568344154545645,\n    0.035497419411873225,    -0.03477040425811228,    0.03153664675052005,\n    -0.0318717828226441,     0.01997882126325549,     -0.031108365978872864,\n    -0.008236822769838725,   0.011397040540200187,    0.028370859401969435,\n    0.027399370902669987,    0.0035956973297978723,   0.03126307942771806,\n    -0.003069772878406421,   0.032244194974708464,    0.02294760207946874,\n    -0.005585849288165808,   -0.02769777048772578,    0.0017238543765725992,\n    0.027586961682212068,    0.027157536815956583,    -0.030153227606822708,\n    0.004922602554213443,    0.0153137344988867,      0.001320336595345647,\n    0.028322024847159906,    -0.003881856127205985,   -0.017109534460453903,\n    0.010214150190323734,    0.030475039035812966,    0.0012325310254944447,\n    0.004710845340481432,    -0.008435062062223005,   0.006440349177316118,\n    0.01486171420545192,     -0.014652991029969713,   -0.016592440728264837,\n    -0.01391417748676832,    0.021497593212407778,    -0.00810140228891909,\n    -0.011934805258481847,   -0.0026294340390486787,  0.031922967792775904,\n    0.001506764025969514,    -0.007574195883568533,   0.03252526027967822,\n    -0.02495728550123967,    -0.015087481319437053,   0.020533833519483385,\n    -0.03547758347348318,    -0.02489901826571319,    -0.013156429194872428,\n    0.03204652551249396,     0.015500706481832445,    -0.01948589776426354,\n    0.010747822724425505,    0.030097685898075058,    -0.027169523989832276,\n    -0.03331679876864734,    -0.027080444007537428,   0.008444813199444534,\n    -0.02096545834722508,    0.010818203588602034,    0.02529722516597145,\n    0.02746565226949892,     -0.013568638193223815,   -0.02809246537325444,\n    0.027275778477989128,    -0.015478535749885248,   -0.02107529709509662,\n    0.02273066866613157,     -0.009421670870664494,   0.03183393683158204,\n    -0.018722854860642693,   -0.028805378494927193,   -0.012996479522583402,\n    0.0008198595069909672,   -0.000685293453030438,   0.03047150924073673,\n    0.00876082264755823,     0.01238804256017058,     -0.024410895854733494,\n    0.02936395924211913,     0.021994223725764064,    0.014208753510565084,\n    0.034214712724775234,    0.00378729096886823,     0.001248905720189153,\n    0.011627897150697349,    -0.031267420413715455,   0.01249396310504795,\n    0.00510385697968562,     -0.033951857132625635,   0.0356122878653497,\n    0.03061500009750538,     0.0008046317880693876,   -0.021964193032625992,\n    0.03142849676216403,     -0.004107389734233706,   -0.029354737248499796,\n    0.03190607266037696,     -0.029451778868435925,   -0.032469822055915365,\n    -0.02855573093833229,    -0.004582520986349877,   0.028503315321275122,\n    0.01767235267471063,     0.01620479733745578,     -0.01406570039079763,\n    -0.022444801332085047,   0.0025097482976148317,   -0.016350074478011265,\n    0.022891864175161907,    -0.026628318931746615,   0.035062215434378464,\n    0.031424613924213786,    -0.008314444526921887,   0.029671183641169083,\n    0.019173146332064975,    -0.000837705230202617,   -0.014247575686772618,\n    0.02143977019323059,     0.005685469248266619,    -0.006418747990294579,\n    0.01271180365030713,     -0.0281564997276207,     0.008437866507597924,\n    -0.03246286633340525,    0.015327233428122993,    -0.01622515973988906,\n    0.021419536826503705,    0.012667638028347217,    0.021538984949394616,\n    -0.01980799781176572,    0.022115859971118146,    -0.034803711203184075,\n    0.03529953060226699,     0.025042995648461193,    0.011431271230678322,\n    -0.03294643114435522,    -0.015395492186797484,   -0.02335329268840953,\n    0.006609436431864219,    0.024179513371168724,    0.03242605905373297,\n    -0.01527869707353808,    -0.008340688080498902,   0.009058439176144857,\n    0.024319240281730617,    -0.0035349564779553672,  -0.03174899764208047,\n    0.015816500793518443,    -0.030325622190151103,   -0.029337948121764688,\n    0.026779100072891103,    -0.030775953849605558,   0.005399119592191034,\n    -0.01294851127231208,    -0.02147613190778714,    -0.0005218064116935737,\n    0.02938529413957389,     -0.003166236311699282,   0.022018486295373608,\n    -0.0017538098813598849,  0.0041853702170509465,   -0.009743623220335895,\n    -0.02250070262810895,    0.034127089735306766,    -0.008477796116506271,\n    -0.009855245915233513,   -0.01782831004562616,    0.011627451917767111,\n    -0.007344285468286931,   0.030109242203493106,    -0.03102963420343161,\n    0.028219690014719155,    -0.014726291400809697,   0.006146047328103825,\n    -0.0032048726136335343,  -0.02244190804515256,    0.0035605351509197204,\n    -0.027472390880238107,   -0.008866292881830693,   -0.02608343764664971,\n    -0.008933907895694766,   0.017368132519146293,    -0.02610014611549104,\n    -0.009602633399010503,   -0.015624674776516015,   0.020852993179116066,\n    -0.004388700153811994,   -0.022809277787496585,   0.008776020590513562,\n    0.00028992172053116897,  0.01554121299167686,     0.03190449703407497,\n    0.026295609922620256,    0.020574011329306165,    -0.0035577912232042097,\n    -0.001269847777937134,   0.012548748109253976,    -0.02796071781517694,\n    -0.00892055346222278,    0.0043361504738012825,   0.022613252603308532,\n    0.01580402527542826,     -0.023905775232703857,   -0.022546940992579523,\n    0.02250588694969428,     0.0014960782219561159,   -0.031047283529741856,\n    -0.01758439786294925,    0.014817672133511277,    0.030910416996040888,\n    -0.023759098559356553,   -0.005974218286617086,   -0.01792675305462751,\n    -0.012577784614611936,   -0.018715112281999093,   0.027487731531571705,\n    0.00047890078362992716,  0.016255810702939077,    -0.007453664645174583,\n    -0.01083678130482082,    0.03444174016092331,     0.004871457784569211,\n    -0.01986566476205225,    -0.028284671008768126,   0.00509693205309831,\n    0.0051147037016476505,   -0.012234265753810385,   -0.020769714224083902,\n    -0.02169537317347151,    -0.0032226280135635678,  -0.00432741496054407,\n    -0.006629316073549226,   0.019727616065426612,    0.0032917680246195963,\n    0.02762085007659396,     -0.019341633431204437,   -0.024029906183341092,\n    0.029215012122005134,    0.002022461940932656,    0.013714605506857784,\n    -0.03235176639241418,    0.009296068205258618,    -0.006658257519161159,\n    0.0289820527544001,      0.007286825967788195,    0.012459795970391874,\n    -0.026137566087447682,   0.0010989561755821203,   0.008287523631889187,\n    0.0059585606342053244,   0.031068173016185537,    0.0052718564040852445,\n    0.0024491533892570605,   -0.028801250322959302,   0.010312472148907006,\n    0.025779606269449425,    -0.033508147976824665,   0.0004898619295928275,\n    -0.023339006836687562,   0.009630510200877651,    -0.030688742281958024,\n    -0.020970393401951653,   -2.4941438297589243e-05, 0.013176325356257583,\n    0.03467031297679734,     0.029436757192434396,    0.00048205997345292435,\n    0.02045676460780352,     0.03169275772901481,     -0.02229369408983451,\n    -0.03312309759173174,    -0.031166760858385552,   0.007049974002708435,\n    -0.031426664734070554,   -0.017265583582757822,   -0.029310542307731724,\n    -0.027873598065958682,   0.03416044719602934,     -0.007660868551032183,\n    0.01720550367098642,     -0.015804051568760174,   -0.005377372627012497,\n    -0.007146230042094232,   -0.018673645617778907,   0.0037447067302137805,\n    0.008544549850772592,    -0.01872811643576751,    0.005974082961750948,\n    0.004593641781336826,    -0.012925620664501836,   0.02939432811416994,\n    0.03248446892058883,     -0.031193965287859803,   -0.0136308044198313,\n    0.02744158104986484,     0.0034113717571076347,   0.005739151661587465,\n    0.030863339829253947,    -0.024461324579180946,   -0.02486934851749781,\n    -0.0011463095263139012,  -0.0182957040313348,     -0.0009725910009133793,\n    -0.035263875066644884,   -0.0036076677014288006,  0.006156678319595186,\n    0.0260209670393886,      -0.013100710402212104,   0.00429703442835735,\n    -0.0069612122108347885,  -0.025547007592465885,   0.03504869027977919,\n    0.006865770910449296,    -0.001772667740874756,   -0.018532086180552212,\n    0.011228498919123198,    0.032808747764286245,    0.007457982181588868,\n    -0.022664179785057144,   -0.032503459195165285,   0.026947744236578933,\n    0.0226754874052587,      0.030324272263856776,    0.008403470704940803,\n    -0.01628482481449029,    -0.002766726449374804,   -0.024985522521154466,\n    0.02115179930651932,     0.007034171801392327,    -0.0003296886309246088,\n    -0.010820650715932403,   -0.00909817568512928,    0.029931968511476104,\n    0.027618231084756195,    -0.02034370049793365,    -0.026714888019839907,\n    0.0020325737331932103,   0.02526570652981998,     0.020936074821091125,\n    0.021045398284830635,    0.00509266492450828,     -0.01567466892313274,\n    -0.011747682855887747,   0.032233154244283024,    0.01300796376255407,\n    0.01876781657804596,     -0.025472172145970067,   0.030859746353336014,\n    0.006343307984311462,    0.03121171935978487,     0.01031844116095878,\n    0.0026778926952176364,   -0.0010655983028953684,  0.02936164060928017,\n    -0.029458325224271116,   0.035089458020463656,    0.021465704774477186,\n    -0.013491430725582787,   -0.0016971176697698049,  -0.000529679171609906,\n    0.0070710268663870535,   -0.01848632280781951,    -0.03311829888793789,\n    -0.009486723114797709,   -0.020401364078819904,   -0.019418492676751362,\n    0.011389694467969684,    0.023144332229123432,    0.021309400313687228,\n    0.011140067417790753,    -0.034525190464810576,   -0.021237591225848774,\n    -0.0024024484208602288,  -0.014980487733251058,   -0.004867419365142923,\n    -0.018688605816641803,   0.021988610076642347,    -0.009531350681098545,\n    0.013983014206376035,    0.009138060748262962,    -0.027038344795206216,\n    0.017932035178051673,    -0.011574264159308439,   0.005697961413658541,\n    -0.030777943375261612,   -0.030179851261338764,   -0.02202490702274876,\n    -0.02682772279598817,    -0.032718544828351646,   -0.014344016991092967,\n    0.00786050261971638,     0.03028944677039943,     0.03530924084031603,\n    -0.01735999430274477,    -0.0017818119241671457,  0.006616775061671845,\n    -0.022348613021441102,   -0.03100874698126253,    -0.004830906236264865,\n    0.026047494743850444,    0.032270946306430376,    0.008743611941222569,\n    -0.017207827385244654,   -0.03264572037746389,    -0.028315980703246833,\n    0.024089829743874785,    -0.03448968231822226,    -0.01776948173771783,\n    -0.016652526213582968,   -0.009757573177131678,   -0.024715756756131704,\n    -0.007054272888246044,   0.0312231071235088,      -0.03173817456530799,\n    0.00810656890093621,     0.007083780125953667,    0.01324322166387889,\n    0.011721298442018722,    -0.0011459919499777046,  -0.02469891088164104,\n    0.014695422924952961,    -0.01677904581426225,    0.032610770812991144,\n    -0.027931468913729225,   -0.013484623765857469,   0.01791239147795046,\n    0.0013899510253682316,   -0.011301712864337581,   -0.01870099931109313,\n    0.016205029221418244,    0.00014520545450811114,  0.02560900392185147,\n    0.03536525774934814,     -0.024259070897293993,   0.015404184821910987,\n    0.010145780167630854,    0.011979095285667008,    0.017390435833115652,\n    -0.02240646383178658,    0.0034527083338048354,   -0.0005108225559874922,\n    0.005119939883673557,    -0.017463555643016,      -0.0017866043278248317,\n    -0.015898948496444194,   -0.01823072987987668,    -0.005876816493658589,\n    0.007572198647528544,    0.0003762453080812324,   0.035477874936607846,\n    0.032229879810107546,    -0.02153291177453535,    0.009093868221598926,\n    -0.013739296921493472,   -0.021579188281766755,   0.025932432578045304,\n    -0.027373614923821937,   0.015685042024669114,    -0.012852980531697636,\n    0.004148141153754995,    -0.01184585589435643,    0.00224854685008686,\n    0.02344272730136967,     -0.013340938282566977,   0.027298258084575016,\n    -0.012101840537154778,   0.019015472443633455,    0.02486455775281554,\n    0.0018847826440510243,   0.009383272304991475,    0.0015390286365693665,\n    -0.021162714197315895,   0.017025946470648572,    -0.010481800172880196,\n    0.02088605005719818,     -0.016103938150523148,   0.004291391625753506,\n    0.01130005162439307,     -0.02110301460492422,    -0.02956466366358366,\n    -0.005726728395030506,   -0.024839738889925467,   0.02236713539432764,\n    0.02093368797276404,     0.006897232837315501,    0.024087795497207787,\n    -0.02226179926384091,    0.020171766186836002,    -0.024808407491384233,\n    -0.012851411841126408,   -0.011262326694729667,   -0.033076194586916983,\n    0.0174351096696786,      -0.004748321604133671,   0.017579693254928575,\n    -0.03443222085871855,    0.029181582565086295,    0.022736363949318716,\n    -0.024868949031485277,   0.0300029111880867,      0.0015263257885856918,\n    -0.013092424834671339,   0.033626290477991955,    -0.024041887171540408,\n    0.016234855030695328,    0.02555488843038562,     -0.022091942342194533,\n    -0.0026169826343191427,  0.00979745235251301,     0.0012692561297612853,\n    0.008491844604582506,    0.020830993998641592,    -0.024234282469843008,\n    -0.031564897786644674,   0.03007055967405476,     0.007153166532460342,\n    0.03567193338752244,     -0.0311483846040398,     -0.012689099840250889,\n    0.024984481417375238,    0.015329047747236684,    0.027011889675735923,\n    -0.007068202779797908,   0.02179475300161379,     0.023252811437610328,\n    -0.0012550549228853886,  -0.015157090709366843,   -0.02849914627395071,\n    0.03377173498503973,     0.03303452867580527,     0.004269089025685552,\n    -0.007926185285264817,   -0.016910676139971634,   -0.020668032081130206,\n    0.029147627354679937,    0.019218649506072796,    -0.017299548125817545,\n    -0.021312267829915067,   -0.02467686661322538,    0.020376630503154643,\n    -0.02634346210080541,    -0.01494737108479342,    -0.006932449399151671,\n    -0.005431819244816005,   0.006169739327106055,    0.03136684290065733,\n    0.004896052642270681,    -0.03459940626463328,    -0.017787304356753256,\n    -0.01670138164919173,    -0.01675313360957338,    0.024215824793179287,\n    -0.00509433783433999,    -0.020938591369027783,   0.007557491245920295,\n    0.025389979399976635,    -0.03004427945724218,    -0.028501769759650193,\n    0.029831720230836745,    0.03456810394068093,     0.0014646325107750624,\n    -0.004671496698425434,   -0.027590799721505566,   -0.021041666360224656,\n    -0.004693443972758631,   0.02222706933697456,     -0.01869382504994633,\n    -0.016677414036311122,   -0.029605567681693454,   0.02952531627200019,\n    -0.0025963646486748615,  0.015333578853121381,    -0.0016894261983736525,\n    0.010353797866362098,    0.03471960750098785,     -0.006301571745689999,\n    0.0021003104649480898,   0.003983396691320211,    0.02325388217892861,\n    0.006356471818028128,    -0.03167704852071191,    -0.0027289857258823713,\n    0.01587071474361493,     0.03524945525647441,     -0.03309513510043044,\n    0.005087495702726612,    -0.02589429241475476,    0.0002608134149796326,\n    0.02659993482270716,     -0.0035553660959591732,  -0.022941865327149036,\n    0.02330342236180806,     0.01102030695974432,     -0.008680352215371587,\n    0.01597316043258263,     -0.01135877558430816,    -0.03453234740234046,\n    -0.009640235307145337,   -0.0328682357525904,     0.032063152890865455,\n    -0.01810252745911638,    -0.02456637640078896,    -0.02326662703263667,\n    0.009811777231433203,    0.027779999087584484,    0.031111851133261058,\n    -0.02457956807229668,    -0.025079104512386395,   0.0008705429570708094,\n    -0.016707897013182673,   0.033981585356654215,    0.004599572889586226,\n    0.0038221063819109625,   0.03447416721486949,     0.03108634640383238,\n    -0.013289966090068248,   0.029713391967341952,    -0.016302379147767117,\n    -0.03142302775702244,    -0.01847732012343329,    -0.017775504707822885,\n    0.031901549316097656,    -0.01333864545440651,    0.005505205691845261,\n    0.008504420161004785,    0.02670658431427521,     -0.0046995189782445225,\n    -0.02653657136096945,    0.0006683637511911461,   0.03509848994325431,\n    -0.020104743398935334,   0.01624108498467293,     -0.021193019366603956,\n    -0.005603486126138479,   0.030593092299668785,    0.02972189695462971,\n    0.004548385797961946,    0.023088962065735106,    -0.03404961445279515,\n    0.002539275900636882,    0.02845937453240943,     -0.01623460207172217,\n    0.030391482623881003,    -0.012613220602268469,   0.014636377222241996,\n    -0.01883704317909958,    -0.021681528221480197,   -0.020657752015393025,\n    -0.014719409306106117,   -0.030123908413040204,   0.025293591502674056,\n    -0.002404985208730178,   -0.0021934318595508346,  0.03243637479522761,\n    -0.030161231698466795,   -0.004021950821453917,   0.02786118026050218,\n    -0.026902262536160577,   -0.028832391897509888,   0.006082705716668404,\n    0.0009965022032866675,   -0.02088383810446942,    -0.024699674601172956,\n    0.007831954257737559,    0.02096876940382665,     0.031423186874627376,\n    -0.004004234118002666,   0.020711618520672277,    0.03073508219371137,\n    -0.00904321103853536,    -0.011683301551536334,   0.031002239110538073,\n    -0.015350019128871278,   -0.009392872608714076,   0.00964222889949331,\n    0.01283464610285952,     0.029098033569484726,    0.014672404563503716,\n    -0.017010401114112852,   -0.015218338027216758,   -0.005956288937301022,\n    0.0302166388243356,      -0.01042808581671882,    -0.013640988843340703,\n    0.01812326471579173,     0.01723203723041142,     0.02102832291837239,\n    -0.007932628869006237,   -0.020803412064883318,   -0.008042013013723592,\n    -0.02778744887271498,    0.02280807843186572,     -0.004241505547599278,\n    -0.028458509205951228,   0.019282437253705677,    0.011514810098049697,\n    -0.025988311769377458,   0.015455033875287539,    0.01161238908950542,\n    -0.004358934288872082,   0.009679347040119031,    -0.00938793716305804,\n    -0.009530917872622493,   -0.005594671410490224,   0.0018143282455890886,\n    0.007252824557171149,    0.014367068308437678,    -0.01619155883468626,\n    0.006624236866363661,    -0.022412902561187963,   -0.013139986285388823,\n    -0.027487764207885193,   0.03193060826700111,     -0.0043968404920052195,\n    0.018757406920120113,    0.008118517566546126,    0.017282062351713312,\n    -0.021021758776649094,   -0.026150855226761794,   0.02572438237482286,\n    0.03258995341237097,     0.03144673249259986,     -0.0021170155096723675,\n    0.02485270001866594,     -0.027425032671710693,   0.00551016050958256,\n    -5.6580243865646444e-05, 0.02067999479320988,     0.008115118293627106,\n    0.02831363567322543,     0.028560167907267744,    -0.013687765186265861,\n    -0.024443762601040395,   -0.01805940361270681,    -0.008535636925477643,\n    -0.03302072635582662,    -0.016681004987012558,   0.012474238039430286,\n    0.020402913802878342,    -6.585410000005596e-06,  0.026959736889616646,\n    0.028463792469294858,    -0.007068380858327719,   0.008663006658261545,\n    -0.014937940679936874,   0.021347300141150636,    -0.009198267784914622,\n    0.023343746851004335,    0.02962323511327507,     0.02443472732433683,\n    -0.012502409492770102,   -0.012650191543467835,   0.0021896686774880037,\n    -0.026084698683239576,   -0.025760932503928222,   -0.030126648318371006,\n    0.028358157904559343,    0.014871328312751213,    0.013213858294640397,\n    0.02363474091010899,     0.015924163626138885,    0.03449648483649598,\n    0.01059025853077219,     -0.02425024251240535,    -0.034950258349094876,\n    0.006626506274641183,    -0.01618298345830763,    0.032184085932237254,\n    -0.029717170084934883,   0.03571104405655347,     0.03062613888472672,\n    0.028491065232913924,    0.021560736297416117,    -0.01259591917109181,\n    -0.033981946768285864,   0.007253981366863583,    0.02912143438827978,\n    -0.035405068043795306,   -0.024647816537108718,   -0.006489000176703317,\n    0.025876825067700948,    0.013458442510081436,    -0.009809030239766552,\n    -0.004486948662343099,   0.0053503615119076765,   -0.024575848742832068,\n    0.017482483296750576,    -0.0035688664128214792,  0.03136545533530125,\n    -0.021857206744535205,   0.01870272787633807,     -0.03034296509810468,\n    0.006036606958983694,    -0.002201502749720379,   0.02327380125292897,\n    -0.010867749592105536,   -0.032348563304829284,   -0.03052492945536607,\n    -0.014618688358333487,   -0.022985910523736018,   0.007219232602754627,\n    -0.030898276387140163,   0.017678822084117876,    -0.006232785642418708,\n    0.03216094047742008,     0.0051462469844338965,   0.03304085541721981,\n    0.03410584149472303,     -0.014103806575525362,   -0.03331899494233604,\n    -0.013940465052722433,   -0.008245705847701512,   0.030374310808965875,\n    0.026808239130109338,    -0.0005809394809643265,  -0.008829100020379748,\n    0.026214670505744875,    0.011638416673842846,    -0.0280401290974913,\n    0.025882054001937365,    0.019738272380089135,    0.016753089102758825,\n    -0.003441566256341463,   -0.019850664112208545,   -0.0184097829577798,\n    -0.031217410011111182,   -0.0064036632004868446,  -0.0017960502300840722,\n    0.02767003494412175,     0.014736294911414823,    -0.025455217930231065,\n    0.012893149307655187,    -0.026625511031206105,   -0.015401464551024906,\n    -0.012307698538808602,   0.014142704220795894,    0.019341659468363415,\n    0.009814732175421448,    0.013175067050434457,    0.03166559737523338,\n    -0.026180189546362753,   0.001438323400737034,    -0.004559810371155476,\n    0.023968712459727908,    -0.004619876452920676,   -0.006037635946543115,\n    -0.003527955463947312,   -0.03503392746413854,    0.01418575565663028,\n    0.03507200760638828,     -0.0008050587228831911,  -0.005917770092310084,\n    0.010057395288984068,    0.020048007594952708,    -0.02249648103831874,\n    -0.012196230977147273,   -0.014585379020799831,   0.03465429690628048,\n    -0.011004053544490744,   0.014995869998294251,    -0.009761228041597498,\n    0.02834884276128654,     0.03107106045818516,     -0.010254165136952043,\n    0.011232711859643441,    0.0354779110305787,      0.03494693852876348,\n    -0.030503150438786174,   -0.0336241246407451,     -0.021892675773489172,\n    -0.009929717109065617,   -0.004904240073147119,   0.0015237822540956703,\n    0.011727923355421426,    -0.00021112139641973494, -0.02267859086341865,\n    0.0037960715210971453,   -0.0030255845807676896,  -0.009512097907598762,\n    0.029494522250834605,    -0.0014473965328834254,  -0.02844022480928041,\n    -0.015417256377131736,   -0.02835108193199449,    -0.024905465101104075,\n    -0.002023814967294273,   -0.032569722387098335,   0.025791192238180754,\n    -0.034823436520145704,   0.021838456024993298,    -0.020029934537742846,\n    0.0044853871177211735,   -0.020614759098197107,   -0.0037715780158389307,\n    0.029562852143247005,    0.023943159618749155,    -0.023680991728072753,\n    0.005398227146794657,    -0.02992063846924734,    -0.028313596588869384,\n    0.005431723204871175,    -0.0008783305267281755,  0.02263479861772756,\n    -0.02562775992639176,    0.021919570561101966,    0.008463875903302545,\n    0.004506509166708742,    -0.02735103820460899,    -0.013533410919371403,\n    0.029830454863744058,    -0.0002378538638446091,  -0.01376893676265371,\n    0.03147610670260175,     -0.02444289947736303,    0.01699977371505291,\n    -0.035301646990724404,   -0.008148222898937692,   0.010037427069199467,\n    -0.022414618225785853,   -0.007438328167407185,   -0.022169175748079535,\n    -0.008580303588966378,   -0.013667490454078573,   -0.0007757746776905057,\n    0.021461460745719092,    0.03252318802379999,     0.021626787707006004,\n    -0.00014708172824232487, -0.002849341166656852,   0.004994847920852538,\n    -0.014859573585101742,   -0.020434200963044515,   -0.01063262289329288,\n    0.001242769262069803,    0.007768078140509742,    -0.01909272626094075,\n    0.005922855496759828,    -0.024944376309333778,   -4.248617003505777e-05,\n    0.014479056115673555,    -0.007325859518089164,   0.009593032665644905,\n    0.016080739742866168,    -0.014104797207503008,   -0.01662897521129887,\n    0.021379253011224255,    0.017018090592505364,    -0.01766283626424706,\n    -0.010893379165889996,   -0.014066977077628558,   -0.012466155103898193,\n    -0.017906860328211205,   -0.011144089388519438,   -0.02143847429712687,\n    0.012812912981539564,    0.018850528365367703,    -0.019196461331083277,\n    -0.0022515603005666684,  -0.024289203443147254,   0.03016799917206487,\n    -0.030383966006530275,   0.030319567260478256,    -0.022274858717602413,\n    -0.027594782656442773,   0.02098166358066389,     0.017984071125600867,\n    0.000944260523380837,    -0.009880932282075696,   -0.013082627554631044,\n    0.019071154883920288,    0.030324411272507845,    -0.0006871718785799254,\n    -0.005737834507415923,   -0.0036998811903320833,  0.028946794341690386,\n    0.025908407771396014,    -1.3704212189832468e-05, 0.015444406759545622,\n    -0.018871392507372305,   0.021519338824533163,    -0.028049130048800962,\n    -0.03003638651822778,    -0.009680410308956349,   0.0010677342335255588,\n    0.02682580637653707,     0.010045022589542318,    0.020646283511563588,\n    -0.0219278251760463,     0.022715278240458325,    0.03497363480041096,\n    -0.0013629521841921977,  0.035341731033179204,    0.015432688695733974,\n    0.029466714901043165,    -0.011405508096101555,   0.032379914381234776,\n    -0.0008024863953492127,  -0.033698556379581586,   -0.023816927683011753,\n    0.010838939622234454,    0.004767635211757683,    -0.00517006611299105,\n    0.016070382226645252,    -0.026909242542868795,   0.014989620151915111,\n    -0.031045211473473267,   0.027029293710324663,    -0.005735544814517315,\n    -0.01215379818487583,    0.0069312549407214985,   -0.02126521447958086,\n    0.00415526422862791,     0.03311278880104975,     0.012613071710900068,\n    -0.01186095044526923,    0.03203922759376323,     0.0087659196336285,\n    0.03527648528039968,     0.030669037254054017,    0.006123467846635168,\n    0.002472338832621276,    -0.026661249730304464,   0.02742412408444737,\n    0.025387668106503183,    -0.004244875303251833,   -0.030411739876357962,\n    -0.014179669549159953,   0.01233805301355104,     0.025996629630146206,\n    0.029205033659907485,    0.013858560572499568,    -0.0018530572283604091,\n    -0.02849937718305572,    0.014199036025155216,    0.025345584104353145,\n    -0.028045354783744314,   -0.01658382938228634,    -0.01506665179479309,\n    0.0204509108670275,      -0.033146554882488924,   -0.018046523164180244,\n    0.02192740973871299,     -0.02779193416169718,    0.0011609044095618548,\n    0.021625577788968318,    0.015294308361811582,    0.02256760159304026,\n    -0.02555813756908755,    0.011165679068433718,    0.011706868229728653,\n    -0.019985729491887306,   -0.008990112271179454,   -0.029064238574314692,\n    -0.027327303571032767,   -0.03511369320692457,    0.027365225906307553,\n    -0.034041807363851755,   -0.0062980886094303745,  0.018402584288670823,\n    -0.012243161671973573,   0.009736185004397593,    -0.03373904715661163,\n    0.005391176496760654,    -0.0008895036678785598,  -0.008675808846119753,\n    0.03462441562040398,     -0.0050996168324976944,  0.011146159711607729,\n    -0.03251203663972563,    0.032343913684263086,    0.010015444228201187,\n    -0.027911049440210656,   -0.02912336277655094,    0.032250398183109395,\n    -0.020245599637051803,   -0.003863970306017412,   0.0025997810883112466,\n    -0.0013545318118936792,  0.010776426618284747,    -0.00513650194952039,\n    -0.01407839244601633,    0.03173400337995507,     -0.01678877670573924,\n    -0.02197720856119996,    -0.03339792601872225,    -0.02285536894083243,\n    -0.03325377764486861,    -0.0021056560242987883,  -0.0264193647271699,\n    0.010167620528365102,    0.03174333133518462,     -0.007002503776141969,\n    0.035489275800566246,    -0.00017475295648611278, -0.018890501538050233,\n    0.03485114882077022,     -0.027908153113676185,   0.03552976262489118,\n    -0.0038102911900020032,  -0.011397736567071992,   -0.009125796510411914,\n    0.017221632465960413,    -0.023463399734667115,   0.005991632215206718,\n    -0.020245008411893313,   -0.03425555110113801,    -0.026427175152716576,\n    0.0008716641316393206,   -0.008921507103856823,   0.03524117547066269,\n    -0.01002308907486904,    0.008750336552915563,    0.02332034454526584,\n    0.01708589217446089,     -0.029891304462755165,   0.025726842285097844,\n    0.003356256479161268,    0.02135671800084222,     -0.02514297553381397,\n    0.007585959338468229,    -0.00014469389916126657, 0.0237288898623572,\n    -0.0011293999958567455,  0.030138972586534505,    -0.028322313273045994,\n    0.0019166737931791133,   0.020986518338278304,    0.0040861064531602575,\n    0.02046474411959064,     0.006680255593709256,    0.000652894398452191,\n    -0.031681158963304694,   0.021919258232024848,    0.025324730930141107,\n    0.004239810565864247,    -0.0005464435876518713,  0.02783074511988959,\n    -0.02235819579109994,    0.015270056904592027,    -0.03441772189468854,\n    0.026485679571527088,    -0.03448691118319846,    -0.027751712738983778,\n    0.0296250338648373,      0.020086376142071934,    0.0314011426167952,\n    0.015593542066395825,    -0.03360497947580491,    0.025642885384518088,\n    -0.012972915522281992,   -0.025928441866804777,   0.0011782875845707014,\n    -0.029184902311012124,   0.02000746459354892,     0.0025156954791901403,\n    0.03445268399315187,     0.03449098787086372,     0.015906481147765366,\n    -0.014041763615818563,   -0.008699650294741543,   -0.017155196884208666,\n    0.022302421751120554,    -0.032164860689932,      0.015058242686501109,\n    -0.004271623912424709,   -0.00639041902833529,    -0.006738209256864127,\n    0.021908474185499047,    0.0002009916032389266,   0.007572102487483198,\n    -0.012109285445471938,   -0.0307487652120778,     -0.017477752385904956,\n    -0.002723393263109497,   0.019566967361548487,    0.015036042137211079,\n    0.008348992151329433,    0.02591274486635598,     0.02289772825756599,\n    -0.0028750869217806863,  -0.004536363849516397,   -0.03544292715498188,\n    0.018261486948924557,    0.007102317007922345,    0.0056091675112994645,\n    -0.027146977092449,      -0.007051881672701162,   -0.0062646525133503595,\n    -0.0038420807399815377,  0.029724039437197248,    0.007988908113691573,\n    -0.010935565864670356,   0.010288325869733462,    0.03569528687962301,\n    0.012233502924624709,    -0.027182392236110606,   -0.0009849155203428312,\n    -0.01181477752761319,    -0.004846051851168899,   0.005316885210349929,\n    0.024347106751876534,    -0.012378077008730408,   0.006882013004032025,\n    -0.028034848302180036,   0.03155906465279661,     0.003316051333906262,\n    0.005257593497265083,    -0.014534962749834766,   -0.01891741654210089,\n    -0.03492027580242379,    0.03352922101710979,     -0.0208984383939812,\n    0.017048006593284242,    -0.00850582640457551,    0.008483025834133715,\n    0.013918154310963087,    0.018959706333651974,    -0.02435964672647881,\n    0.00620802314745488,     -0.023489593590851343,   -0.025875790404086614,\n    0.021258121793172737,    -0.004125173191385231,   0.00260128170498018,\n    0.006574264546130716,    -0.01547237349224978,    0.020916339962163178,\n    -0.013872766823845757,   -0.028753601409768077,   -0.030460572890730196,\n    0.02147760356136218,     -0.01320407666655294,    0.01667350780965252,\n    0.02309597677174193,     0.03432742627344137,     0.006389760932114344,\n    0.0034294491024246766,   -0.020501952762834928,   -0.026780149888700398,\n    0.01712370824306816,     -0.019925946981902722,   0.004627721627570334,\n    -0.01833495868889657,    0.026652409323207955,    0.02984704723357365,\n    -0.014310432684067658,   0.031164552262100707,    -0.028050162052745534,\n    0.027508592969551278,    0.02280019399374944,     0.027672490377604442,\n    0.03192701995010777,     0.015276941443245278,    0.0349604788216523,\n    0.0018171617695103717,   0.005580924534530272,    0.0323794549816383,\n    -0.014295277974147163,   -0.020627870681733367,   0.004674512296666679,\n    -0.028215342578925794,   0.014083632505227268,    0.02204008719479772,\n    -0.028153936347545983,   0.03490156771292358,     -0.010226611193626103,\n    -0.02134723492607278,    0.028536361522834418,    -0.011716063043358687,\n    0.00024180584702008075,  0.014259061897122591,    0.0032943352867356485,\n    -0.016831534648783897,   -0.03353662343457469,    -0.028107641498333325,\n    -0.010992457593446144,   0.011003519678363025,    -0.033550444363337456,\n    0.009193856448124538,    0.030984848069038878,    0.021297694464099872,\n    0.029632721920670384,    -0.005919715758894836,   -0.00293644966578683,\n    -0.013938427257932698,   -0.02198536155053696,    -0.0006839567485744974,\n    -0.0009283752494989266,  -0.015676384147870093,   0.005422674319775968,\n    0.0010203139991773785,   -0.014287750021578394,   -0.004626714545902791,\n    0.022506694258856357,    0.02823438244607333,     -0.015172702426311531,\n    -0.023046360734502738,   -0.03064949912735665,    -0.009355843821852053,\n    -0.013500997816125031,   -0.020544812769535615,   -0.01803421938665598,\n    0.007099160310659436,    0.003326322716075858,    -0.003572291331485225,\n    0.015421491344537724,    -0.03151616102438997,    0.02972186959861337,\n    -0.0024985816745928496,  0.019048013865388083,    0.014252099797933737,\n    0.03423115573462862,     0.010964171750732879,    0.021542852956812138,\n    -0.03186585151235923,    0.00032369124888451513,  -0.0022715447072153006,\n    -0.011421951439189042,   0.019418379606790506,    0.01537784843892976,\n    -0.034801275559435636,   -0.02156637818496948,    0.028104324003353807,\n    0.02867328741389683,     -0.014266144763272204,   -0.00576273803059339,\n    0.03133385277875956,     0.023915586334714776,    -0.005744951246539651,\n    -0.005557025748835669,   0.008610043948561907,    0.0026496707185654856,\n    -0.03147563536090586,    -0.029589282469454657,   0.011526389068590437,\n    0.03296690477700167,     0.006400572779204599,    -0.012437676666008582,\n    -0.022508179174243404,   -0.006212243073602963,   0.03206442280541906,\n    -0.023973526934398977,   0.02281771570812678,     -0.008991434912687175,\n    -0.020347944219203218,   0.007401952380156411,    0.01934015885612714,\n    -0.005727606911414749,   0.002910651750009874,    0.02003794688149913,\n    0.021918640541038717,    0.023168119877738425,    -0.01633676500340429,\n    0.034737251509125114,    0.018557662363857308,    0.019825949444649906,\n    0.00012788630161992512,  -0.03342339844622672,    -0.026971285277077005,\n    -0.008625639985945795,   -0.02392516301123171,    0.024079326008283098,\n    0.004666143729781461,    -0.026808095756992563,   0.019779730994378224,\n    0.023336620359699117,    -0.016449738977897817,   -0.02777481720269691,\n    -0.021549744547705696,   0.020970102087115312,    -0.01951598174564848,\n    -0.0273751124670211,     -0.017117095681037656,   0.0032384619563072575,\n    0.026069992301427685,    0.02242639209025416,     -0.012141642736762492,\n    0.002728278806490387,    -0.03038151986653098,    0.02339963828699596,\n    -0.021030543916713676,   -0.03172126755853478,    0.015017572404581736,\n    0.0006482887255800056,   -0.013024812675187711,   -0.016943250007914957,\n    0.012870166967442476,    -0.026108818099281037,   0.0030471487855511,\n    0.003995989263557035,    0.030194515567860472,    0.02695977586742976,\n    -0.008516873562328806,   -0.0005197482547058381,  -0.014434699147909607,\n    0.01818400258218136,     0.021519925948543944,    0.030640439210929127,\n    0.003913952208345347,    0.02461585532058997,     -0.03217574521882591,\n    0.00899748047326584,     0.006500926326730517,    0.029925931075134214,\n    -0.03216541898866107,    0.0011528692134311147,   -0.003940466392819403,\n    0.009874305529678495,    -0.033394830223161344,   -0.0012376743246907643,\n    0.02286935207289813,     0.02191431949611245,     0.030031160046149703,\n    -0.01915185612256318,    0.031624844639562284,    -0.006690924529723902,\n    0.008390753682873802,    0.006632056336158051,    0.014371440141814256,\n    -0.00516889311617928,    0.022525690249025475,    0.029450201832078225,\n    0.001433670381995798,    -0.002213683061286688,   -0.012103312020915111,\n    -0.02975358877418162,    -0.009497522616502971,   0.001967817492573528,\n    0.03448387971526424,     -0.02580292785148597,    0.026547780577032852,\n    -0.003308385732446152,   0.022377663426475052,    -0.02389980039028043,\n    0.009861359139460147,    0.00826408977562457,     -0.034563497153571314,\n    0.03382370041030036,     0.015429382240883312,    0.02794550133318161,\n    -0.034677261003342036,   -0.010534195017430739,   -0.0010570120427803031,\n    0.029648295375946286,    -0.029294329371234898,   -0.021828482821575082,\n    0.017975371324551688,    0.02195496441806952,     0.02558452673117483,\n    -0.030062499547205267,   0.010775317473137773,    0.003195101390911733,\n    -0.013174956645996399,   -0.017927554754848998,   -0.03390663250456787,\n    0.020712061697480917,    0.0007930502256701903,   -0.032874725453239946,\n    0.0312253824486504,      -0.010603142570967013,   -0.015717763160541416,\n    -0.026021532300336048,   0.022392832728127088,    -0.009518966083754885,\n    -0.027125607013055004,   -0.00950167413539031,    -0.03057850940424956,\n    0.022835012977917804,    0.018031049094547176,    0.012159101629702136,\n    -0.03336688426463267,    0.01931561937605489,     -0.004004709202095415,\n    0.0172226473722938,      -0.021059465447969786,   0.022584061030764498,\n    -0.003988283972725437,   -0.025232484905970756,   -0.019569489521786332,\n    0.024862393126995508,    0.02993873311068758,     0.03380350643293696,\n    0.022326955645845175,    -0.0350441323986529,     -0.030670439351127732,\n    0.03236005548773805,     -0.018025349586797357,   -0.030915061242599618,\n    0.01451588590278015,     0.026420973245818363,    0.003271268200520919,\n    0.02433310394629711,     -0.013302815992510746,   -0.008292281219181035,\n    -0.02324811574661908,    -0.00731756635429103,    0.0302701940488042,\n    -0.010061874170827687,   0.025621626608178016,    0.013879562529452667,\n    -0.004194275027664086,   -0.03344225447558642,    -0.019683331008106954,\n    0.008028520633419951,    -0.03399079772852564,    0.013479361796822511,\n    0.02165438871470329,     0.015810029659309555,    0.014031341401196995,\n    -0.009030439343961019,   0.017826718097268893,    0.014568641907511375,\n    0.021169094980209403,    -0.026161660170598018,   0.011922323602812217,\n    -0.016867502506931243,   0.020647055183664387,    0.012012209961590057,\n    0.018107336589542205,    -0.003638014861858266,   0.034266100230906496,\n    -0.03130862768193291,    -0.008266226049643777,   0.028898545010322383,\n    -0.032381458711300715,   0.004720463207036333,    -0.01259308057015946,\n    0.006056948787824923,    0.010448644802865177,    -0.023838022337635566,\n    -0.009035204950501197,   0.007121693983034566,    0.011284979024292667,\n    0.00044755053382673966,  0.020699693958688228,    0.0178260536224656,\n    -0.024446722522377663,   0.020092618873695265,    -0.014583606033248089,\n    -0.021881214234361988,   -0.03253755260918611,    0.0025228700287047235,\n    0.007530454633437639,    0.0010439789626726567,   0.0016613680315636925,\n    -0.006637580258856,      -0.014445764771327545,   -0.007640316153339766,\n    0.011104272847029258,    -0.01295622604752396,    -0.01568171779002418,\n    0.02336276443030769,     0.014446429455133174,    0.006918468688344202,\n    0.021142845822380716,    -0.008310959624569443,   0.03175882800965125,\n    -0.03181147757128452,    -0.025844827373291673,   -0.017227385700446962,\n    -0.029888917446792385,   0.009920343416541457,    0.0027866395593340743,\n    -0.026323681434114104,   -0.029787088038890797,   -0.017051683469214984,\n    0.0014295509319369418,   -0.0349904001803853,     -0.029595938692882462,\n    0.011948462805795455,    -0.028558421359471984,   -0.0033519458405579156,\n    -0.017986222825415683,   -0.013305964240915624,   0.019934827737675527,\n    -0.031532581987688386,   0.01898941848897533,     0.029372190626746817,\n    0.00891400447399608,     -0.02655715115837858,    0.03196655667988944,\n    -0.02825328632906745,    0.010222554894533362,    -0.0006089398655570771,\n    -0.02132894114698045,    0.0070891777458978135,   0.016279173356231136,\n    0.0002224228416419941,   0.02009810369990025,     -0.028543160000726098,\n    -0.017716288326430185,   -0.02305709981534705,    0.01629202820177097,\n    -0.014822845333197466,   0.027922655263466052,    0.03508199352460281,\n    0.0006837270315031484,   0.020167888865923012,    -0.026404041298597896,\n    0.03103167182629223,     -0.02223317563043376,    0.02000249248676064,\n    0.011676697038474435,    0.01252147090148879,     0.005320906140428905,\n    -0.0030041380462000012,  0.02858259763668435,     0.02191204081300999,\n    0.02682944696556353,     -0.022283077928595525,   -7.960945762828876e-05,\n    -0.017569741868071687,   0.022871653926746994,    -0.00859641711948657,\n    -0.027541023344170894,   -0.01884157920025267,    -0.017965003090144805,\n    0.008906683888678124,    -0.028228590370675866,   0.022833563152057843,\n    0.0033295596153319574,   -0.00413772316632963,    0.0032583342534624232,\n    0.0055177811071673135,   0.0206444599991379,      0.032274889990125545,\n    0.01516882527446467,     0.005366029537091738,    0.019346654562336474,\n    -0.02520854748129492,    -0.017538790027689457,   0.00043472308550282897,\n    0.02598221793651373,     -0.02109132109562981,    0.00738495033739202,\n    -0.028174341778160993,   -0.016986696375481492,   0.018473621959681916,\n    0.006000271513506397,    -0.012942239514064233,   0.006881496353742609,\n    0.0035899174385566335,   0.011550343964772065,    0.01170641143216817,\n    -0.015387235157970698,   -0.021706348019418516,   -0.020934573106259076,\n    0.015935694528157334,    0.006442061127755868,    0.022260907934179442,\n    0.022358530416474474,    0.007007292468790972,    0.008933873914632946,\n    -0.02448687665353481,    0.0035643119567602844,   -0.016876357223558052,\n    -0.017126659915417442,   0.0326741789776262,      0.008725790990423745,\n    0.008597369411554208,    0.029781621372014105,    -0.015981219142579297,\n    -0.00030742139457256326, 0.0336991297570397,      -0.0012690541299294556,\n    0.012670713126616153,    0.01059007316343575,     -0.019515608625304864,\n    0.028618090745245604,    0.017154218779083366,    0.02779105386895416,\n    -0.03089408701595085,    0.03110071162587303,     0.011413369866384826,\n    0.02017287421502643,     -0.013825743887786035,   0.004982790930029425,\n    0.022409889586665954,    0.009019149426458237,    0.002539741272541997,\n    -0.03140577545298419,    -0.0009232315896464988,  0.01826958925622075,\n    -0.008629287379125446,   -0.030961431045394703,   -0.012596435983691479,\n    -0.01994453272671666,    0.0011756804144027544,   0.0274107697244484,\n    -0.002647843606937983,   -0.01733661290444488,    -0.027573391392729168,\n    -0.0036378302076572806,  0.02695860119542697,     0.023971783138836956,\n    -0.019843014336149812,   -0.026410967001298136,   0.007162589096201837,\n    0.003958417180235168,    -0.0071526101711064894,  0.004617323822402375,\n    -0.025079825256646458,   -0.010679106428250738,   0.014471028985833634,\n    -0.0072447556726058515,  -0.006894807571316568,   -0.03308571121255162,\n    0.03508952088133971,     -0.0045620348030882074,  0.017359128214682645,\n    -0.018975573599469844,   -0.03145171578242786,    0.006894897205191699,\n    -0.026504384543573612,   -0.004542491188670632,   0.011713584164483409,\n    0.029841196210242733,    -0.004606758218889157,   0.004015194558285917,\n    0.01634620023851811,     0.0012020669035293164,   -0.014548700697410393,\n    -0.03537759000292534,    0.006313946171374675,    0.011145448315512903,\n    -0.0024571564078553604,  0.030055409118961412,    -0.011672828800090818,\n    0.010925947605722217,    0.014855605819383031,    -0.008373780333459273,\n    -0.020019649599628698,   0.029695648215350912,    0.001580506343552065,\n    -0.008616309006320162,   -0.025086813115239595,   0.03498404452262456,\n    0.016437417931231702,    0.0010958427091006884,   -0.028099744296871555,\n    -0.031962412955650825,   0.028967112729337337,    0.017084678268967264,\n    0.027693379430248955,    -0.03269426582261794,    -0.01289667578736986,\n    0.02984790956109282,     0.021127557373123995,    0.03528365542566993,\n    -0.016876095484789314,   -0.012784476563132013,   -0.0033996025431345307,\n    -0.001485899967795301,   0.017296279184007713,    0.018234977132103716,\n    0.013399439933257975,    -0.02618730160518601,    0.027166876923707926,\n    0.02377756217407985,     0.010361480950352473,    -0.016488010832922163,\n    0.035283497501136026,    -0.03034700530713054,    0.011884812085004462,\n    -0.0008121930742205986,  0.019239399734792113,    0.029693449212543264,\n    0.014210307613962199,    0.007048350503490492,    -0.019993897079750647,\n    0.00772229159708573,     0.02696999302823689,     0.024230291989477133,\n    0.030057348212768047,    0.03148148867087687,     -0.016009540076391993,\n    0.013996023774039934,    0.010923039344960377,    -0.02104695034283855,\n    -0.018803348374093632,   0.03475820891693491,     0.013962488124659705,\n    0.003973287122925273,    0.03167933725618795,     -0.03106328268092802,\n    -0.019169491433345533,   -0.02951455740648746,    -0.009572564378387556,\n    0.018015480661619444,    -0.025640503624525524,   -0.03450056893952643,\n    -0.02288251009057069,    -0.006590433472625842,   0.020242305327150125,\n    -0.019574504414505152,   -0.015079414824178548,   -0.015020747544877889,\n    0.010726287201606859,    -0.029157352792455418,   0.028864578855388845,\n    0.019368167681644677,    0.020523332559824192,    -0.011509886531378457,\n    0.03499098078209526,     0.006809210665826626,    -0.026949858037770523,\n    0.03313687712918444,     0.022434565727828298,    -0.021048141790100377,\n    -0.010712964122504989,   0.01609007690879718,     0.0056843358989293125,\n    0.029042585936912016,    0.005220102296479313,    -0.02598948966795269,\n    -0.0020947570360694673,  -0.028426109029399474,   -0.00911608210071458,\n    0.022899664888545175,    0.025657197282025437,    -0.03535149609757652,\n    -0.006240166925659476,   -0.005450643667502689,   -0.0208088561098542,\n    0.005114376539869284,    0.011018154031049228,    -0.018801054065698333,\n    0.02971896602256262,     -0.020562243868995935,   0.022664022401142292,\n    0.017761554110173095,    0.016050650013219415,    -0.006308790079607146,\n    0.0036051666505527553,   -0.011805017612713527,   0.014058373242687938,\n    0.028831302812482567,    -0.019688145433441946,   -0.030215473549102746,\n    0.004669734112304702,    -0.028798518180417017,   0.03393829532631371,\n    -0.012416378685654919,   -0.018331171824146324,   -0.012213567856639407,\n    -0.028188010645977042,   0.0055441825776317046,   0.029339000430196778,\n    -0.02859768812822037,    0.021910478953217943,    -0.010907077219717738,\n    0.028093340307799395,    0.02126732510813935,     -0.019620968551593645,\n    -8.224065311091782e-05,  -0.01888268070171065,    0.03433195327126531,\n    -0.012139835979513092,   0.024400765224373216,    -0.016630062843080762,\n    -0.0297905586706018,     -0.01278460195666193,    -0.015166296983911325,\n    -0.016502967584098256,   0.011267461057173196,    -0.03291184937436134,\n    -0.011211428904202752,   -0.0242050249218145,     0.03570747468881299,\n    -0.032868405990116034,   0.02524786423998565,     -0.02969229181557432,\n    0.01640725699930021,     0.016005538046036803,    -0.033370867975151715,\n    0.029909125801727346,    -0.010212457294313018,   -0.011888117798095732,\n    -0.027355857670668907,   0.010303884877827414,    -0.00886007694822079,\n    0.004095158777049801,    0.02613935442380436,     0.029998697416742943,\n    -0.009040284113886925,   0.017361431364995832,    0.009706923998605994,\n    0.013424527363210528,    -0.018289171620044817,   -0.0001674529590455934,\n    0.02109418955050833,     0.006116702466683245,    0.02517635386416765,\n    -0.0008783262631977182,  -0.00748579919501306,    -0.023422427452881,\n    -0.013739104414359262,   0.025382011253568385,    0.025988790269036752,\n    -0.007324561880747609,   0.006920930799423939,    0.016504880204686847,\n    0.023221196896902375,    0.016106542419088012,    -0.031777024682889676,\n    -0.00904964957755709,    -0.009260830351957548,   0.02518559763761861,\n    0.015840032264286166,    -0.03544056504091459,    -0.0035196561769856778,\n    0.023356982464721232,    -0.028808745473414974,   -0.01721681566913781,\n    0.011023814571834989,    -0.006751532160067669,   0.011352097338868739,\n    0.0020265909856441483,   -0.027658197759257302,   0.021626199317284725,\n    0.013503090922438954,    -0.03563415894312416,    -0.006324728273086785,\n    -0.008934387244244129,   -0.013205567818055264,   -0.03400794587184206,\n    -0.022965232753243713,   -0.027294713803232545,   0.006401681122470946,\n    -0.03126796628930336,    -0.01189594005219165,    -0.0023374818039889928,\n    -0.01980005568475353,    -0.022309216607378016,   -0.019758423217976225,\n    0.021260792288931168,    -0.03036853246301217,    -0.007028778943964761,\n    0.001991776628389587,    -0.016945627508538078,   0.024498625564177666,\n    -0.007035911608494451,   0.027474379556158095,    0.016814345149418906,\n    -0.029654612114722635,   -0.027666587099159968,   -0.015200862516061675,\n    -0.018421031816205,      0.02236597376407144,     0.029877278153716276,\n    -0.027547430755655695,   -0.004895273877130957,   -0.012065356356263173,\n    0.004503134288807592,    0.03209612551623554,     -0.008870381679997397,\n    0.014060260159000915,    0.0054284758520139155,   0.03314680880555016,\n    0.00950278751308737,     0.0031024619768652323,   0.019427281338217344,\n    -0.015606027519319459,   -0.007271495219376192,   0.016724210095819193,\n    0.004260012521144821,    -0.03127455392318386,    -0.0343983597543846,\n    0.003238115717039683,    0.015869082806705768,    0.012546862582417082,\n    -0.015377401541159963,   -0.02136555526216711,    -0.024092829526365964,\n    0.009639692502543087,    -0.029133016084442336,   -0.015529347751205751,\n    -0.016610767987235597,   0.014427828599812445,    0.0038696512487710806,\n    0.01660433644757395,     0.01848229687952937,     0.018066358273600116,\n    0.006234434897195836,    0.03461062828075486,     0.005128587863205358,\n    0.019507546406867304,    0.029579809841695788,    -0.008655526290678672,\n    0.00658690242886222,     -0.032232037939943926,   0.029511121746440626,\n    -0.011726200374618181,   -0.024468761485302557,   -0.009590797031503371,\n    -0.017038167519382474,   -0.019172711575720394,   -0.025017337710639576,\n    0.005387440043088292,    -0.003231728739416374,   -0.02829705401664687,\n    -0.01382699941818435,    -0.012632859347748247,   -0.02413076521770344,\n    0.010670792027807288,    -0.0009002231391047769,  0.02858705973799531,\n    0.001697796705045337,    0.02525305044290069,     -0.02485714672136219,\n    0.0026512895533362907,   -0.026427950360140076,   0.01465225525624935,\n    -0.008533818302237832,   -0.013022080688410787,   -0.0245165027283805,\n    -0.01227594672249637,    -0.000348769970296346,   0.004099301122454633,\n    -0.034258980850116715,   0.018131965294110344,    0.01364135092269241,\n    -0.03532631450297937,    -0.003778604097561541,   0.011516063703950339,\n    -0.0026820251226360604,  0.011553380256022252,    -0.03386860982573166,\n    0.01058086965446342,     0.0181502282448651,      -0.022274381564775854,\n    -0.008253828146446191,   -0.01256443323101907,    -0.01673468259264196,\n    0.026076613077309563,    -0.028275591779138565,   -0.030288829090213763,\n    -0.018794643233699417,   0.0007503946082470672,   -0.006176297564791179,\n    -0.0158214963478895,     -0.02372601229016376,    -0.027635319632806608,\n    0.025920157609548314,    -0.014075084750650295,   -0.02968009312308093,\n    0.018209668946691116,    0.030220980760055437,    -0.00019923614413333964,\n    0.002332663281137237,    -0.03149587248633276,    0.010737734732219522,\n    0.015381745679954928,    -0.0054856510415250805,  0.017353222786724434,\n    0.029098529440350136,    0.01392392496633398,     0.03238092264683507,\n    0.03241907578291466,     0.021660546443170392,    0.01643782886816547,\n    0.017254052429296386,    0.033842383786319145,    -0.013147937674744734,\n    -0.01655151319684826,    0.025077064426694176,    0.004096152259872722,\n    0.03548934245418945,     -0.0357088522816228,     -0.0017085258220701424,\n    -0.023214230038321404,   0.003661676924366887,    0.0005021534637082674,\n    0.0015702098876726228,   -0.013717715401183106,   0.007854356656472716,\n    0.0292082759535362,      0.024743809068054123,    -0.0191261373716031,\n    -0.021904608794887783,   -0.029965474817477265,   -0.011846211238535496,\n    -0.016285137736898023,   -0.01961151523431237,    -0.005874153452319484,\n    -0.016009801148022085,   0.02089125030438026,     0.032336429699445474,\n    0.006804316162578126,    0.027702532350224397,    -0.007975217844196152,\n    0.0332309677589962,      0.023085742009392656,    -0.0003377049157107633,\n    -0.009177341368693406,   0.01580473119488367,     0.01254309336507875,\n    0.01850455590418151,     0.018960767643259362,    0.02671251523658138,\n    0.016895143366171917,    0.01669215839930326,     0.00386752206883491,\n    -0.0029946592063726835,  0.004540047554072644,    0.017669130608734134,\n    -0.004814840209822495,   0.026067601477169307,    -0.034609350398889585,\n    -0.012060112114325432,   0.0289099873873495,      0.020994828232652894,\n    -4.82397131323285e-05,   0.031141319925984345,    0.029995177617460764,\n    -0.012977978995485853,   0.018380716283227048,    -0.002479543739066535,\n    0.007528411647273692,    -0.022678352216031657,   0.021638561793133487,\n    -0.006361918143952483,   0.020525948504264233,    -0.023194904520179915,\n    -0.020171710441240283,   0.013211151695526191,    -0.008332235521221254,\n    0.0018588265391798553,   0.022967606470250035,    -0.0193380466199695,\n    -0.009371685607858163,   0.020844106484282008,    -0.02769423311844499,\n    -0.008746181117423835,   -0.019779891322112726,   0.03417887640077726,\n    -0.035637393949053645,   0.02317198398445317,     0.0009078543408875896,\n    -0.02401245079171277,    -0.017148396976907787,   -0.019062221714552494,\n    0.004357189713654325,    0.024064227384859874,    -0.024183656351122327,\n    0.012596540312721916,    0.019815764929034186,    0.018474848979108473,\n    0.004159318573960719,    0.010542247537086642,    -0.006800107458938609,\n    0.008369822236423106,    -0.019421554218228148,   0.010549527173524063,\n    0.0352060310900296,      -0.024262459436779737,   0.008204700027430107,\n    -0.01959328423681726,    0.03373693818056354,     -0.008785050868465696,\n    -0.001059070866253358,   -0.03358530658085625,    -0.03117845099161537,\n    -0.029138386525805214,   -0.008242848564260297,   0.027405597082729327,\n    0.00592768905445405,     0.014747754125797945,    -0.02569985282687397,\n    -0.008095035001195412,   0.03467172657567353,     -0.009974312575684825,\n    0.023548305602591413,    -0.01257243412370333,    -0.0023658317277425334,\n    -0.018110989105469145,   0.03415119299369473,     0.007611062264749993,\n    0.014084524935275788,    -0.026117758503892505,   0.03165702206084894,\n    0.008164784960006506,    0.02687923762217799,     -0.026654019513967786,\n    0.014916150106189636,    -0.015426827070361518,   -0.0318179345902834,\n    -0.022542640763037896,   0.029545560411304295,    0.031946431980792805,\n    0.01400281162955779,     -0.007532367058258088,   0.02022638400157466,\n    0.028555312901223102,    -0.01270847420523417,    0.019444587165713772,\n    0.035105387245155946,    0.031964014202595835,    -0.024984942870306653,\n    0.02004073945386396,     -0.01267976260310405,    -0.017706365933993336,\n    0.03502439111118876,     -0.02069227044431653,    0.03395105113625247,\n    -0.027510876235696605,   -0.009185658200971954,   0.0030758282162610673,\n    -0.005284686177851716,   -0.03255457185705041,    -0.007868239763774916,\n    0.01901075021595586,     -0.009819348483689046,   -0.00246887267627875,\n    0.003822121967890882,    0.014243270300414801,    -0.030844397860344708,\n    -0.018603745496023196,   -0.02858456051039117,    0.017827121233720423,\n    0.024223183799744075,    0.02958380171166868,     0.005774182102584996,\n    -0.030989114906632156,   -0.009683544428855597,   0.01450980892162455,\n    -0.02520284260521477,    -0.010348310598736896,   0.03425853530520441,\n    -0.022751245251206743,   -0.004626413535357825,   0.033097885808979634,\n    0.008489187881569016,    -0.01532926525864653,    0.03240261579906075,\n    -0.034927799451686996,   0.03237341897764108,     0.002569864096403394,\n    -0.035067488103971214,   -0.006191502639234411,   -0.007699636387942077,\n    0.012616325467205345,    -0.031459110215308124,   -0.026583425308945544,\n    0.023941382154867574,    0.035349894102715745,    0.024934540541400135,\n    0.017365413430360535,    -0.0073237298465535184,  -0.01884906806022109,\n    0.025888339530066265,    -0.02586349007372892,    0.006671562489791861,\n    0.01180886407764802,     -0.007596099483638493,   -0.007857963687762695,\n    -0.0066306094238434456,  0.02907771930948198,     -0.0031749907915395127,\n    -0.0021941157295575615,  -0.006298204909914729,   -0.010211036057166532,\n    0.021036425215825334,    -0.0012648447928644677,  -0.01024258043995386,\n    0.003679901935655784,    0.004940430066032405,    -0.009710955316907528,\n    -0.014011395436060756,   0.0020175149861744257,   -0.007863201186518327,\n    0.007736204454558915,    -0.00840236382689751,    -0.005894517247422079,\n    0.002969280616333725,    0.03339797835307135,     0.008057259699122426,\n    0.012217597074407687,    0.004215411221285016,    -0.0034127571177465866,\n    -0.011396005174377182,   -0.018943148608800118,   -0.00880451355521829,\n    0.014346589303396558,    -0.010163089370525742,   0.03209539661737143,\n    0.0018986963221916476,   0.033664921106398994,    -0.02835039226593614,\n    0.013672139749834982,    -0.025553045613427295,   0.0037835745143832778,\n    0.03427779532278087,     -0.021587685811559024,   -0.0207804625317783,\n    -0.014662886906383137,   -0.014863495989970213,   0.017023004908708457,\n    0.020512473086215146,    0.000769812189540047,    -0.021707658189176107,\n    0.024675626481952213,    -0.012140212578326488,   -0.02308293594439584,\n    0.022241585870445866,    0.020010647701812448,    0.020728026617718314,\n    0.014873225630196241,    -0.00873367262495995,    0.034409803860781706,\n    0.017120102567822638,    0.02592914086215139,     0.011775834234877427,\n    0.013811721167669813,    0.009739744792905076,    0.019243240018789232,\n    -0.021461658653293816,   -0.02240908164040738,    0.034167681854801436,\n    0.0031595394117266418,   -0.0149366979788493,     0.01816950834552564,\n    0.016762462092057236,    0.031238081036394725,    0.00012590014475912157,\n    0.031933180793624005,    -0.00827633918899944,    0.028608662484110772,\n    -0.03208312353668297,    -0.019742026538806093,   -0.009378895909312963,\n    0.020030561422336644,    -0.011645116048662934,   -0.008403441655444717,\n    0.003831487872676929,    -0.0004320475878311398,  -0.021300934389108708,\n    -0.013821916860438257,   0.016326094651031835,    0.01903840324947126,\n    0.025299622269287336,    -0.025308824282035472,   0.0011764330485960958,\n    0.0028848794998661154,   -0.02411090581213062,    -0.02243877944521757,\n    -0.03414745237139865,    -0.02155078048915768,    0.03384051458017001,\n    0.0037106835438302744,   -0.03234224898124179,    -0.028205363963073667,\n    -0.011219336446709305,   0.032803378818435674,    -0.033607865636404555,\n    -0.022247184237043097,   0.002540925192404635,    0.03297255871996782,\n    -0.022509329507661394,   0.009633617922547093,    -0.020977282670747378,\n    -0.03253546463412973,    -0.02843890759571533,    -0.02919566167959243,\n    0.016583863815384046,    -0.012318090192188491,   0.01619226181495419,\n    -0.023353424753380075,   -0.001719812152963272,   0.012809475038622713,\n    0.019393071026163847,    -0.012340112183801797,   0.0021264816660956838,\n    -0.017176241445452607,   0.0160427715024899,      -0.0023781055838925647,\n    0.022039974188588447,    -0.031024726956119398,   0.0002525632731980904,\n    0.026237178905009317,    0.031827803741998985,    0.02651533217772482,\n    0.024267930031561198,    -0.034012093188725424,   -0.026655195054634706,\n    -0.028510319771894197,   0.0279488128637679,      0.026005649585732427,\n    -0.02823726778104044,    0.035641432152155775,    -0.0018377155071691337,\n    0.028093708676419527,    -0.0344003250973244,     0.014153010202091181,\n    -0.02860058000821593,    -0.01049676174011449,    0.030046689191395484,\n    -0.006880132949560025,   0.005369076015913108,    0.003185497339487594,\n    -0.0069650276715141025,  -0.02111169889903938,    -0.0036787219451630626,\n    0.018882556351204616,    0.0318150222422899,      0.013370968170326862,\n    -0.02331995965603706,    -0.02797626067055423,    0.03500060423743495,\n    0.014316823226482065,    -0.0168733412037235,     0.00902081045428161,\n    0.018371050040711132,    0.012679863468909829,    -0.026444613803124517,\n    0.013504335562548462,    0.012431358235891928,    0.016697424398023866,\n    0.004761023822741477,    -0.024984815174032813,   0.02720456402191033,\n    -0.008004584935383996,   0.03445230038536031,     -0.010378577635645965,\n    -0.025664461342219873,   -0.004084295542182322,   0.032334660827495476,\n    -0.009004841242868536,   -0.0208666606600206,     -0.015213967308998249,\n    0.00929398021744478,     0.016639408350842298,    0.02748677322509466,\n    0.0314973796515802,      0.006761646390577818,    -0.021658757004380483,\n    0.0022459753964716206,   0.0323717543217664,      0.01735569220284353,\n    -0.01438413242415365,    0.027230196404297007,    0.025197578912818295,\n    -0.017119945342426755,   -0.012128364523949236,   -0.03427385748024401,\n    -0.02226904055478267,    0.035419966994665,       -0.034839777569931465,\n    -0.026779773053979286,   0.010120614913864645,    -0.011577050618307208,\n    -0.01426688321997694,    0.028312087286289887,    -0.025058222251712493,\n    -0.025630409153113754,   -0.024348088126118914,   0.00686491496805665,\n    -0.01667611515921076,    -0.0082841669645528,     -0.023060607368199877,\n    -0.029531824817722596,   -0.012113431606485876,   -0.019605242900145592,\n    0.0054166828253569155,   -0.001540500566169873,   -0.02933636616670933,\n    -0.0008397599378800944,  0.022681727736198712,    0.022955768749864425,\n    -0.007593615318558613,   0.013406110439721484,    -0.027465378845986755,\n    -0.006633223315280973,   0.03171985328085483,     -0.025575527915703063,\n    0.018026994955233713,    -0.026735244179112945,   -0.028890756976522134,\n    -0.0038908677431792366,  -0.03476748069525926,    0.01113863728423748,\n    0.01398095067962446,     0.0073930219545219845,   0.03273249738090921,\n    0.017296652633704435,    0.031125846954082024,    0.009757450032428212,\n    0.011878511837325323,    0.02836231665986172,     -0.007657215839963268,\n    -0.024305235082270876,   -0.031246184628498253,   -0.03058306180810542,\n    -0.01582301713985447,    0.025644384508659444,    -0.006647895574759397,\n    -0.02611976247037462,    0.004832433904392387,    -0.0019940783124389977,\n    0.03481147109207269,     -0.02570253250071808,    -0.019067046168206876,\n    -0.013816311241470392,   0.020647957581824843,    0.026443620140589937,\n    0.02767294493407564,     0.020736094251395488,    -0.01923683772599587,\n    -0.0162828723068979,     -0.02219316845325936,    0.029561114862679077,\n    0.0025639459404228626,   0.01769647548092478,     0.030336298298927762,\n    0.007977894046026786,    -0.032679001765458605,   0.02868059503257111,\n    0.01962532025511297,     0.021085194570018933,    -0.018198508871741657,\n    -0.014311757186336727,   -0.01150893813809819,    0.03182566328677788,\n    -0.03245963440767321,    0.0053470323935720055,   -0.022253711229893083,\n    0.030533708238030546,    0.01773208224571007,     0.012964334477842319,\n    -0.013560326642914589,   -0.018729257396879598,   0.001561080278326299,\n    -0.016764206880795367,   0.03265216114522625,     0.01582103285129646,\n    -0.033113422060733415,   0.00460451480122685,     -0.01792980618614245,\n    0.010996347567374649,    0.021088631681789805,    0.0010541189852478522,\n    0.025110327529047245,    0.003799087517516191,    0.024522354194852665,\n    -0.019092454498316598,   -0.025866421516315786,   0.009954099710734006,\n    0.03190509604700322,     -0.010609137219707838,   0.023496851364543506,\n    0.0001311115089985826,   -0.023002601621626394,   -0.014629378197637075,\n    0.023881385181843334,    -0.021062467795631937,   -0.03395315572130641,\n    0.018847743922699143,    0.02933393604639751,     0.028220907248250056,\n    -0.029357582764688615,   0.02284725097537072,     -0.005418302704365131,\n    -0.009188549631591103,   0.035116835059473044,    -0.008866799722236736,\n    0.030991737282439733,    0.026368006654771535,    0.028190463866048936,\n    0.0020528652195764036,   0.023753708984754388,    -0.010574867316992849,\n    -0.027094025623746996,   -0.02672031196581661,    -0.01969134038768816,\n    0.029549074760471836,    -0.026346147421147752,   -0.0214920311427846,\n    0.02930285811405579,     0.012647918225710564,    -0.032911513777290825,\n    0.034111749344030357,    0.014069791863885073,    0.013654234896432074,\n    0.035404709652128254,    0.026782303582587486,    0.024388409248498808,\n    0.011285935562896554,    0.008652020808117254,    0.003065722201970179,\n    -0.02130156826387293,    -0.034187843224799175,   0.03468079807674971,\n    0.011515266584247674,    -0.008572605540934022,   -0.023588737283635402,\n    -0.028168241692625978,   -0.031523907183968185,   0.02892957113542889,\n    -0.024935653226577877,   0.012470734322787383,    -0.028250829975496113,\n    0.007954327622317212,    -0.03554262736292277,    -0.03186773045196432,\n    0.029298933055452923,    0.009868152323599666,    0.0061839511427118155,\n    -0.03277333822239407,    -0.021891410957050612,   0.010926905122309776,\n    -0.019195219960747235,   0.023212071258144396,    -0.0020832847356460466,\n    -0.022062223866845355,   0.009436906636425673,    -0.023030505948470226,\n    -0.02336960133106224,    -0.005621765226733013,   -0.017513003088419965,\n    0.030543098841249672,    -0.02118182963158297,    -0.032907437341702074,\n    0.01642963566839379,     0.03223983899929735,     0.00027330717382391596,\n    0.007999449634325535,    0.005956238176385955,    0.012056277814041932,\n    0.029737473726542094,    0.004902151222683623,    -4.072150709077166e-05,\n    0.017593277308699886,    0.013544717446540542,    0.020270069450757575,\n    0.016252568770536973,    -0.011913724115048008,   0.02229510526614964,\n    0.00019307763192863027,  -0.029642533595575282,   -0.03041834490366925,\n    0.021472038033952645,    -0.02521151819074475,    0.02703612876274681,\n    0.0030257221709885014,   -0.007943309796440296,   -0.03224194153630595,\n    0.018861669414767974,    0.015897587709064312,    0.024665229015284798,\n    0.005329360722133271,    -0.03526261835464513,    0.02112638639645116,\n    0.033181358202078355,    0.010011029648120744,    0.009102396162046507,\n    -0.009464645844787027,   -0.021111285940875024,   -0.012764360333284755,\n    0.014454661797303574,    -0.01218588602583448,    -0.02463792234825324,\n    -0.02396819231017892,    -0.017436299733965654,   -0.001109398277791702,\n    0.029416610285435803,    0.016542419480602602,    0.02244425688070065,\n    0.028748265080139866,    0.004300733179222043,    0.02727576230716031,\n    -0.0020176741696483914,  -0.009580672943247643,   -0.004376009214796465,\n    -0.00963157291556319,    -0.02366298838286406,    0.02587813559669007,\n    0.0027676061732003683,   -0.006041178301961515,   0.014442454699412948,\n    -0.03148688917301563,    -0.0133882223660342,     -0.01398621869525653,\n    -0.006050029860562086,   -0.033459611565746866,   0.025481830136627113,\n    -0.008948943125297482,   -0.0331175550467145,     0.017803412227749116,\n    0.009484509553775389,    0.00023732911692469255,  -0.007160006388838307,\n    -0.005117264502755847,   0.008986487085261095,    -0.027809799673583522,\n    -0.020802723176015447,   -0.02021195243506937,    0.017504774829612244,\n    0.0001880353050965582,   -0.03000832070717136,    0.03419499846489343,\n    0.03266708474268889,     0.005964595821472153,    -0.002070101963805661,\n    -0.02719442009142602,    -0.02313394498140706,    -0.0034099738116310186,\n    -0.0019909354052378542,  0.011961157713460726,    0.0034052179418038965,\n    0.017682606225143505,    -0.0074320139743588465,  -0.009148454261019297,\n    0.01267880409112982,     -0.0013183468774021767,  -0.01889507280998629,\n    0.023951573630769052,    0.010607662734775416,    0.010459312350084182,\n    0.021358884127215132,    -0.022615433207693436,   -0.0009243687651557332,\n    0.0005291105633146641,   -0.001571727770791144,   0.01953188620221575,\n    -0.015125499048752893,   0.03537146546481785,     0.009222855011638251,\n    -0.01922003447831827,    0.013584223702473346,    0.02423060197180961,\n    -0.02528922823015356,    0.004880085846839331,    -0.012269813788711337,\n    -0.01097159740912049,    -0.03331429845512804,    0.007076687100804382,\n    0.0028817306394430726,   -0.009511896123724002,   -0.00683354942165886,\n    0.001999063655341407,    -0.01128984591287463,    -0.004289668867018449,\n    0.03462603948600043,     0.012025723337762782,    -0.02728323897850162,\n    0.004900825272590915,    -0.0067130268217345,     -0.016122122896771663,\n    -0.016489884321356976,   -0.034472185478876045,   -0.013029925665130653,\n    0.014417235563940945,    -0.004533197834950883,   0.008044505026524984,\n    -0.03394890674051921,    -0.009353621855625128,   -0.021188161231085887,\n    -0.026286016074709435,   -0.0018664044180455863,  -0.01636006881479607,\n    -0.027771795423460182,   -0.017832704593052164,   0.013543906232246517,\n    0.03477046845874281,     -0.00124098626734781,    -0.035544190632694615,\n    -0.03335392782554502,    -0.01658311408675628,    0.010366406287749421,\n    0.02380106384011578,     0.015155765259482486,    -0.024144886494179316,\n    0.02240935323102434,     9.411340860954187e-05,   0.0018896628475711702,\n    0.007055141174040063,    -0.012530887277290403,   0.018234013888064306,\n    0.01913603545865238,     0.03288274197470144,     -0.020558596024589686,\n    0.01793828118012404,     -0.019324168391025336,   0.032387666798917046,\n    0.01714966795740431,     0.02057164294391053,     0.026146675151918382,\n    0.03201074628860395,     0.016115280786046498,    0.0277120513398442,\n    0.0186068115739119,      -0.023791073209242262,   0.034427961279492415,\n    0.0037180672130724163,   -0.02651233743849678,    0.02020191571943084,\n    -0.02646971285937485,    -0.020697989694010932,   0.02728583581068452,\n    0.007502797514084296,    0.01528699410569947,     -0.024110588051330473,\n    -0.027364711045704964,   0.023058463030916455,    -0.003897750444672562,\n    -0.003283755402115808,   0.005560069431679312,    0.0034454440210008,\n    0.02718005039017147,     -0.008241380465771322,   0.002178880393242813,\n    0.016451144669255704,    -0.0261046414164074,     0.02973524715164565,\n    -0.013627994163967538,   0.004192740261730055,    0.032467302549868744,\n    -0.03200366639304101,    0.02492709178283419,     0.0338615156297381,\n    0.011703483523732666,    0.03099836119873022,     -0.007412347056306492,\n    -0.02589778361091281,    -0.0025489906956634445,  0.006475496802030856,\n    -0.022765680286622847,   0.02790360403782963,     -0.02024597479599086,\n    0.015522350085557626,    0.006662900099458563,    -0.02563712046780912,\n    -0.028962344147830697,   -0.017623502038396948,   -0.00298923268476963,\n    0.025781309874652047,    0.009855562777794797,    0.016270267406551582,\n    0.033704874987574525,    -0.027872581114895545,   0.012717722432880281,\n    0.014464222740679615,    0.0318210993270413,      0.03221912156688836,\n    0.02135299399109263,     -0.020554482997048682,   -0.014675779852121889,\n    0.007154210251550124,    0.03287767771031901,     -0.03445341031501248,\n    0.008906544224110595,    0.03068367599450101,     -0.022780151920066723,\n    0.03375315881253277,     0.015170736884746619,    0.035468470084596714,\n    -0.007450530817749529,   -0.019748449894167335,   -0.003180170511915159,\n    -0.03483078228873643,    -0.0037720289285327335,  -0.008921652160096168,\n    -0.0039227616027120915,  0.02095251301323109,     0.008041322708278198,\n    0.03351938435830294,     0.005175620776044141,    -0.0016859999954056404,\n    -0.005248865739281365,   0.023546214039679672,    0.01453242246670008,\n    0.004285724809678307,    0.03132163460135965,     0.026146838126899274,\n    -0.02177293858429763,    -0.023719908972481565,   -0.026363656630791717,\n    -0.0034799203079964786,  -0.01453502695884922,    0.033563164735304137,\n    -0.029534826726986277,   0.01715087779125445,     -0.007719318299564086,\n    0.016576082471225193,    0.03265527090246624,     -0.015667547452518193,\n    -0.03214047042782504,    -0.019166912156562313,   -0.0255177202965274,\n    0.006056736917574246,    0.00989254215888544,     -0.027125892703722246,\n    -0.006771054909589767,   0.030586920183415578,    -0.02470415492810507,\n    -0.028861372606692914,   0.0027185853446740705,   0.004952501577045163,\n    -0.029112158087445286,   -0.023340429042308063,   -0.003342593835088757,\n    -0.007447994892825318,   -0.00529746647703647,    -0.021729629075323154,\n    0.017505071253251226,    -0.005643077862749082,   0.02069016883530489,\n    0.02383323868389605,     -0.020744888618499418,   -0.010050487438782372,\n    -0.032431146397127165,   0.020456316448222694,    0.0293512561771611,\n    0.02024183045127121,     0.022693452703114663,    0.017789879473124128,\n    -0.025428411659507343,   0.016924843429990604,    -0.010525741971874709,\n    0.029781592884324404,    0.026981264233110334,    -0.019856363755394353,\n    0.013103097952183958,    -0.004976733436406652,   -0.031963265178565986,\n    -0.01218048183755637,    -0.0218373754690273,     -0.0042860691490548665,\n    0.001794676778377421,    0.020574041911662178,    -0.017379387814634287,\n    -0.01018814247567642,    0.033024970546154414,    0.006053068421276072,\n    -0.024633642262619476,   0.00608467800437302,     0.017657301481911587,\n    0.016867639486815196,    0.030741304815044557,    0.016723597875583338,\n    -0.006243839611303552,   0.0207326601126437,      0.02936072852932879,\n    -0.006729132439116626,   -0.009233630935550963,   -0.012777662135309642,\n    -0.02678751801278658,    -0.021982820383952138,   0.005263684576275272,\n    0.03055562117250977,     0.007416216325927173,    -0.020807958146662656,\n    0.007293123005670056,    0.011452476345953857,    0.025845474978140315,\n    0.0029562355747372233,   -0.02451468584535666,    0.03317580598466846,\n    0.006788071190703309,    -0.004353388597791512,   -0.031072416250513567,\n    0.018518059066356642,    0.014257323189870035,    -0.012739806768635214,\n    0.024127520103380727,    -0.008945133326233414,   -0.025950598890153297,\n    0.027550002305261834,    -0.0018433944620333382,  -0.03491186869050395,\n    0.03502679657236709,     -0.022150383143008386,   0.023040758416124414,\n    -0.019091359333105858,   -0.020747059049614183,   0.016071782683523064,\n    0.007341878808419942,    -0.005892720352344021,   0.01566800674212937,\n    0.017610256176032686,    -0.01795561653977002,    0.020859578152496273,\n    0.021955153779321192,    -0.011198786307982656,   -0.00048108726818209464,\n    0.021806229564523983,    -0.025190673452120005,   -0.0008853292808680254,\n    -0.011465619605837663,   -0.0035368110141911846,  0.020218887599431617,\n    0.010821320244485589,    -0.017866732890481827,   0.00019585731920464453,\n    -0.024102869397960167,   -0.034491406444375906,   0.03234309148963756,\n    -0.01486142867370549,    0.014561611904737664,    -0.001467520297661554,\n    0.014591052468100019,    0.01722177352057075,     0.01654117636076119,\n    -0.03462090007293365,    0.021654710593264823,    -0.034160496900534035,\n    0.008596302096545978,    0.02580489381053882,     -0.03349531834391791,\n    0.03396303702870495,     0.006322826954506041,    -0.02866720623386124,\n    0.02889058274108951,     -0.023712783861809233,   -0.025917897234412766,\n    -0.023408173815835574,   0.005896289914619776,    -0.018832398632740815,\n    0.013917662542093898,    -0.0114180598095815,     -0.026228769323714245,\n    -0.027270583761916257,   0.027172289515838062,    0.028293023000558224,\n    0.016948123539514207,    0.02296226320025259,     -0.015210891745227804,\n    -0.003925115769831511,   -0.011871275584553347,   -0.010345775513119977,\n    0.025738158131286173,    -0.02196941525660687,    0.027149897932874104,\n    -0.01630599905572533,    -0.015575705132350093,   -0.030474618104872387,\n    0.03206423361440749,     -0.006029974588550693,   -0.02966533812776192,\n    -0.00044848436129133314, -0.01941820607067844,    0.009799357676777143,\n    -0.018805615725297264,   0.013745215345077666,    -0.013735384130149637,\n    0.026254115470000235,    0.022317489455848754,    -0.02564622513779506,\n    -0.0035099645419503023,  -0.007362104681501716,   0.020835270174774243,\n    0.02264452133728575,     0.02646521589948382,     0.0029527992028916456,\n    -0.0074348189094976215,  0.0168242093637741,      0.018925905766595308,\n    0.01435942386763922,     -0.016005874672366773,   0.027263629642725676,\n    0.020104495442896345,    0.003885939701596175,    0.013992945060818138,\n    -0.0246470956457777,     0.02567736760949796,     -0.025982954732602773,\n    -0.01989995757066784,    0.019380958289601735,    -0.0006160561067465081,\n    -0.03198903276927081,    -0.016675237591480454,   0.004214178421031001,\n    -0.006653768330016224,   0.014681773057658625,    -0.004569172419920712,\n    0.01792123895393374,     -0.004408754526688834,   0.013222965861570717,\n    0.025165249018081835,    -0.020655198042644183,   -0.02896011627006908,\n    -0.019584480978639074,   -0.02450432591085931,    -0.004735838845719994,\n    0.011499604302160665,    0.029834048774072298,    -0.0034447940228059444,\n    -0.031713148417105666,   -0.02649288164373865,    0.017822149025167773,\n    -0.00646292963143943,    0.03153144874468945,     0.026164217868638102,\n    -0.030371078327776864,   0.01826160086546487,     -0.005985706397968986,\n    -0.020623536195743964,   -0.014607540898194667,   0.02196497825974039,\n    -0.031624986864863064,   0.010870728782982397,    0.022995813411894904,\n    0.006623685450078282,    0.027788350244047275,    -0.028643147538287093,\n    -0.012713616611852645,   -0.026388244912414115,   -0.011561372502264744,\n    -0.026415191368325888,   -0.01898680232203136,    0.019261611411581264,\n    0.0031633456112910097,   -0.007466273124895474,   0.010479537226045872,\n    -0.014477927361034766,   -0.03183363866979385,    0.006803009751343838,\n    0.012485570516005549,    -0.03278088758108496,    0.029424858431869188,\n    -0.032583784221837414,   0.016024786602178365,    -0.0018595767038930447,\n    0.007530416980307747,    0.034370993631781394,    0.01135120059722992,\n    -0.007140581428880188,   0.029959602370409056,    0.007837074583672363,\n    -0.001922038484189489,   -0.02898819326768317,    0.02366745048948754,\n    0.02349733312204333,     0.02347556099509582,     0.00790884407587235,\n    -0.007883727111362022,   0.015019690835561117,    -0.024080867542524205,\n    0.01209937595439584,     0.020319927421043063,    0.03003612478563399,\n    -0.022785398839107896,   0.00803804817883694,     0.028406096401294934,\n    -8.10868920349539e-05,   0.01968495685652316,     -0.007871766486048655,\n    0.010103157465740467,    -0.030587305477435083,   -0.025574726590631026,\n    0.00938528658665114,     -0.01027978025139857,    0.007874027854460952,\n    0.03409143084733996,     0.003032613310332507,    0.024167476011654292,\n    0.006419860375523207,    -0.012863237666244094,   0.016507850741343057,\n    -0.009932136541050827,   -0.035167249423264386,   0.005445567828072785,\n    0.03542364159705586,     0.009705141979675551,    -0.018610288195739247,\n    -0.014204949770879636,   0.015758679085661347,    0.02774125941668861,\n    -0.018820443634107658,   0.0004507241265969131,   -0.01925534011888495,\n    -0.006689908466597783,   0.011328189289524209,    0.01427269945148511,\n    -0.028312600729046986,   0.016536518250752537,    0.010909500537789496,\n    -0.025979645123621345,   0.020963329638725072,    -0.021141507383935783,\n    0.01690331858541018,     -0.01589473133824571,    0.0048529145482573855,\n    -0.011301132758871433,   0.03055033069392344,     0.020476974747097927,\n    -0.022622704290311393,   0.007797355325332806,    -0.018024106947660226,\n    0.017832427017015585,    0.03299581853386876,     -0.03123952054589709,\n    -0.002117717503771464,   -0.007704314269816112,   -0.016558291719818475,\n    0.017350802914783605,    0.01636373241047039,     -0.016973150040243617,\n    0.011992567374474794,    0.025041677254752426,    0.009098600966239465,\n    -0.017431463796885673,   -0.021212729692360606,   0.026591675105971782,\n    -0.00847707683711649,    0.02844944861322509,     0.023956407768081778,\n    0.005980735672704898,    -0.024688440050759795,   -0.007432675016517588,\n    0.03542039302246913,     -0.02377021852815943,    0.00860205543990828,\n    0.026524983584291038,    -0.027944251830461484,   -0.02451021313576853,\n    0.001900709019266208,    0.007079325565826482,    -0.0063729406249024645,\n    0.030131723984330606,    0.0015000335554565178,   -0.02651315776733889,\n    -0.03205203619013779,    -0.004675935284310888,   0.027150283003063814,\n    -0.02956668096299935,    -0.02914170316414826,    0.028309013143886966,\n    -0.026252960575629345,   -0.026570938105838722,   0.009568294687567742,\n    -0.02766351163508411,    0.03506763645827251,     0.02302191253584227,\n    -0.015549043006311825,   -0.013946518214837143,   -0.00936151471438049,\n    -0.026623387329210435,   0.009743608876534644,    0.0038002853099119993,\n    0.020278413721311186,    0.0026404916675789748,   -0.026561277736342582,\n    -0.0057383906186125,     0.015146721504523564,    -0.01467844588757679,\n    -0.01561651444130432,    0.019703038552254637,    0.0008822043363760277,\n    0.01446603310465954,     0.018724454815736376,    0.00948239582373899,\n    -0.025578633538341902,   -0.0053324284584622605,  -0.02255528262080865,\n    0.03131769661961639,     0.023176503380817493,    -0.009348328691912029,\n    -0.0066019629361623545,  0.007032895077634184,    0.02824846032200849,\n    -0.020394953299256436,   -0.016031778108760924,   -0.02563530776384779,\n    0.019757620060027268,    -0.006537410872720536,   0.03020382263787162,\n    -0.006862774043045551,   -0.01896264343461313,    -0.027411628036228,\n    -0.021162421870965897,   0.014084823685893033,    0.013970814285890198,\n    -0.018040800656588567,   -0.02150396961126302,    -0.003987052885327112,\n    -0.031876773034990556,   -0.026159176722183795,   -0.000947820353206809,\n    -0.012221411654189756,   -0.020616982727022653,   0.03145703456250866,\n    0.012187284954757738,    0.019999552575108492,    -0.011025776400884242,\n    0.021848679671235716,    0.03528590822392776,     -0.023787762775736424,\n    0.015606953222724389,    -0.027439999045599364,   -0.03119594617400808,\n    -0.018639308262331764,   0.02418484749997942,     0.029734202433714257,\n    -0.006343890107129165,   0.025244581286746115,    0.03498835865983078,\n    0.01139361169486599,     0.009639901610084687,    0.02041026784487664,\n    0.008114606853354966,    -0.0016050068334379655,  0.0016045964889492598,\n    -0.028331822947574,      -0.02774427423100544,    -0.024742359568874717,\n    -0.004162896204302983,   0.02053670741267397,     -0.00667633625805578,\n    -0.022783362331112077,   -0.02879615570230537,    -0.016419065352887324,\n    0.00821129173797998,     0.02008239752509306,     0.013106032150324654,\n    -0.015285482551117993,   -0.026463501649353936,   0.026599407766761434,\n    0.03445889878951294,     -0.012940915088372258,   0.004178197750405003,\n    0.011412232320041793,    0.027553896805522938,    -0.03421441787303721,\n    -0.030848256187024713,   -0.023134311466211744,   -0.012366171590293176,\n    0.02979010623215879,     -0.009808644972466203,   0.022478847669272082,\n    -0.02239076668935012,    -0.00842723713116826,    -0.014129961820999364,\n    -0.03529511950451641,    -0.03489541857445656,    -0.01280063583731128,\n    -0.014811357490134403,   -0.010257644943506505,   0.018470889546292533,\n    0.019248960364995373,    -0.014075720419684768,   -0.0038416957973733596,\n    -0.03357599673350469,    0.02441899773939536,     0.030634572242377478,\n    0.023614081114198285,    0.02360424825220141,     -0.02304906396658012,\n    -0.029617529672113927,   0.02938016067571352,     0.005819566486775745,\n    -0.0006371127535495989,  -0.015491909424645296,   -0.02482625317044996,\n    -0.013228419601953112,   0.024455382356769938,    -0.0009619774107019752,\n    -0.0013505554786349325,  0.026305495334174374,    0.022784576951743993,\n    0.02625347265838539,     0.033648626078013125,    -0.029709602684873625,\n    -0.019594181842458425,   -0.0018992820297484994,  0.028590851177979403,\n    -0.0032264346867573413,  0.02351986951885091,     -0.012242681074593347,\n    0.02662196451253872,     0.019669740246844494,    0.029347328282282235,\n    -0.029274496247005406,   -0.007631411519600149,   -0.0013003894864562612,\n    -0.028231094772344777,   0.0012614009582857441,   0.028674965519734204,\n    0.024289948874170644,    0.0019489677693102026,   0.02684215944645981,\n    -0.01386434324761171,    -0.01607827567617627,    -0.03254405088161349,\n    -0.007523692206976692,   0.03191761457930562,     -0.016133732541237834,\n    0.02624836221370032,     0.017359219332524812,    0.0064594818934194855,\n    -0.033391139018360015,   -0.00544539317385024,    -0.031919110554009304,\n    -0.031123205156122245,   0.012185801665957023,    0.025020167635025695,\n    -0.015853771690064505,   0.014536456070158457,    -0.020651515647627308,\n    -0.007229742989307825,   0.001480287843892282,    0.032628370435054316,\n    0.009624596399996996,    -0.021838064897283238,   0.008676067570384907,\n    -0.021388640397301047,   0.019723176875210476,    -0.033785302600448944,\n    0.012018151271371076,    -0.027336105926244428,   0.0038403206039337363,\n    -0.027928754326428096,   -0.031188213290755613,   -0.0072167639351122005,\n    -0.03281353474178667,    -0.022912757843033964,   -0.025207522360186908,\n    -0.006276887611304627,   -0.02556844675536622,    -0.030160748433386602,\n    -0.009962373384330132,   0.02968136914154693,     -0.03345769731546984,\n    -0.014753318159725937,   -0.030227887952503425,   -0.014077636004729364,\n    0.03438595541515678,     -0.021438150418659707,   0.022604374736488724,\n    0.025938888168588414,    0.024905689613964888,    0.0038194257923869213,\n    0.03370519870524868,     -0.02383271950986194,    -0.005633004579686914,\n    -0.031339397434076155,   0.0001939800030531434,   -0.007295505117341973,\n    -0.007366387267918249,   0.012487861554900146,    0.01246242591326827,\n    -0.0036190574616403576,  0.010655602657968355,    0.012869314846220907,\n    6.409872450278765e-05,   -0.025172445378457513,   0.002697921266096391,\n    0.005315993440946909,    -0.00368664272457173,    0.03181060260066912,\n    -0.0030229920586514747,  -0.011196476859451299,   0.0013471692591294374,\n    0.013560517698285986,    0.030771342893043507,    -0.03459825681097373,\n    0.0278758366436728,      -0.004957522215738134,   -0.026370007840304677,\n    0.005265613732887087,    0.014021035960599035,    0.012895759968643339,\n    0.033482695367744425,    -0.006827343615307743,   -0.03500395981283203,\n    0.024377689620130132,    -0.003145351072166648,   -0.014344924066767944,\n    0.01572183372494801,     -0.028116613576854417,   -0.02357444465750569,\n    -0.031497503016813436,   -0.008147671154625358,   -0.031775009196272054,\n    -0.032157459578041274,   0.01517581119152259,     -0.004628701634773722,\n    0.025257740170314853,    -0.029707646580915577,   -0.012977138493320899,\n    -0.0014031881519546944,  -0.0037457190721932,     0.0018157719336919151,\n    0.022113081755048034,    -0.022356729936094086,   0.01163658870647228,\n    -0.019921256931891982,   -0.0013546464199417707,  0.0012170630034576413,\n    -0.03429252177323745,    -0.029891803354652968,   -0.035022068540074634,\n    0.009488117270213021,    0.020802865806688844,    -0.024601110508785818,\n    0.02151264381520072,     -0.026568945993096425,   0.014596848396265572,\n    -0.00907069233785675,    0.024585285258685384,    -0.033770761791735084,\n    -0.010676157539059983,   0.007762564084122656,    -0.03270671059334253,\n    0.02003452236678237,     -0.0005228674213503814,  -0.016448868833557298,\n    -0.03286031160032261,    -0.025917473643648315,   -0.012603843717836198,\n    -0.017729483944222413,   0.018761533837292708,    -0.015800578602504205,\n    -0.010121991633642484,   0.02196534853418397,     0.028620362439122343,\n    -0.01527165967123368,    -0.002192287136426155,   0.017106102255583098,\n    -0.00012643808378926772, -0.010796938382474959,   0.01971206112936154,\n    0.01943816406980782,     0.022222953796571934,    0.0007608084801776453,\n    -0.027278782761372133,   -0.0005536209252195762,  -0.00549985118030788,\n    0.00334005698854333,     0.034045071086244064,    0.016437429139698874,\n    0.01563332522333914,     -0.017748891321656524,   -0.031175881482041104,\n    -0.030103748200739733,   -0.0035573549545776196,  -0.022970147691435665,\n    -0.03263469241060123,    -0.02111494640111733,    0.0030419653562923877,\n    0.002836881195101924,    -0.017846221511940832,   0.01660032888546519,\n    -0.002559873326725946,   -0.02157587315457799,    0.012268867207887595,\n    0.008688077279742999,    0.032589275081882946,    -0.014115228200931354,\n    -0.03413898727474359,    -0.005354331729066567,   -0.019530870172793344,\n    -0.0043778457104608004,  -0.0351959996929072,     -0.01775463084394462,\n    0.02332030042256354,     -0.011742898350229514,   0.015695755076434684,\n    -0.029308688865546818,   -0.03181593696096462,    -0.0067183472746887764,\n    0.031544138467717094,    0.02611566692827668,     0.012584572558426115,\n    -0.034551053311642356,   0.030431790048057912,    0.01884803262524103,\n    -0.018983595291751705,   -0.02987162991907212,    0.011874188742749663,\n    -0.024750501311138096,   0.0029833996946205255,   -0.03424395208861471,\n    -0.03384966189037522,    -0.013974822883109654,   0.026974512045261544,\n    -0.03499674702222302,    -0.03417285433046192,    -0.02755846954217749,\n    0.006826191017139461,    -0.032757776712912495,   -0.03166649077771513,\n    -0.01686965830506142,    0.007241239692637814,    0.012674314383064267,\n    -0.030800048507563196,   0.0008947783036202012,   0.03142702231693865,\n    -0.017603301798313088,   0.0005061146878119681,   -0.0033778065987646716,\n    0.02909183586270996,     0.005031836467252613,    -0.027208275566907247,\n    -0.030872418545983563,   0.011985272253775015,    -0.015489380693219692,\n    0.004643026863133868,    0.014101680710911437,    -0.004255299854472189,\n    0.01743984193303137,     0.020556985543075015,    -0.024058281191087327,\n    -0.02417591658948941,    0.017206587296937192,    -0.0066018680883685454,\n    -0.022324669785811838,   0.02776784946188841,     -0.01759496480412406,\n    0.02483920552511081,     -0.015887677453781182,   0.033067774148235245,\n    -0.01846112781636828,    -0.004483790880494093,   0.024382697778928365,\n    -0.00650632577737623,    -0.0166724735508678,     0.0026748413571696422,\n    0.0064484699353323394,   -0.03323865491107504,    0.02661613489455759,\n    0.029495447917363953,    0.008014127643942317,    -0.009293286314886906,\n    0.032110229923719265,    0.027011820213151475,    0.018993967542036652,\n    0.023789981237994647,    -0.010590020421474151,   0.02624863516438275,\n    -0.030487254729173074,   -0.027733431843346344,   -0.031220571871007397,\n    -0.0030943215667666524,  -0.013645153237864438,   -0.02301617526267375,\n    -0.006140944205053979,   0.002370249042386054,    -0.024521695055131083,\n    -0.019313443606021708,   0.01040332313223862,     0.008342489280427419,\n    -0.021752295757766316,   -0.029178333825975056,   -0.021631865287921864,\n    -0.0062109746648403765,  -0.02774500078038733,    -0.026242106645456474,\n    -0.0007937812789039964,  0.032355824130449594,    0.030616422416094927,\n    -0.015360872073757295,   -0.031111070878356715,   0.0017206806702294414,\n    -0.01618643870865159,    -0.023517299862869916,   0.03036399879858175,\n    -0.0072005999492153385,  0.031884340559663805,    0.005373051386604092,\n    -0.02402665552738422,    0.016944356953613095,    -0.014651814203385072,\n    -0.026530484053020123,   0.007883231798368702,    0.022423416024299057,\n    -0.025176908680170473,   0.02223977588303026,     0.018047677433899303,\n    -0.026534640017821028,   0.02516761019378032,     -0.02779467432513698,\n    0.008292178628707236,    0.029715061006687842,    0.00359579810075894,\n    -0.031017413127495095,   -0.018671966494773585,   0.008028158715753353,\n    0.017197381003577317,    -0.011926259583933419,   0.023783710905773848,\n    0.015479674766449672,    0.029373789720303585,    -0.026716383830106334,\n    -0.02093364430960299,    -0.016052815496496776,   0.032122792450892966,\n    -0.018963055002854143,   0.016772534898760086,    -0.02186735521381683,\n    0.020794011266476294,    -0.033568008440800115,   -0.015458942339614612,\n    0.02273879959562454,     0.01436768423122365,     -0.02418213927183712,\n    -0.00012551264951599084, -0.02473539886430156,    -0.02356249019804971,\n    0.014838061985519742,    0.016773142085590005,    -0.013228087665365174,\n    0.016459095611555553,    0.03367618073843789,     0.01608629038579887,\n    -0.01780720657320306,    -0.00042323066046395,    -0.02454079646252129,\n    0.014099492609004671,    0.01713551782082338,     0.03494346824481816,\n    -0.02428675479728092,    0.009969893091162148,    -0.003072093501198287,\n    -0.005524072316238986,   0.026647762993010415,    0.01452936186476159,\n    -0.0004928801679620382,  0.024853053542694292,    0.029719397102679845,\n    0.007810080615027153,    0.018401746345231496,    0.027102161497472965,\n    0.02198303345629228,     -0.023704075566735792,   -0.01079415014728398,\n    -0.012366514530461954,   0.021456813472163452,    0.012582721641491173,\n    -0.02540712425602636,    -0.023494776806661184,   0.022479255395937297,\n    -0.032050355273379676,   0.028371064210715398,    -0.025140926972371396,\n    0.008451634172189684,    0.0209535019500918,      -0.007803232113385389,\n    -0.024110551761219512,   -0.0011368499126345267,  0.01015243777735145,\n    0.0228123818835733,      0.031738008288156073,    0.0044965062886144925,\n    -0.025857870443226356,   -0.03245167676284726,    -0.015396136643441883,\n    0.005867665050642091,    0.024428417184800304,    0.0003865928295828499,\n    -0.02485078639669166,    0.0122513476560944,      0.03221624911305643,\n    -0.026187073144973108,   0.017739747676528732,    1.3301211030753672e-05,\n    -0.007381026703672807,   -0.02187763390645644,    -0.007366068112457467,\n    0.01682827004493942,     -0.015104407050905409,   -0.026475053579933443,\n    0.0343502800794521,      0.013267881468310871,    0.03155385476917975,\n    -0.01815359790106942,    -0.03353563841256563,    0.01271084712553816,\n    0.011310104522631806,    0.003199858470004995,    0.0048812558129147565,\n    -0.0006304628518532053,  -0.009569621822088663,   0.02585365407027317,\n    0.008713216385171751,    0.01059018448713972,     0.026803012533503097,\n    0.023246205137535992,    -0.024255518574788373,   -0.0131423687408136,\n    0.03230515937805202,     -0.028546451716306875,   -0.018823374369366264,\n    0.0009752501731385896,   -0.006729994416547758,   0.010171181841270614,\n    -0.01982234835589362,    0.00471533337353795,     -0.00494889137444374,\n    -0.0299171257089176,     0.003261610677320138,    -0.004440709686375871,\n    0.030184292060687685,    0.011448462455603126,    -0.01616798170125356,\n    -0.0010259381129126355,  0.022172532563074745,    0.02080663964864862,\n    0.00033813891016740545,  -0.013860788702329032,   -0.010843398821148416,\n    -0.02418412495892956,    0.02139186894871994,     0.019243270842187313,\n    0.011231563743210587,    -0.0203953884013969,     0.01365844242680299,\n    -0.022037153862296526,   -0.02117453732235228,    -0.0072407036881029785,\n    0.026009362993603312,    -0.026745368177795492,   0.014567693694736665,\n    0.023167699077384495,    0.02307738658735384,     -0.022186684047871566,\n    0.017854592701238892,    0.014029441196020691,    -0.027006610484414717,\n    0.023218827660720656,    -0.03217734931064195,    -0.00725770557360879,\n    -0.032368448908401466,   -0.01010154175245597,    -0.011001477942752858,\n    -0.01964619280706764,    -0.024663090585062306,   0.03259590925860493,\n    0.03564525393671048,     0.0006685234947941503,   -0.01945694970688517,\n    -0.0026847142700969612,  0.025501524195233626,    -0.024220390067790372,\n    0.026651105413860555,    -0.021348777340874495,   -0.01976137790935567,\n    0.004192727440796763,    -0.011941416660871467,   0.010890688930958037,\n    0.003502328723143084,    -0.033258716554172923,   0.016277544421542833,\n    -0.03273087626307114,    0.03042928958747123,     -0.0049762200288045845,\n    -0.03307102837534925,    -0.03167674795798037,    0.02681718595848938,\n    0.005366125888854323,    0.019438155797329586,    -0.014427347041483867,\n    0.03400361871750414,     0.018258414442287253,    0.01292579020111139,\n    0.034060238171145195,    0.020477938092256478,    0.031559783071108884,\n    0.005161496372320781,    0.00921915171605836,     0.011923756168030144,\n    -0.0313692084104881,     0.016201991806392566,    -0.015909790296234284,\n    -0.021019629254273586,   -0.020525823257928812,   0.0018069150823840086,\n    0.010858130916208764,    0.016217671719381137,    0.015695257793537056,\n    -0.018080376817869788,   -0.003787146201685877,   0.001513601197514726,\n    -0.0262983713424821,     -0.010114386068362211,   -0.010830109827361394,\n    0.018192204553004545,    -0.0026880178599497334,  -0.029995750123164775,\n    0.03062261799510952,     0.03443965899891154,     -0.0010585186563870086,\n    -0.03469032285696564,    -0.00031688669494729844, -0.002132141279976074,\n    0.0004940949414904178,   -0.0017444498611785303,  0.0008864418769903054,\n    0.03255850683116075,     0.008689202279385078,    -0.02923320750166554,\n    -0.02139222034761501,    0.005421065258046436,    -0.03217669706971679,\n    -0.0038304216130634217,  -0.014608288970280428,   0.020790591024626246,\n    0.02337563558895005,     -0.02411911897594244,    0.024360657495038216,\n    0.01174647428444426,     0.005195653146610436,    -0.009754624782196486,\n    -0.0008062788464623144,  -0.015138354875052653,   0.026067976091711787,\n    -0.02390515836959157,    -0.019975520218982284,   0.006121773412393846,\n    0.011199597547024081,    -0.013659402037231585,   0.008128628992932738,\n    -0.02783236802085872,    0.03457591642606148,     -0.025327451514088762,\n    0.03294094756846845,     0.012176024155801213,    0.012337570444445611,\n    -0.006567449441806221,   0.012138445885617188,    0.028086685701627794,\n    0.005815164076117239,    -0.02747052975234524,    -0.02868940183535715,\n    0.023794195676443964,    -0.034997574272057234,   -0.007433529844428156,\n    -0.0023839808642587357,  0.012537996931535835,    -0.005237517681523244,\n    0.023033900691803878,    -0.022675795842507174,   -0.0013713028730593735,\n    -0.022220525677397303,   0.030792034284499635,    -0.004664959865789162,\n    -0.028837443855934165,   -0.012890615117956812,   0.013867025793454129,\n    0.006887247209705452,    0.0006479425348994071,   0.022175809949135507,\n    -0.023948990666789516,   0.02756353988569381,     0.030361163030440872,\n    -0.011858811755860121,   -0.035001618723131706,   -0.006851843047872508,\n    -0.02907958268528491,    -0.02776259790865645,    -0.0054379724076075164,\n    0.008709741577767367,    0.011366449393039053,    0.009279535647023796,\n    0.031412066828519554,    0.004326947446537863,    0.023399717491882886,\n    0.025840438741278494,    0.021245613733864226,    -0.03123329878349359,\n    0.022524910102637827,    0.011831033430893565,    -0.02691458978605072,\n    0.0007288222657104555,   0.031975208847946475,    -0.014318702249746065,\n    -0.023442308306736784,   0.007696126343200699,    0.013974103690130333,\n    0.026822261923220243,    0.025192931697691177,    0.0257613771493436,\n    -0.01685848424309566,    -0.034524767316986484,   0.014780255581842339,\n    -0.012029596288712386,   7.353954671310677e-05,   0.02056273189746184,\n    0.018357083365082055,    -0.02071363885199731,    -0.013162202122254931,\n    -0.009647345746673293,   -0.03045081469838401,    -0.02129172192147527,\n    -0.018642377324987778,   -0.014434613227330289,   0.03300231669896899,\n    -0.0015856507400511491,  -0.03271769391844606,    0.016240157559121123,\n    -0.025768582187499823,   -0.02212992484737808,    0.031296936474593445,\n    -0.019125017747508424,   -0.007389010210919224,   -0.0007939896703755436,\n    -0.015385350997946919,   0.020010139384023278,    -0.022506794177242485,\n    -0.03494796495653654,    -0.020562972527874455,   0.013549638533432455,\n    0.031127200402315383,    -0.030819745878571003,   0.00312919708553161,\n    -0.020720794936763074,   0.03364626379171165,     0.015224432800414245,\n    0.029209213793063134,    0.01484463308269499,     -0.018000392756444685,\n    -0.0001776156707541308,  0.023149074509862547,    0.004514094241434444,\n    0.0027738787785660207,   0.0295714171971411,      -0.020939227865304378,\n    -0.002036194550075936,   -0.00844574548378033,    -0.03103912975697671,\n    0.020735833408888467,    0.02905197731668562,     -0.03409148233619628,\n    -0.017064108883392864,   -0.023823499181985872,   0.024335158224633516,\n    0.014415489089129183,    -0.00788176443061516,    0.030558956128525445,\n    0.02565248723719025,     0.010502689005129382,    -0.015855950423727828,\n    -0.018405937031988718,   0.03207297180056447,     0.027057773965266492,\n    -0.0324274246158629,     -0.015598167429044645,   0.02712201683568933,\n    0.01631388719010496,     -0.02111775469965946,    0.01802859088073291,\n    0.02732008553912224,     -0.01935365769086436,    0.01663669989752037,\n    0.021745386114910694,    -0.017600568460833552,   0.024710796139231384,\n    0.01287364962882374,     0.028096979114792253,    0.027186667054652468,\n    -0.002794122373861364,   -0.02719145446972239,    -0.022765726478735884,\n    0.007710385721951809,    -0.002371956951654232,   -0.0006173163749590348,\n    -0.02137532641276413,    -0.030140742857184464,   -0.003879321630639817,\n    0.03549765872121669,     -0.021851468640568066,   0.03184803506100229,\n    -0.011886141165762816,   -0.013386764312191973,   -0.0015349336565844299,\n    0.0007703015424923258,   0.009187471136302654,    -0.0356190867265275,\n    0.014934546009405627,    0.011409281499373527,    0.009033626426422303,\n    0.016003425871277302,    0.004502763956317244,    -0.026731035812875024,\n    -0.009672125842670996,   -0.003467518718548715,   -0.006596520516992451,\n    -0.021442970682266114,   0.00686926154683491,     -0.028117792714844356,\n    -0.018364411646734292,   0.021252731647266414,    -0.008784164289828318,\n    -0.02503450171568154,    -0.01889243142747827,    0.008517412585218343,\n    -0.032403443023346905,   0.025885110009103485,    -0.007013026042797077,\n    -0.0010166971489850255,  -0.004760536957815602,   0.018919358524940245,\n    0.025668311229709383,    0.013117594971496123,    -0.01715170273131212,\n    -0.03503175863518124,    -0.02867904390717044,    -0.0016919719952561854,\n    -0.03566055482034905,    -0.0034986589225633386,  0.008124653656661247,\n    0.007782894716387259,    -0.03534694148137033,    -0.004886323662532237,\n    0.0200857127566913,      -0.006479847317790555,   0.02449350112370343,\n    -0.02490588413741544,    -0.022397154761825886,   -0.003935976325446304,\n    0.010586099746265818,    0.011687766008621306,    -0.028059786943545755,\n    -0.013780792197937961,   -0.022559949154866317,   -0.022109527403643532,\n    -0.0008514579958446209,  -0.005091371445907694,   -0.005818256799737147,\n    0.01699277140665545,     0.026134214103277223,    0.028242495722120016,\n    0.025659826251965015,    -0.019912896726986165,   0.013911962051497584,\n    0.030269098208290775,    0.005028795581740353,    0.03408567043158776,\n    0.017183699777458133,    0.03516914634536255,     0.02300988970980135,\n    0.02457454748424738,     -0.009407215136385665,   0.01959099829920735,\n    0.032338996892389456,    -0.021618053077458073,   0.00961006779507702,\n    -0.03331393253310636,    -0.023791019029367276,   -0.0019296441148643245,\n    -0.01096985756233867,    0.018623635015287632,    0.009499634238654535,\n    0.029984705552476665,    -0.02171526700286883,    0.03174590834511753,\n    0.023450167991976918,    0.025859199327187166,    0.033765093557830486,\n    -0.018957999582447507,   0.0003922640320890926,   -0.007937903336311756,\n    0.018895295832561245,    0.0043604421359078605,   0.00609120682336708,\n    -0.026470139833825138,   -0.013786951946944641,   0.011346478834014469,\n    0.03437387431676261,     0.030352417485935573,    -0.03157141436601315,\n    -0.02818926078294115,    0.001826784598089786,    -0.011769469687441112,\n    0.02585629505048282,     -0.018939700208733454,   -0.02761079302417716,\n    -0.0219759261446626,     0.03178071674328961,     0.00993075444075951,\n    -0.007498602997847714,   0.03506678362025855,     0.002135533181723508,\n    0.014260161658572117,    -0.03044451415675895,    -0.0013082551072821635,\n    -0.031059400242806415,   -0.013814717637195384,   0.027718558170500618,\n    -0.008212325806961573,   0.010755518394029502,    0.03174882187183467,\n    -0.017884920281457557,   -0.02689205342787134,    -0.013547913344844453,\n    -0.020121013505783634,   0.010692746663408486,    0.022207696697486526,\n    0.02281961764800885,     0.02705655279304192,     0.009577944399512912,\n    -0.032135550043864085,   -0.03267069282293418,    0.008106539796524837,\n    -0.01213285136822047,    -0.00946628499717274,    -0.02785050029881046,\n    0.015045346926680152,    -0.016846559876934983,   -0.005918085248018068,\n    0.00542841644436161,     0.00674926813721542,     -0.02910148856430461,\n    -0.015154992556406541,   -0.0008826643372895705,  0.022310260548090464,\n    -0.002502150064760067,   0.030224511043662628,    -0.016782512617350254,\n    -0.02039371823487583,    0.01316366035082209,     0.0003282592248641723,\n    -0.0032485595365090753,  0.022269716357660126,    -0.02152142416268432,\n    0.016953628593264672,    -0.035706952377632335,   -0.008536092139153675,\n    -0.006589035544954158,   0.010102774212312078,    -0.0010626755101014343,\n    0.031050383516702616,    0.0011545164033011565,   0.027770039621110708,\n    -0.00796709373920432,    0.009118735198860107,    -0.01822039909836917,\n    0.026048158731006844,    0.02040507536833542,     -0.0050916644108559795,\n    -0.012938858706526024,   0.02633056433171621,     0.013400646159101906,\n    0.007264505627226945,    -0.020353798271856172,   -0.018517127269216987,\n    0.010075932624944542,    -0.01449196571205368,    -0.0043685935236157615,\n    0.005887475616513601,    -0.025327314374521293,   0.011378401372246097,\n    -0.024079133359726158,   -0.010139217395601727,   -0.02551413323197548,\n    0.00949317681797981,     0.02812785416475335,     -0.019808501416533442,\n    -0.00661433536410302,    0.010703650020222197,    0.01764181200986016,\n    -0.01430857774593684,    -0.012213163578773722,   0.01979017672809536,\n    -0.032551832939043436,   0.02522059522817308,     0.019181083565053672,\n    -0.019673824586555096,   -0.006171057857892681,   0.029026036161045075,\n    -0.011002965055716636,   0.01044294442177832,     -0.019249424656623642,\n    0.01896660877722102,     0.014820310862561326,    0.023179270992033832,\n    0.02309844966096538,     0.02523442600441843,     -0.03197520774208992,\n    0.005420028734545913,    -0.02432984839026192,    0.01627356120510624,\n    0.00493616169939184,     -0.011087155039000016,   0.006268875727789026,\n    -0.004315501804729608,   -0.02272641066082754,    -0.0028961439025449215,\n    0.029614513799380838,    0.02683005053427174,     -0.01508251995332147,\n    0.009761889535432429,    -0.003072090804303524,   0.0008295182121133876,\n    -0.008305275687503817,   0.030022344066495732,    -0.006854598227207488,\n    -0.0035606053258178906,  0.01842125744569196,     0.01974796356066341,\n    0.0038339117255281525,   0.015920756206208458,    0.026787774319351712,\n    -0.029099355006706927,   -0.02668710723746241,    0.022742163672478426,\n    -0.0027702364762970306,  -0.03243003523754278,    0.006552314859843279,\n    -0.03457999294847061,    -0.03557765123073721,    -0.03504049765353926,\n    0.021966623524797318,    -0.020968370692498697,   0.001480230417827704,\n    -0.01790682092895058,    -0.004732179906661122,   0.012368975398723192,\n    -0.023123291755622704,   0.0008412922178347516,   0.02505836588387017,\n    -0.027838378132229263,   -0.0047858302523727326,  -0.03183134408124744,\n    -0.0340252904135019,     -0.010794898390851166,   -0.029255260974048226,\n    0.024270780444444424,    0.027275500500594112,    0.0024160300261178353,\n    -0.026597390518950555,   -0.023563716720902038,   -0.03288773231452048,\n    0.004700583550200119,    -0.016498609965306266,   0.020459204160362857,\n    -0.016996141303502448,   -0.031941253595480355,   -0.023165140707540378,\n    0.01288900474652717,     0.0058452234316456264,   0.00825141566962353,\n    0.0036138288546331988,   0.012881056859116129,    0.009038440430844641,\n    -0.0024387281769888847,  -0.01793266591810475,    -0.0320684756455259,\n    -0.024617585757477235,   -0.011312527461812803,   0.0025984500456169763,\n    0.02769360189987602,     -0.01190778445948905,    -0.008025890748021005,\n    0.010567820476252487,    -0.0025717302252199876,  0.021544317732820353,\n    -0.03560615882982372,    -0.025580037498237427,   0.004611481557931364,\n    0.025590200149548492,    0.00635192196158684,     0.027594989572168008,\n    0.02267272021916346,     -0.009584745074497485,   -0.022123828465755335,\n    -0.003978186574778434,   0.016882473622450805,    0.005110894819073095,\n    -0.006852873416939607,   0.003370922383772433,    0.03368105865069839,\n    0.006817867800449462,    -0.012678368687103567,   0.03320753159606529,\n    0.03568933750198499,     0.020340184249448705,    -0.012860495725853443,\n    0.004715729180965879,    0.02956789126658268,     -0.020283338826524656,\n    -0.008894755034632313,   -0.02448130589597275,    0.028323730754649355,\n    -0.023841514346558457,   -0.022769205837610773,   -0.033607055613301656,\n    -0.007832962885683461,   -0.017329912731541542,   0.023390096650771526,\n    -0.009130040273534399,   -0.008261496773056423,   0.031838289177439257,\n    -0.006371708858824344,   -0.026659000163794973,   0.00499889208547355,\n    -0.024968127849800646,   -0.0339579043536796,     -0.002365939457223227,\n    0.016242239823322083,    0.006788677616505502,    -0.006254254669192129,\n    0.005585502929474089,    0.019805256864473795,    -0.014429850957400275,\n    -0.0044474158469930015,  0.03355532371565251,     -0.006240258855009451,\n    -0.03396794148047927,    -0.02722440055757429,    0.029321875021700826,\n    0.023135100160605507,    -0.01599490359415925,    0.0025065142415359016,\n    -0.030479088697708344,   0.006635676589823034,    -0.0025433642796465522,\n    -0.007541717237091397,   0.02514556042214411,     0.001273635016485229,\n    0.0027178181029879817,   0.027229060153145815,    0.01339807720698956,\n    -0.017435495368387444,   -0.0315872659211447,     0.005080774523086988,\n    -0.02293389466079354,    0.01823348840844742,     -0.019940502329145116,\n    0.03096772707728903,     0.005725871228895412,    -0.02808275477848199,\n    -0.021001175597713306,   0.012156583000503112,    0.03192475815392376,\n    0.034225048040808476,    -0.02483733717427693,    -0.011797007859764919,\n    0.025191632154854482,    0.02423582898099667,     0.010085948699715392,\n    -0.030768345221262497,   0.03482655184688678,     -0.03267093854267456,\n    0.025197144490189685,    -0.013029044579726794,   0.02689567512116935,\n    -0.028570051901534155,   0.032571502423090995,    0.020554122301641234,\n    0.014900487461296612,    0.006096230671855091,    0.030276489136353744,\n    0.02386278713394953,     -0.02495380718818201,    -0.009476376244616906,\n    -0.004828381329755144,   0.033671363127464125,    0.005432006147169329,\n    -0.02056194669342354,    0.015080513463777057,    -0.035320918911910706,\n    -0.034837587829926825,   -0.014210989283340476,   0.0005148689505304575,\n    -0.0035675702547217553,  0.028271323160836748,    0.023237824813663828,\n    0.0247942866176978,      0.03086536454411798,     -0.006083862369883397,\n    -0.0016236864511899318,  -0.01140218688212502,    -0.0028330125912546323,\n    -0.0017003625335625145,  0.01804446282278707,     0.009995183160114758,\n    -0.022681272414253984,   -0.01322274574680658,    0.007228704890717609,\n    -0.004209182754546459,   0.01003059040788616,     0.011257148109599402,\n    0.01292753004089606,     -0.03175583854142074,    -0.02381660266420219,\n    0.026408576230188652,    -0.0005485974667748012,  -0.00556251518702981,\n    0.010467345855344248,    -0.014588583339126254,   -0.023889194497509834,\n    0.006873217838058506,    -0.02763858577458208,    -0.012215573208890669,\n    -0.03267469231040982,    -4.870263970370634e-05,  0.027371520863024856,\n    0.01982534546117828,     -0.009817590913760188,   -0.010735653888321126,\n    0.0316813925289366,      -0.02676749948015059,    -0.007697918786098854,\n    -0.02555581022851375,    -0.006763039777151607,   0.011108961039855503,\n    0.03475150884955528,     0.0067363751456019595,   -0.01020994512233357,\n    -0.03209332300605506,    0.0262437458972765,      0.013690482080591917,\n    0.03499975426133306,     -0.03470237949260829,    0.03416698976484591,\n    1.236686416401194e-05,   -0.018860492289990195,   -0.02221104684415659,\n    -0.03415812419551286,    -0.005104582926500797,   -0.02975253338227928,\n    3.0057167121201796e-05,  0.030369726498137437,    0.03531330567052882,\n    -0.0006491556363012939,  0.014442774628841708,    -0.03473043787972336,\n    -0.022212315195419274,   -0.02224499415985635,    -0.0005361992490324842,\n    -0.03497911449390292,    0.02402500369837164,     -0.01686725179176667,\n    -0.00912739592920015,    0.01295464463795521,     0.0254908373975422,\n    -0.029896041056442096,   0.013480298166149745,    0.03130702074494804,\n    0.0037423790527158812,   0.006749078653460019,    0.035512217708280364,\n    -0.002057491901278677,   -0.03493076101188785,    -0.004867161795555098,\n    -0.020455024719201662,   -0.003995972021862994,   0.020889990844619344,\n    -0.026100562748051826,   0.01148499998771891,     0.0009299310072737638,\n    0.005517938744486092,    0.02553470774649475,     0.0004577883548823285,\n    0.010512414537688577,    -0.02227817731279561,    -0.012362503460572667,\n    0.020736008106381088,    -0.01732124461671451,    0.005872217234934687,\n    -0.02393829401836416,    0.027072942703327676,    -0.013082527276135441,\n    0.02895715143871254,     0.007208937824347933,    0.027526555047708852,\n    0.025245267369087276,    0.005488717814013959,    -0.021136982938703395,\n    0.02844002529553804,     -0.008093978672258004,   -0.005970803096709839,\n    -0.02544839567227534,    -0.024909458356682256,   -0.01610366768995869,\n    -0.031525277138557996,   -0.007562249796934119,   0.026176451995766386,\n    -0.01409825371833235,    -0.025501428606318478,   0.01230190148718175,\n    -0.03431308525107538,    -0.009421301471057908,   0.007689228026377376,\n    -0.0021427853612258707,  0.02278273254728675,     -9.740247418830013e-05,\n    -0.0062598807279473645,  0.011959634278892984,    0.018667003655866512,\n    0.01519894125798555,     0.03225658097256554,     -0.020168111876530215,\n    0.02213332824021358,     -0.020574582739571714,   -0.009630581828255276,\n    -0.021216963653644623,   0.018934297706114957,    0.034892081984969306,\n    0.030696694120578127,    0.015177916276109465,    0.011828951039572693,\n    -0.005548263120638306,   -0.009075453717046766,   -0.028466229841317595,\n    0.022701354884233263,    -0.02355179479993986,    -0.023463037985940616,\n    0.030457301317233388,    -0.009371445187187109,   -0.011062618812809955,\n    0.011885214503702921,    -0.02518830594677222,    0.0056459962270108245,\n    -0.005996957938171002,   -0.0340400367260226,     -0.032735652110243846,\n    -0.0017085648472359636,  -0.03369916437969573,    0.03536856226598145,\n    -0.01580394668691204,    -0.0219990269875256,     0.03137465566340581,\n    0.023261299931497892,    0.00909081638973231,     -0.03088117120375571,\n    -0.0085463627774926,     -0.01739498511208383,    -0.03442476837668598,\n    0.02832991228621009,     0.033031713821508525,    -0.01541522451076595,\n    -0.009594244746492944,   -0.0014933244828404999,  -0.011351477739004006,\n    0.029121553466677486,    0.00019196755393691145,  0.011555594009481798,\n    0.03134851018191937,     0.02698368059618552,     -0.01795571718996404,\n    -0.01599633774340661,    -0.0159520193592328,     -0.014333200373886246,\n    -0.01686643539132883,    -0.008640881079331047,   0.030264144449832407,\n    -0.020583412545073603,   -0.030323566401446327,   -0.0059287651676803,\n    0.024414946154486947,    0.0074083122359333954,   0.03547765358096571,\n    0.007480595879227479,    -0.03438089769808337,    0.005169284250716134,\n    -0.01918550198399406,    0.03308619608523696,     0.024244558534137515,\n    -0.03305717925331717,    -0.004601484073608775,   0.03370284382174835,\n    -0.03380297531725081,    0.0010950908925605224,   -0.03209102555230997,\n    0.0007096802101601969,   0.033516442346470346,    0.00536113144211273,\n    0.004830885036717326,    -0.014685847604054407,   0.004871559864668243,\n    0.032202281977334546,    0.02204911970974852,     0.013422733951685226,\n    0.029639531723908666,    0.02520239312708518,     0.015149246388258264,\n    -0.017767323792675854,   -0.007497193859499579,   -0.009946427055693612,\n    -0.015048428427981724,   -0.017454160027235068,   -0.009444920551271725,\n    -0.005833217160424714,   -0.004618745788469547,   -0.014286850670806817,\n    0.0030225110158620073,   0.010803372489592145,    -0.03335727139005796,\n    -0.028309883271353774,   0.006884300863873617,    -0.03034305850023525,\n    -0.006560698679770771,   0.021483535044977155,    -0.02764809454684407,\n    0.0006608703822588554,   -0.023667348150767778,   0.02995745251453747,\n    0.021782904029036643,    0.03476012573478098,     0.025805968644732478,\n    -0.032538323620837986,   -0.0285996616231109,     0.012977892775405817,\n    -0.006391133947806469,   0.008350104377762624,    -0.0009619766458690163,\n    -0.009026176871795133,   0.008742534239277502,    0.015854264340626905,\n    -0.017471167385785937,   -0.008275394121097535,   -0.028210004270323916,\n    0.00891852781562782,     -0.02391324881331518,    0.002749676894161398,\n    0.008088335896085652,    -0.02604751334742576,    0.019249167328578152,\n    -0.013513281040710137,   -0.008151265700877304,   0.021245311923809365,\n    0.024847312733576543,    -0.022985983395684605,   -0.00020251081967242218,\n    -0.031498434408120675,   0.010200198413938369,    -0.005013915559415668,\n    0.010357397213959436,    -0.023126917214707925,   -0.03162795098456898,\n    0.012034365602547812,    0.034584108653591294,    0.002640569784917065,\n    0.03230923787933974,     -0.03002658788969224,    0.028855961301079796,\n    -0.019849012798467767,   0.014768462142841308,    -0.03414701410886806,\n    0.009451030849170879,    0.02244035710360849,     0.02117775811880294,\n    -0.004225939899136341,   -0.011335338973686318,   -0.022374070478904773,\n    0.02200045283014019,     0.022924901090890418,    -0.010539745369063094,\n    0.009341610295897631,    0.020068516755532728,    0.007109170588358399,\n    -0.025253702497308746,   0.024421106839279432,    -0.011486758116928524,\n    0.024001135202710806,    0.015414050740861614,    -0.011056564894634358,\n    0.02805262466271344,     -0.004171180211999375,   0.007233251015530382,\n    -0.011577145944667196,   -0.034568660075970516,   0.002748352229965881,\n    0.027914190340257033,    0.027309077451684045,    -0.010936904794780329,\n    -0.0050025880046413885,  0.03322171553695697,     0.0013363704389190512,\n    0.012721792518431679,    0.017998059450919826,    0.030550686035214315,\n    -0.03179262535107854,    0.021986050426915853,    -0.006649380006625547,\n    0.010094632612477426,    0.018508452059575076,    -0.03353857569532995,\n    -0.00032820151824467355, -0.023028556418052147,   -0.0036243450345845862,\n    0.008081302616022435,    0.017290661915996326,    -0.02524879934283477,\n    -0.012880863843848669,   0.027987834876210267,    0.02690550040606539,\n    -0.016822629075061886,   0.0010309999416591006,   0.007933601717787382,\n    0.0022201576210626617,   -0.010678508979733,      -0.000886080318452363,\n    -0.0031314307623920524,  0.020784139179761366,    0.02585687810603112,\n    -0.028625164384281594,   -0.003897329437207997,   0.01970130325010447,\n    0.017994250141086052,    0.011632270314749615,    -0.013807090444677561,\n    -0.01458549734529022,    -0.010848247987631612,   -0.008199843430357552,\n    0.01899684805328323,     0.019257520359616396,    -0.0011643180762529618,\n    -0.0006446387315177818,  0.011638299129483378,    -0.0065014422401157125,\n    -0.008880625145724708,   0.0019945617276256084,   0.005070373691551586,\n    0.025260529935940378,    -0.02801593891035299,    -0.002953572613793666,\n    -0.019649016593021585,   -0.005546397348780533,   -0.03522416270342517,\n    -0.02827061532692217,    -0.027967832099324588,   0.03529427638143893,\n    0.0008345574270781721,   0.018623024835223274,    0.02362449709725202,\n    -0.027938422230578675,   0.025097124719018496,    0.011747654002602628,\n    -0.015718666565766433,   -0.017082668042020004,   -0.033207260874965006,\n    0.010347591474941931,    0.007744174084371891,    0.02730082744192844,\n    -0.030377523420836532,   0.009309446271477189,    -0.0010964976604184717,\n    -0.03018284699922026,    0.0008899216359721875,   0.008803465270224853,\n    0.023066553246741568,    -0.016087319622199763,   -0.018098528636678424,\n    0.018677953208472486,    -0.004031179438085912,   0.023645848179674123,\n    0.006685667642221536,    0.006145335776881945,    -0.0038117320520486392,\n    -0.0049544650600914265,  0.012566229403235016,    -0.014368966803481462,\n    -0.031279935477138844,   -0.028283505167169216,   -0.03373462359132707,\n    0.01815417330080873,     -0.00947489679911982,    -0.02805539493350684,\n    -0.0008299386253917922,  0.005138330083040535,    -0.01136142050723413,\n    -0.029636450073067103,   0.0061697052493602,      -0.025600007129855773,\n    0.010662276289969597,    0.0041575546939559395,   0.024032991460051785,\n    -0.03448267706787722,    0.0025956545761127397,   -0.019858216013342787,\n    -0.020052836842374733,   0.00787551693946473,     0.01523907464106173,\n    0.01572511921143126,     -0.0056800213950846026,  -0.01060550282324791,\n    0.02256647882993965,     -0.013723589544757275,   0.006719550831656841,\n    0.01677473082363803,     0.008733866899689809,    -0.021386625908872872,\n    -0.0004970802581839018,  0.03180171383341424,     -0.01167021031337514,\n    0.01998592317053287,     0.028128439399701284,    0.017089663851872428,\n    0.01445596982485503,     0.026550245271316837,    -0.016652701570262874,\n    -0.025028619972111595,   0.022171963627785198,    -0.028703831350817364,\n    0.010165191479740383,    -0.024051363501814638,   -0.007003404050772226,\n    -0.004247046435769365,   0.0036671933709576665,   -0.030298842037375737,\n    -0.014495194628605473,   0.02101915585694203,     0.03250789035226336,\n    -0.02734078206440398,    0.029506163845660228,    -0.0059402994457697445,\n    0.007747512153909111,    0.025883426365174177,    0.017444644886989196,\n    0.020973401882188634,    0.007424882959703687,    0.03287675651022936,\n    0.019411683848817276,    0.018867412329566575,    0.027278143553449673,\n    0.021386398761887238,    -0.016730274380678912,   -0.011667563235879093,\n    0.021458059749956404,    -0.006539804729641424,   -0.018969194965136327,\n    -0.016716906271934173,   0.028581005726112597,    0.011589911265634245,\n    -0.030975430508400226,   0.010133323914323518,    -0.023958008126065987,\n    -0.026518092244297384,   0.018135660364589554,    0.008577719341884322,\n    0.034117210835898415,    -0.009065589938119201,   0.022794521499629808,\n    0.017380151869564556,    -0.01141632556608523,    -0.018502158642334524,\n    0.01804433133575501,     -0.013009102359294065,   -0.009792644113672842,\n    0.0331164861114453,      -0.011731632766443574,   -0.03402911859201069,\n    0.025458506427216587,    -0.01117071052498773,    0.03273943966863782,\n    0.007063452387776527,    0.020211487892214948,    -0.02452106413344649,\n    0.01298313292079712,     0.029819771333522108,    -0.011399142517147742,\n    -0.03430865973536077,    -0.007482315206783972,   -0.025997317442517303,\n    0.020482986024022605,    0.024669229868589174,    -0.015596219042491866,\n    0.008253732561556188,    -0.003147119015812018,   0.013174030862673674,\n    0.01675315024621136,     0.02183236370575312,     -0.02665517065465488,\n    -0.035289654532853876,   0.004910713469122347,    -0.03305779640222036,\n    -0.016376173694339802,   0.020415651357269256,    -0.020562619406447356,\n    0.03153674316720812,     -0.03025838361786566,    0.03099577460097185,\n    -0.028526719917899106,   -0.02638333005311152,    -0.026444295324074534,\n    -0.005207996062442488,   0.009181824121449411,    -0.027025786196735402,\n    -0.01930998404402987,    0.013045427840453743,    0.022437489690029254,\n    0.0011219297843835874,   0.010192948093032053,    0.005318931793475906,\n    -0.004725499758853272,   0.012375088220211192,    0.03118649710522962,\n    0.01910760451928835,     -0.007458228907324314,   0.020497152705912552,\n    0.028165900682318466,    0.00853859684960802,     -0.009868011145945701,\n    -0.01772498660041983,    -0.0025667581396117372,  -0.027538025286546274,\n    0.007461052151081829,    -0.01841870192188914,    0.033297072068450305,\n    -0.03405269707694626,    -0.031864365047938804,   -0.020930824820523473,\n    0.0018515798400579914,   0.03547250549452819,     0.014042510296381538,\n    -0.008433014038393796,   -0.006989872842209104,   0.015964884034461058,\n    0.01408483299351871,     -0.005731692832666089,   0.024450685826628363,\n    0.016314568069102753,    0.020899576861748242,    -0.006871672230230497,\n    0.006876437502872803,    0.02170633813938776,     0.02927826129322232,\n    -0.010167861102731133,   -0.033111256697748295,   -0.018810495921184,\n    -0.0010228838563137482,  -0.02259768008070682,    0.00356511058864088,\n    0.00951459016238515,     -0.03459267995894091,    -0.010196293279230002,\n    0.016543717620557268,    0.032179977796557034,    0.003271746998684456,\n    -0.014949579386300156,   0.011655130695826337,    -0.02681034829620782,\n    -0.02428246760012904,    -0.023512897636433723,   -0.022206114989732795,\n    0.0346296249070154,      -0.013039744076069431,   0.02390541006539629,\n    0.00559957141652231,     0.007063912892220493,    -0.019375704998887387,\n    -0.032131672944651406,   -0.03383478253479895,    0.021419848952961743,\n    -0.006684488154412661,   -0.023929836670053113,   -0.006963564388861278,\n    0.028062962484398157,    -0.014991132301677573,   -0.019086447307026966,\n    0.018101378478190384,    0.01137214398019253,     -0.034515801354119975,\n    -0.0020195757252862235,  0.022789855512892872,    -0.002253047976840656,\n    0.02880928883879292,     0.010836953700692209,    -0.033375977732605214,\n    0.013343609802300625,    -0.02664802139305081,    0.01019565988692095,\n    0.018334542486566043,    0.025760192162345992,    0.0059519582167159414,\n    -0.026834529880920242,   -0.006826375150864927,   -0.011458070333831876,\n    0.02238907857160196,     0.03407676209784277,     -0.0037596203858996325,\n    0.012154020333156235,    0.016843517338729613,    0.02485237320254293,\n    -0.015685985305579353,   0.004505558840591347,    0.012980765849528944,\n    0.03173859716041136,     -0.016773380621489687,   0.025128702827146965,\n    -0.015623353609665347,   0.022838248997970687,    -0.006951979874036681,\n    0.012309812198731791,    0.008683811490545621,    0.020287539262279917,\n    -0.017753168530659738,   0.034292129343955105,    -0.024475810967365626,\n    -0.0007823077933538805,  0.0010375181925631788,   -0.00111191264121187,\n    0.0003226148032454769,   -0.03189835753807454,    -0.025916381708692718,\n    -0.00541145553610321,    0.009237833808650278,    0.010996903486904106,\n    0.009491677602778033,    0.01619794494174057,     0.0313777072443363,\n    -0.031888908224087555,   0.02315828245800364,     0.03163957383501392,\n    -0.011234475819391163,   -0.03338597685441792,    0.004904224929136241,\n    -0.01957268940031624,    0.010551052579169813,    0.03391329326116671,\n    -0.007186956917078792,   0.003677358652016674,    0.026673027924924753,\n    0.032612174093850345,    -0.027551970077236698,   -0.019627416915547542,\n    -0.02260100560413842,    -0.02918302386869015,    0.00800956157680392,\n    0.02336000467887588,     -0.02596337898743299,    -3.204381658572508e-05,\n    -0.011339821095195157,   0.017206122118952036,    0.0222306386603822,\n    -0.033352200478482814,   0.024024402258911375,    -0.009891131622758191,\n    -0.03331956853685244,    -0.01234606339867596,    -0.02419715127390993,\n    -0.03497940185892956,    -0.013026680443118006,   0.006285257562873061,\n    -0.0004329190683691118,  0.01771498613368129,     -0.01207042290825026,\n    -0.007979402691271882,   0.03350689366686128,     0.02662457374551439,\n    0.010450318520993278,    0.02722724110051373,     -0.01617340721868901,\n    0.03194036844163303,     0.024920625660725153,    -0.0062128945845245165,\n    0.012595043094211047,    0.025349532292071857,    -0.03289184082232291,\n    -0.009149097423191302,   0.015627268459330258,    -0.014766273419352065,\n    -0.0180204331229841,     -0.004688771425266382,   -0.013445388916960779,\n    0.033607169873196854,    -0.026709022766123865,   0.030161329583753622,\n    0.0033168435201310076,   -0.03538788046365161,    0.009715489631648921,\n    -0.006863715580893571,   0.03033883343464784,     -0.0034663352306655132,\n    -0.006017507487772316,   0.035661383660419294,    0.009069639429776566,\n    -0.019764143476182962,   -0.031077057251707688,   -0.002041031698534677,\n    0.0058558833113597775,   0.006502424466512256,    -0.006888290093834856,\n    -0.008247274123395312,   -0.01651344223421776,    -0.011720411842004397,\n    -0.016670780395774232,   0.025737771081222847,    0.031177721537064183,\n    -0.032474532334152824,   0.011674892928859806,    0.02614957375845707,\n    0.027616722018606453,    0.01995369065260584,     -0.0038611913403703607,\n    -0.006714883347233786,   -0.006055252813495694,   0.0018469260055997772,\n    0.02040668576572743,     -0.027518917647592154,   -0.015094524348318117,\n    0.0183561344761483,      0.0009853587478094647,   -0.02685523446128979,\n    0.009330517791585636,    0.02977987518651138,     0.01002986790866447,\n    0.00045260748465379496,  0.007060671638977001,    -0.02617088230444138,\n    0.00036572333659878886,  0.023181478984966718,    -0.026610390769216563,\n    0.01070732624393699,     0.01025578195835589,     -0.03218787675899016,\n    -2.4341321590959364e-05, 0.01011414441320562,     -0.011101023987898306,\n    -0.0222584345252002,     -0.011106214958518093,   0.0038233969375750837,\n    0.02830360454718589,     0.017320181085138376,    0.02362455095627758,\n    0.028954252004019788,    0.014706308050937238,    0.02156404893226177,\n    -0.009061943976060725,   -0.026840716613529006,   -0.027076436250574296,\n    -0.011386693225809597,   0.01789270872058553,     -0.02781898448490509,\n    0.010518960192205091,    0.033971721879695105,    0.027511227886931618,\n    -0.03565909416390398,    0.015322532330930687,    -0.012114451933182438,\n    0.01691792436270513,     0.024761109411677116,    -0.02957248063006951,\n    0.01861528011188325,     0.03237415950699746,     0.03205417516067171,\n    0.0007357674420675157,   -0.01301444830871194,    0.030220538787935212,\n    -0.00411703671643489,    -0.02173770415399361,    0.02658363264277795,\n    -0.029881994482207287,   -0.032657642080222996,   0.002934438475161441,\n    0.030879641183740907,    0.00306013918950458,     0.009969526475900261,\n    0.024390632709262044,    -0.015028495472685024,   0.011267864380468624,\n    0.032290354893356854,    -0.001785951364643807,   -0.017172383440786705,\n    0.02221354328142794,     0.021348267816990767,    0.025600170116113395,\n    -0.021251405862317472,   0.01785265250073857,     0.015710467935385188,\n    0.010572648583859224,    -0.013789865242994819,   0.006632010615235281,\n    0.01129464761040264,     0.006489939612791198,    -0.02101598141673287,\n    0.000808031155260783,    -0.011136193431281296,   0.02655076911802063,\n    0.02455312417414632,     0.014092485358404738,    -0.031518151208452354,\n    0.009815099566211793,    0.020567277928932415,    -0.02126645437814985,\n    0.014179536514381363,    0.012101064596722808,    -0.034913026373873945,\n    -0.030737624382767264,   0.0026315170999026295,   -0.01865621168962264,\n    0.006270411490118889,    0.027789925507859595,    -0.00815324680549469,\n    -0.035178389260071406,   0.020957890384811297,    0.03538758624493691,\n    -0.013077881188050913,   -0.020102449085595997,   -0.02732531638813246,\n    -0.0015974119142467824,  -0.030181809706160377,   0.020740790389662492,\n    -0.033071344493847105,   0.026991483124061036,    0.02664829727340493,\n    0.006571548821646416,    -0.014455771140906808,   -0.030652287820375893,\n    0.013577431874074024,    -0.028658524433268773,   -0.002462931410543125,\n    5.0004673732435236e-05,  0.03350968558275657,     0.0024610154110050425,\n    -0.006139081324655332,   -0.02803689262838992,    -0.01210398994531598,\n    -0.010546633749871826,   -0.023156538582423968,   -0.022921575439265117,\n    0.026811871655840112,    -0.015880776786589088,   0.019320649857094307,\n    -0.021799206732548242,   0.020475323806893778,    -0.004692977420348791,\n    -0.01647764274480474,    -0.016588073648616062,   0.024624199013360215,\n    -0.015411449877454502,   0.02670030405759001,     -0.03512864827103107,\n    -0.0064633951520347566,  0.017675461551421467,    0.007881733858681397,\n    0.008246328108551209,    -0.015839477599802965,   0.02144817469514303,\n    0.003647553129554456,    0.007833447756126433,    -0.025476263464525684,\n    0.03558422078896777,     -0.014240998892205703,   -0.02386960488508262,\n    -0.00710629828464098,    -0.0076426226077490845,  -0.008605688572762551,\n    0.02304707115324015,     0.004231323253984485,    -0.0329495934972501,\n    -0.032775038843857636,   -0.030526149498469955,   -0.01315913816522852,\n    0.011311384262059465,    0.010836701580281478,    0.028897136692323844,\n    -0.009974022071949862,   0.010626572375770789,    0.02824617112121621,\n    -0.015392516321993992,   0.01158492042064091,     0.0073997002164737525,\n    0.009764088153102668,    0.0060670808107423,      -0.01979776851599358,\n    -0.01322642793304542,    -0.028057875705308082,   0.010201977039068466,\n    0.021680710662444185,    -0.020971193677773763,   0.015448589945465559,\n    -0.021021379823942223,   0.03566271028962994,     0.009984017411977686,\n    0.011532393225200293,    0.012791976005943489,    -0.02002897599274014,\n    -0.013053313128335622,   0.013699051711486117,    0.014618454731619775,\n    -0.029905915008621164,   -0.006011096358165633,   -0.02902003251918282,\n    0.02603276426449445,     0.0011635122625861924,   -0.03032418985186944,\n    0.029598951365188364,    0.02829277836038014,     0.007878804864222908,\n    -0.009449290590729464,   0.02590755332128542,     -0.025608940883196974,\n    -0.004537437631734221,   0.006908070418651847,    0.029511229079091005,\n    -0.018807360552780497,   0.014087368246250303,    -0.0069372096373051285,\n    0.03157336026149834,     0.03367909215207972,     0.012989798594756106,\n    -0.032054835389832254,   0.022134387789628063,    -0.021546221405049113,\n    -0.01334093971266938,    0.0016826238224366844,   -0.033479470242752586,\n    -0.023685937161848525,   0.010489768082089115,    0.03170513877194984,\n    0.032541585827896326,    -0.009042829034877424,   -0.002267087247414098,\n    -0.006326135391325744,   0.02158264973353539,     0.0005378597503740701,\n    0.01682774390147214,     -0.020008549354939238,   -0.03332171077584072,\n    0.03283214440389728,     -0.02385149804223525,    0.013624269261917668,\n    0.004694171620269899,    0.03072483106491067,     -0.02402734739888023,\n    -0.00036408517434773275, 0.019765073928068422,    -0.03374983551985996,\n    0.015245745000497055,    -0.0005172863381785146,  -0.003385842844449546,\n    -0.0021241551362323114,  -0.007800374848718428,   -0.013061836769372757,\n    -0.011259424834861198,   -0.002339954537494225,   -0.030657460295818582,\n    0.03490540663847519,     0.02840893353954581,     -0.018125998425037013,\n    0.035498792908420666,    0.0049242190771569706,   0.002583071145252691,\n    -0.01699388814459807,    0.0017163071624705015,   -0.02475718572688355,\n    6.493186738896047e-05,   -0.017585959425612408,   0.03547677483263095,\n    -0.029250630582317128,   -0.024038313746007976,   0.02674430171439509,\n    0.03401629015667537,     0.011678215402330121,    -0.025063357225700054,\n    -0.006431915622953246,   0.021091737602780315,    0.030740630428651224,\n    0.019229655242046007,    -0.004597067143850331,   0.015729598900703665,\n    0.03433129040410746,     -0.025271392810403803,   -0.028926349054697043,\n    -0.0335985135531628,     0.03131059972251345,     0.013953475056725442,\n    0.007453210595785829,    -0.0023980977866626912,  0.02743823079411778,\n    -0.030581980165330456,   -0.02286608079922999,    -0.01938267493612243,\n    -0.027601972053963354,   -0.03470337809808907,    0.03329767380198765,\n    -0.01978737035676324,    -0.016615819942678554,   0.018054586916654958,\n    0.02365424076047615,     -0.013112800372324096,   0.03506327553403356,\n    0.01440871447711528,     0.030433927753072153,    -0.015530107719127622,\n    0.025699295294577117,    0.021607138145807114,    -0.021436250096853373,\n    -0.03233402445688616,    -0.022501376230162913,   0.027596569679314308,\n    0.028042577584533997,    0.015973265701774344,    0.006814199363959502,\n    -0.03393884351621454,    0.026801154390159874,    0.03097073756743185,\n    0.009302430034555949,    -0.032338181225207575,   0.011719165973503911,\n    0.011575276775988201,    0.032397409295728236,    0.026310057063136445,\n    0.008033063157423699,    -0.014569807565863147,   0.018128165729778187,\n    0.0036690586411158854,   0.03315673962487094,     0.028542744170017856,\n    0.027441465324000547,    0.023486485022626655,    0.017977841752806565,\n    -0.027283059990369854,   -0.014292869537824231,   -0.029787824178906977,\n    0.015363278219199843,    -0.018502873670197928,   -0.033470858952124774,\n    0.0019480841714147957,   -0.006956680737422679,   -0.01866211490818769,\n    0.021169381978452837,    -0.035689521548543046,   0.0014925836666274512,\n    0.03517832421887773,     0.0038185465649288597,   -0.022343239914248175,\n    -0.022406000381557576,   -0.019583739455494718,   0.013985282923658113,\n    0.0070027997371327234,   -0.029617368351935083,   0.012702578137831178,\n    0.00544659625292006,     -0.014813293652902935,   0.013577610598500132,\n    0.02056906624807606,     0.010152307391474562,    -0.012693293124038139,\n    0.007551447026565294,    -0.00415042070037818,    -0.013394442515119087,\n    -0.024147345230381277,   0.012233651751144246,    0.005316055806359188,\n    -0.010562617721853374,   -0.017006449204024197,   0.013185513410811596,\n    -0.023439122652087162,   -0.029213580769557553,   -0.0141333312853431,\n    -0.02714256569788894,    0.009184917074154626,    -0.0031188962981944985,\n    -0.024286871684918075,   -0.020307913663285704,   0.02259086044133219,\n    -0.006504004754259781,   0.007007085750452081,    -0.002243153501874151,\n    -0.032993285391240294,   -0.027528118802915114,   -0.03428532039866747,\n    -0.013092976714472664,   -0.0267654297201643,     0.019241468508952277,\n    -0.0246513307718655,     -0.02658230555854849,    0.02458282124752348,\n    0.023131001695157867,    -0.003008282274840441,   0.0296935425642448,\n    -0.03527560610147665,    0.0215285123181252,      -0.011823610225340817,\n    0.029067144462406474,    -0.019094899773832892,   -0.03028267886427963,\n    -0.008521443477353808,   0.022119906224937747,    0.024894175680541853,\n    0.008607336368439014,    0.00013812187565492056,  -0.0001955123965960505,\n    0.025985754442977856,    0.009890817370858791,    -0.013225138611111891,\n    0.03390947373523915,     0.03368940646614078,     0.016077338721707104,\n    0.0023978419067873153,   0.02124697539046072,     0.00761091993284968,\n    -0.030885476295937818,   -0.03519024786606811,    0.029013963540157655,\n    0.01908401705755891,     0.034277160539600345,    -0.03171670679077441,\n    0.019529859985135598,    -0.01377765513156632,    -0.010511900100468359,\n    0.0077520274845863735,   0.01612115704570807,     0.022138293251531185,\n    -0.009469743330449754,   0.023824847877917863,    0.02505894166262804,\n    0.005650939993620191,    0.027841807591939317,    0.02149585748484775,\n    -0.004816807518871987,   0.0008989570326006938,   -0.0049352831986017665,\n    0.016333411014052047,    0.022631635960068775,    -0.008724433079171676,\n    0.0031897068732446255,   0.017649654322820608,    -0.03394091526481565,\n    0.02824833860267777,     -0.03167619482808259,    -0.020804827456938266,\n    0.02992806187821905,     0.0026710413236546676,   0.020660795079846608,\n    -0.03472359974160524,    0.03493296080701141,     0.030219448639826618,\n    -0.019475078753173714,   0.01331960519645426,     0.030242975117712383,\n    0.00545006610155332,     0.014382624605204,       -0.022921388080743055,\n    -0.0071228964170581945,  -0.02575378646690052,    -0.02605947524064617,\n    0.013723917726027077,    -0.035431087344772745,   0.029345788887774026,\n    0.029409298097718438,    -0.01386621695760533,    -0.02788267723251881,\n    -0.02545638072061904,    -0.022322416524268297,   0.020768375903672292,\n    -0.009148779165937489,   -0.009645353950906948,   -0.031331037630797254,\n    0.023893543834470753,    0.013302247182700027,    1.0020490141458638e-05,\n    -0.008090811265253024,   -0.008539097798924382,   0.01022620424715103,\n    -0.015029175162996511,   -0.035585814776625264,   0.021971941534173405,\n    0.02890619992949355,     -0.001076395554320613,   0.0036709329630506466,\n    -0.009178793428142784,   -0.009189871218563754,   -0.00040590536532519075,\n    0.0026540977458600385,   -0.022323836509732298,   -0.022326862472068696,\n    0.01591226984226665,     0.00964353320909098,     -0.03367253168855531,\n    -0.003549784062268365,   -0.013455356529426254,   -0.02531859253443351,\n    0.023318821078671025,    0.026410114140437056,    0.03127621661108304,\n    -0.0013812437141910003,  -0.012771044489020467,   -0.018044399869704842,\n    0.021385035838945552,    -0.03437439914892923,    0.030306680396485562,\n    0.02828480039663416,     0.013893743577076154,    0.01880772647959991,\n    -0.018037486331237338,   -0.011431963071086538,   -0.002292387859777391,\n    -0.03120524543185782,    0.03296055120005406,     -0.030911764462585454,\n    -0.02257465835149964,    0.005033251920023455,    0.022340334947888996,\n    0.011345759632355448,    0.0018363547640658743,   -0.013031176115169685,\n    -0.009001905781637065,   -0.018427115790782694,   0.01588512361627772,\n    -0.022995990777724983,   -0.020696472213419706,   0.0018058328523236236,\n    0.00794169955776332,     0.023523119141208436,    0.029097137511985494,\n    0.025969705879772993,    0.004018943395410757,    -0.0223408003014041,\n    -0.017596826156233217,   0.01974937251076498,     0.028086535179368058,\n    -0.0221721948829853,     0.014059017921925621,    0.009091445899370443,\n    -0.02938649379959376,    -0.01908760882761429,    -0.00688394797125744,\n    0.028707089062062097,    -0.03239449844076319,    0.013478791619194535,\n    0.0047938883794980125,   0.004978246549305446,    -0.021915876170384586,\n    0.024063701456996392,    -0.020817909813636768,   0.02849491982054103,\n    -0.005139112337659433,   0.02109427115449676,     -0.009077944627065031,\n    0.006033010894207784,    0.018620734867337205,    -0.010838666842522,\n    0.013109834517120642,    -0.01782872367949024,    0.02548676442523772,\n    0.016799797858948647,    -0.017774949037294763,   -0.009282461942572349,\n    0.004535998626794641,    -0.0224157260092437,     0.0039133742605976475,\n    0.005747631193134436,    -0.027335813707909003,   0.02057276764686691,\n    -0.006710203823406463,   0.027322595183274748,    -0.013877109556035794,\n    -0.02478629085856738,    -0.033565823840903904,   0.026827076115980904,\n    -0.025146959944394514,   0.028939346504235186,    0.023444743603002954,\n    0.01604294745407141,     -0.016569924939592726,   0.017626403842333094,\n    0.03200958523358736,     0.017360216909682414,    -0.01366831704414434,\n    0.0013060877332644208,   0.021092041930246996,    0.03221967777377549,\n    -0.005175647022117702,   0.012762066279573539,    -0.029742753816335208,\n    0.022433610332518995,    -0.0137871107229577,     -0.006984116256089206,\n    -0.02175573500428124,    -0.028992722320122167,   0.02051403778218542,\n    0.007458435533276147,    0.009431961835891503,    0.02555134805508686,\n    -0.01837227885369687,    -0.005332680979460142,   -0.012978059602285905,\n    0.03285960001415081,     -0.0022939142517698907,  0.034538284180537636,\n    0.03060610436089535,     -0.02878447592270954,    0.03386134881513269,\n    0.005564828775393461,    -0.02596278521179578,    -0.005358295965297625,\n    0.004443678325659085,    -0.02953424733466484,    0.020592450844408677,\n    0.026073581775187378,    0.02152879898188688,     -0.022713944842047463,\n    0.0008345570617663119,   0.02818595926172333,     0.03408530840580292,\n    -0.005174544770384346,   0.004080875318394152,    0.0233059825620676,\n    -0.024394983440927474,   -0.029993140166026316,   0.0017718418636670625,\n    -0.004421982986121659,   -0.013330481295387631,   -0.025814614939990564,\n    -0.00562464003540597,    0.0286783793531864,      0.012404798911297936,\n    0.010682914203319896,    0.022284893187610795,    -0.009521200241824599,\n    0.00929243886346536,     0.021343659058574556,    -0.030120157699443546,\n    0.0021914102135691354,   -0.03533902559940872,    0.02677671254543604,\n    -0.0018443938666610205,  0.013953075297335256,    -0.028571250564789086,\n    0.025610155457614428,    0.03276748891118184,     -0.026773169537394725,\n    -0.03452182897161488,    0.019078250322632908,    0.032118396673408434,\n    0.031116518937504507,    0.020543043489733417,    -0.03443727264204427,\n    0.023560878941371963,    0.029932059369682358,    -0.01789290136249029,\n    0.003465087564810533,    0.034739622471827214,    0.0027510745291111794,\n    -0.01420274241249931,    0.021728212670583415,    -0.0038077261781773648,\n    -0.02213292001220445,    0.007925129133085533,    -0.002347543401422823,\n    0.012732910026927509,    -0.0022314134961702553,  -0.032058351453222673,\n    -0.025888706334987386,   0.0029677322706592813,   -0.030796794369076355,\n    -0.015332528178540883,   0.025621657671544083,    0.02024809891401986,\n    0.017049838705869267,    -0.012687156966745865,   -0.03200939876614577,\n    -0.006897758768800285,   -0.00749927550742505,    0.0037816663829985148,\n    0.029550955925063134,    0.021855759825674868,    -0.03415732582647734,\n    -0.024339518226088295,   0.02096435876963085,     -0.019103057016553484,\n    0.011854806359237618,    -0.005293760861209148,   0.008386273387791425,\n    -0.017464095662833634,   0.028359945006078267,    0.034099312942065266,\n    0.03222464174495824,     -0.021349781667731296,   0.01753761174918386,\n    0.016229245257436804,    -0.02141173970856174,    0.03184396702117837,\n    -0.022383040915316246,   -0.008218693520487754,   0.02822890192003372,\n    0.003370955677409605,    -0.034394650949891116,   -0.024829221042263164,\n    -0.014928315950208064,   -0.02314412565382921,    -0.017732790816450333,\n    0.029893475468089084,    0.0330474319863885,      -0.034075552164133056,\n    0.0010941930748781961,   -0.022357915903211685,   -0.012186505666661874,\n    -0.029646289671921747,   0.02402310517689198,     -0.02706965169094708,\n    -0.014879572424079255,   0.027020571696613416,    -0.010344678376493974,\n    -0.033295446110649635,   -0.01712960690158231,    -0.01860282093164961,\n    0.020768185447545797,    0.010254586090976014,    -0.007633186737611383,\n    0.025094799406509976,    0.03165078243500733,     -0.016037892827548472,\n    0.018386442295088724,    0.0023926581010024284,   0.02544597926404406,\n    -0.009354345961295292,   -0.01718319519863655,    -0.02717317425810899,\n    0.026666106871434683,    0.03417675447198715,     0.00796548894229864,\n    0.019455798532322884,    -0.004171582721410303,   -0.0016665026318044957,\n    -0.022648610815263138,   0.027741913703624832,    -0.016351892732016527,\n    -0.025871086571961775,   -0.03054628702895666,    -0.011673050944117762,\n    0.00809864954424061,     0.00046674811518768574,  -0.0034147162813361054,\n    0.033406706567305273,    0.001990922340727238,    0.01708910302243748,\n    0.006371344525824376,    -0.027594052875611848,   -0.0008164944694160942,\n    -0.016252971858373145,   0.03125450879077279,     0.03510859879162601,\n    -0.012148350505524905,   -0.0010828390141582956,  0.009174269051282038,\n    -0.02974376499987632,    -0.008950551686449211,   0.0023254053322336954,\n    -0.026644906180135833,   -0.016508306793897927,   -0.026251294872558704,\n    0.012036167927737651,    -0.017446303770728627,   0.025497082435077936,\n    0.004639797537446183,    0.003381119274445708,    -0.011226652933641834,\n    0.033702220207276735,    0.023282105602762802,    0.011705877524776514,\n    -0.007255802112835782,   0.028795590754750022,    -0.025951736817991542,\n    -0.018087047103570467,   -0.022285063229088367,   -0.02752318098909335,\n    -0.02693336527012039,    0.0329026319895827,      0.0273030043440201,\n    -0.008792814119568813,   -0.030583676044977786,   -0.0009614991665800518,\n    0.028540302910074873,    -0.0008990517240421277,  -0.0013267578505742736,\n    -0.011443769963012756,   -0.02710486151655185,    -0.007276448281731351,\n    -0.022437039445056418,   0.014344411365243328,    -0.02956374638389888,\n    0.01770808152060235,     0.014855171939791474,    0.023967903939759137,\n    -0.005239669599792035,   -0.02530066082173029,    -0.03325590386349476,\n    0.0054436741705809555,   -0.0333337404937086,     -0.01823400536588554,\n    0.009378211580063982,    0.009379245101713634,    -0.027577871469917786,\n    0.014113844359078316,    0.004826513896608978,    -0.02137505306566564,\n    -0.010572800016081707,   0.024941593874343707,    -0.006289773542491003,\n    0.002800154390128587,    0.001552834215514839,    0.02987317171182018,\n    -0.021113854670015926,   -0.006793943031924122,   -0.035222816205513756,\n    0.03355956020992886,     0.012865129236061717,    -0.005928787641329171,\n    0.0072199841362949714,   -0.034443504920452915,   0.03410024505400164,\n    -0.021120606853444666,   -0.03231299438236728,    -0.025461131396678095,\n    -0.023022031557792103,   -0.016145437986199798,   0.007581814032207296,\n    0.0014454327609381304,   -0.009638144129513122,   0.03449792966011699,\n    -0.01887250807502816,    -0.01932630506864054,    0.007063134639040403,\n    0.025602433927373276,    -0.02421002294969095,    0.018757768075764774,\n    -0.027040687295920796,   0.02043859196245106,     0.001380270132023734,\n    -0.031962233619331766,   0.02326024380627798,     0.005703043257109384,\n    -0.01633653097613821,    0.009175329834032178,    0.025911645637371104,\n    0.0029121506386437274,   0.024517308851857107,    0.009506096854819235,\n    -0.003991027379437906,   0.01676201370670595,     0.018426265024567536,\n    -0.022752078555520146,   0.032936324888036654,    -0.02993275017698388,\n    -0.03230742146101454,    0.005148225476170902,    -0.029430786664358957,\n    -0.029241442032483758,   -0.006890195462932156,   -0.00958603803217655,\n    -0.02772308513177687,    0.014320994809068604,    0.02185119028100001,\n    -0.010599553575794039,   -0.0181198012049205,     0.014973656917089358,\n    -0.005708309766110935,   -0.007217841192481683,   0.002875771723340811,\n    -0.017623448875572035,   -0.02467691714525382,    -0.006228106307943039,\n    -0.028439239664790377,   -0.021520175885802118,   0.023604958181673675,\n    0.0056007115453593805,   -0.0036569185473475808,  0.004655792933605304,\n    -0.027487475874329828,   -0.0010581759470937471,  -0.0012385805440248618,\n    -0.02731934084206456,    -0.001762242278053835,   0.012227492588348803,\n    -0.021207858842967147,   -0.03493106527488443,    0.0205867348201752,\n    0.022608199692503637,    -0.0002739438067217833,  0.0024114276887151538,\n    -0.018702402795784952,   -0.009998206539515695,   0.01903302075464407,\n    -0.024925521338199155,   0.017140819757727997,    -0.03409791290421689,\n    0.00896613508615135,     -0.007337450919138613,   -0.005163416261458244,\n    -0.014141173373201277,   0.03540348049638767,     0.011135656049823726,\n    -0.014623599396855376,   0.03370538290057512,     0.014835874598879733,\n    0.02173368232998894,     -0.0020670680917791923,  0.02215788987290969,\n    0.03214255027518196,     0.014423367264017002,    0.010269608808373916,\n    -0.029117183375094984,   0.014943698539378634,    -0.029004218021305046,\n    0.004819071316395204,    -0.006136453340268466,   0.008992440778102755,\n    0.03251247815182718,     0.013588785264189805,    -0.028592475537141764,\n    -0.012473691579504263,   -0.0008913483074532752,  -0.028870998725462636,\n    0.00036764810286111463,  0.02288021655588953,     0.02626887748733551,\n    0.0014205679585171144,   -0.0052967864163981915,  0.005942396791465584,\n    0.032541195419370554,    0.030258982187365682,    -0.009796264420149359,\n    -0.0014356476621227138,  0.018486646437717857,    0.02839604529314628,\n    -0.018685591157228905,   -0.005048827461412521,   0.008129997497650976,\n    -0.035529137587930644,   0.0069243324089543635,   -0.004370176073118475,\n    -0.0346414584549177,     -0.005469944024274214,   0.009505354953208969,\n    0.02230871806105308,     -0.004410214106479127,   -0.000914405761728235,\n    0.002062727651032008,    -0.0043141137087512405,  -0.019892302362801862,\n    -0.016945988461321972,   0.030964110778827214,    0.0288775446441098,\n    -0.021530298584477026,   -0.03448577517324774,    -0.008030394077936185,\n    0.03105486111803813,     -0.004069665823789512,   -0.022502405387016183,\n    0.029009623632431914,    -0.012394914477676813,   0.0024112016662701397,\n    -0.011446854310787924,   -0.02198841125824316,    0.021975047179733927,\n    0.0006937789243220574,   0.009255116624279136,    -0.019789851429838523,\n    -0.019327177811987235,   0.0356783703795067,      -0.004197490222892397,\n    0.0016012554706532067,   -0.0045762154233303255,  0.005000882820314395,\n    -0.03305376056259802,    0.02974158724232483,     -0.029998732019885153,\n    0.01671122809699908,     0.029173384590016994,    0.02888131389772196,\n    0.031245603991906668,    0.008397422332461648,    -0.01747070746106516,\n    0.027946379496170362,    0.024583021108256456,    -0.023253922009097774,\n    0.0015151174287804262,   0.003070008095188481,    0.01722385445094121,\n    0.014978020786276976,    0.03486931402880811,     0.003998615894150871,\n    -0.018152746356100573,   -0.0012092842024262354,  -0.011937350008741885,\n    0.004864854551918112,    -0.014476707402462334,   0.0062008761339965735,\n    0.005830101611705654,    -0.03405130247108809,    -0.021299965129806944,\n    -0.014163573070088356,   -0.03170632608309934,    0.03313295497037882,\n    -0.022210434401472592,   -0.03463699425079362,    0.005246240191732373,\n    0.03417414542191998,     0.016001002525987643,    -0.012227749157659474,\n    -0.0007198075271099518,  -0.026783820218925954,   0.0030210148431389834,\n    0.0034572500679557194,   0.024576358279484192,    0.00532661178841265,\n    -0.028449357332240455,   -0.030852985163883198,   0.017186909105476798,\n    -0.022197696192460876,   -0.0014449437289489012,  -0.01208318149905742,\n    0.013056183791912304,    0.028884047754742164,    0.023138982847715095,\n    -0.014505371411603723,   0.023372827879810217,    -0.033667049051986225,\n    -0.02175324260923485,    -0.02575001873414042,    0.03343700359059642,\n    0.005462552603264226,    0.0031740484442646655,   -0.009261928582152412,\n    0.007424520998031972,    0.012818639239416585,    0.0275950685819127,\n    0.02616351111129332,     0.017066430196435983,    0.0076978474543255805,\n    0.029386146316802354,    0.01482052631666364,     -0.01846201563684804,\n    -0.016295382836816117,   -0.012293577054357272,   0.03128763645081362,\n    0.015432916935377017,    0.016702623197305935,    0.014007693169820439,\n    -0.009952963801817871,   0.02495766291890138,     0.02460213690258071,\n    0.012834632121080785,    0.03148328041505506,     -0.008282226690169639,\n    0.030184704575351225,    0.017387241612007505,    -0.03170364742736983,\n    -0.027077922229325202,   0.026256046370292874,    0.03168884120287383,\n    0.014672270761119433,    -0.012843029848113712,   -0.009471596141161363,\n    0.007170817313323086,    0.0026121656662643766,   -0.019861201308529863,\n    -0.031073223719914285,   0.03037449165383861,     0.017622544955518498,\n    0.028306422150404676,    -0.02846449051015272,    -0.008817452525907488,\n    -0.0027184124269388843,  -0.009144898885062805,   -0.023793268141530113,\n    -0.03555498584676615,    -0.03127510300627811,    0.016886320932591483,\n    0.03499373571517538,     0.03418014799238659,     0.01637171373134946,\n    0.028384013322413033,    -0.01668353464803192,    -0.02875465967522049,\n    0.022217743965075722,    0.017453774379477458,    -0.009365980849803801,\n    -0.014684956183496727,   -0.01401713381776579,    0.03252005628253867,\n    0.0068892176734820345,   -0.03247664355742221,    -0.027305291779273842,\n    -0.030623796118246914,   0.03082406699049467,     -0.005892052007297255,\n    -0.0331027414317907,     -0.0011401721399295706,  -0.0012857648870186397,\n    -0.00020568911638640147, 0.023659701411394656,    0.034874492518680356,\n    0.0011978629756926873,   -0.005778846299423006,   0.005429578677469238,\n    -0.029678341097448633,   -0.033011276777893395,   -0.020766692168562164,\n    0.02621842298036594,     -0.008554765217813176,   0.014700180732385087,\n    0.021086902211726027,    0.030111588705785872,    0.031350700508027324,\n    -0.007685708050597373,   -0.013609430952483244,   0.03495034270331992,\n    -0.014434991959179053,   0.019209685261050855,    -0.003994023530412592,\n    -0.02858155712849804,    -0.0052701212732643,     -0.02656574999751486,\n    -0.025575770658644317,   0.010307211688991846,    -0.01723314467410264,\n    -0.01607772937719293,    -0.02173040564796073,    -0.032530510265003844,\n    -0.004355173946429377,   0.019149437487100223,    -0.01699309357189498,\n    0.009983907748204972,    0.006947885246026416,    0.008769782343220463,\n    -0.014228453968975865,   0.028419417916043053,    0.026500335220018892,\n    -0.025560615405860607,   0.0323552239826567,      -0.012517345822395378,\n    0.009894642223490076,    -0.004124631543678647,   0.021638592752191224,\n    -0.014861638626894791,   0.007465509795946583,    -0.02627972414975276,\n    0.008912677878058701,    0.005130815175189635,    0.02671535035854667,\n    0.032902127349263136,    -0.004233622931091799,   0.0006720538004522816,\n    -0.006669569310062041,   0.029569105393535702,    -0.026687290149365637,\n    0.02975550768894585,     0.002901633500778647,    0.002968476072410131,\n    0.0036809549967102046,   -0.018029229725800358,   0.019616140680741714,\n    0.029569825277273483,    -0.00702471624379405,    0.013736703944178426,\n    -0.0054359201082607245,  -0.029767833354094574,   0.01669693358444596,\n    0.014990619528934213,    -0.031465437225669114,   0.006396633968174914,\n    0.023824679141277297,    -0.021026632775815304,   -0.016788168425164958,\n    0.01024593192612214,     0.0004366062220579733,   -0.024639905046639477,\n    -0.016159868218827634,   -0.014996436148480785,   0.0024592643108390455,\n    0.030406451443222394,    0.027976415916519226,    0.03155174473270412,\n    -0.014808572104741544,   0.022075541797308907,    0.01876682337039195,\n    0.019764128024385087,    0.031056243518872102,    -0.01993967879555329,\n    0.031108351456665913,    -0.008262651796656568,   -0.0050689253066076535,\n    0.030243840551052746,    -0.014714649412312548,   0.011229653873542711,\n    0.022406119471279518,    -0.013049437166790181,   0.011793170822840498,\n    -0.022432227248419825,   0.012400119859099779,    0.009470695835642496,\n    0.03356768345338146,     -0.003611916836418895,   -0.01620931248382229,\n    0.018343328647893658,    0.010786391493232928,    0.0032865917984546567,\n    -0.030049954707205853,   -0.0005823846668539602,  -0.02588568021900446,\n    -0.0008487087815330997,  -0.0012861139641277394,  0.020975299616852627,\n    -0.0029319122666343145,  0.015904660185459163,    -0.008380493815519426,\n    0.008657140828810448,    0.008647467928972459,    -0.020926395271115575,\n    -0.032454890043967434,   -0.01287348607049452,    0.024989072839831965,\n    -0.012880669207708828,   -0.027661321173712457,   0.010311809887801504,\n    0.018315278700561623,    -0.031728381822622956,   0.017427116789114752,\n    0.021927246197987162,    0.03148132298084,        -0.007964184243302863,\n    -0.019115751168614088,   0.011894730574048828,    0.012378551824542243,\n    -0.01751766299626851,    0.010400664823792736,    0.031418523715132055,\n    0.010840400608219907,    -0.03473075266636985,    -0.0054732601221181365,\n    -0.0023342104710291395,  0.010605291706601063,    0.02932302821960287,\n    0.0009625862011757698,   0.002086520589781109,    0.016164342298670212,\n    0.01350682304446053,     0.016661046085759246,    -0.025004385221019332,\n    0.01762804199404827,     -0.00780417637385001,    0.021336479091273855,\n    0.032120476642625455,    0.02928139798922867,     0.030542664448994217,\n    -0.012804439929130123,   -0.022632494231993903,   0.02351921934291999,\n    -0.019430402952089126,   0.004155743020430972,    -0.01302185362085851,\n    -0.010716200782007175,   -0.020765584177032517,   0.006083939516386369,\n    -0.01516396970867227,    0.03495594750496867,     0.0024066130822707,\n    -0.026602203929699846,   0.030099584077620787,    -0.0008561470289037658,\n    -0.027727798297988847,   0.03467009323322449,     0.024796980072490853,\n    -0.022555136031970575,   0.008973290885103147,    -0.022498167137498484,\n    -0.03273177587401969,    0.007995551716594725,    0.035627014000135425,\n    0.003686560999642477,    0.017707853672486902,    0.010142647005047585,\n    -0.01914085277877361,    -0.006557359844263572,   -0.017559134038378443,\n    -0.015791564579420936,   0.0018111586517131706,   -0.0023284199403006806,\n    -0.033985336594224265,   -0.015669741664415298,   0.006450937597244886,\n    0.0004159768128040546,   -0.000791526784806413,   0.005408202194893075,\n    0.03372695517958059,     0.0011097823787116845,   0.03510547793600243,\n    0.0007618996952552922,   0.03359845288846639,     0.0006645080117263026,\n    -0.03530145356202746,    -0.014499685798794293,   0.00910894716191365,\n    -0.017347478791542952,   0.03424121137214543,     -0.006046101233736612,\n    0.018593010208700547,    0.005990637925064514,    -0.014170462591611904,\n    -0.029179966258130328,   0.029246831136398675,    0.023578671756479857,\n    0.02478402806495745,     -0.0027652923941563173,  0.0007246014730603362,\n    -0.007756356896573502,   -0.011315254142426574,   -0.02741158392826909,\n    0.014869565490603427,    0.01567632252449347,     -0.0004587138967470729,\n    -0.03082889570874391,    -0.0029464705083917598,  0.03493397629255014,\n    -0.00034464540603267626, 0.019432292892644545,    -0.018881603338814026,\n    0.016541277376508137,    0.024360249261360337,    -0.015415433388365436,\n    0.024445502189425792,    0.029778170387477883,    -0.022075543125496134,\n    0.022444784301273984,    0.02091545070012112,     -0.01823429180036191,\n    -0.00908958229150555,    0.006335919305714881,    -0.009744505327004802,\n    -0.03132265865120959,    0.027957835091344075,    -0.009332929239555017,\n    0.018813099500787436,    -0.005732951545954672,   -0.01982739109993883,\n    0.012421323099601953,    0.014333740446036858,    0.02533326365028145,\n    -0.009220262358491152,   0.010895388358242719,    0.021396471898356004,\n    -0.021895106759614653,   -0.028326195784249424,   0.0053104533745859895,\n    0.004665664460755463,    -0.02827456957993738,    -0.0034834339696585477,\n    -0.031191244182346232,   0.00031691579201951835,  -0.03143788116295531,\n    0.011323683441974453,    -0.01976666670204847,    0.003218257344448567,\n    0.011503213794874035,    0.02275318086757678,     -0.008947015907128335,\n    0.022575047111303155,    -0.00430333738492476,    -0.01847015490402766,\n    0.02428437829440762,     0.020368765283040092,    -0.006687695504042681,\n    -0.009427974560697359,   0.02850828903655319,     -0.0048536135896441535,\n    0.013433573470174225,    -0.007105771684749415,   -0.013004049231259163,\n    0.018595775121179523,    -0.018421091757545017,   -0.03461888033004051,\n    -0.027299236417011413,   0.009010400831468724,    0.008387429830328133,\n    0.009380715896274665,    -0.017349107845795582,   -0.005042000448673375,\n    0.004337099811291489,    -0.034552435933681964,   8.28307411581765e-05,\n    -0.006810873766728826,   -0.025674528016595744,   -0.033627646003496436,\n    -0.012304365368881376,   0.03130774521223642,     -0.013786913324624608,\n    0.00784721707203572,     -0.013345070125447944,   0.006998048173611635,\n    -0.008559379436129657,   0.025885251011188982,    0.0047786589341834275,\n    0.014763184772021177,    -0.0188709162989282,     0.018730836459713112,\n    0.010289718502386436,    -0.013845714733590562,   0.004932243810406506,\n    -0.006772779733448855,   -0.01779618132615395,    -0.005887111451626522,\n    0.008903683098040254,    -0.02100532505376149,    0.019360382950027788,\n    -0.0024744783730499503,  -0.0298926491000416,     -0.018072632680262133,\n    0.028783093613935162,    -0.021587968347951354,   0.016847667152563885,\n    -0.018720029829316667,   -0.015503475685069473,   0.02079686859638913,\n    -0.018374946728950108,   0.010554385358863137,    0.011918806634674466,\n    0.016861444148078678,    -0.03160572775170345,    0.018242676293395717,\n    -0.010085946257003176,   0.022823061629649182,    -0.007922250849476222,\n    -0.01813305741481265,    -0.0011008544349473085,  0.024424842148774675,\n    0.014710963939932866,    -0.02574295371169566,    0.01633756782100113,\n    -0.026743283760468067,   -0.014037572663188398,   0.00986972804415988,\n    0.006402055616011315,    0.007912048351259906,    0.02876741244422464,\n    0.02565525443643025,     0.023675289397488315,    -0.02489012432223736,\n    -0.01899831618313066,    0.0019959694235201736,   -0.012893942511122048,\n    0.005641698296372748,    -0.019886332367013218,   0.009181866450008203,\n    0.032161258159466466,    0.000835979722676334,    0.002155834321556717,\n    -0.011154616001576039,   0.035625989912561336,    -0.0016336908988237506,\n    0.022177283804784603,    0.009512952588502368,    -0.011008804963507852,\n    -0.015613000522479943,   0.028997818253020405,    0.029199880847210945,\n    0.03029844694572925,     -0.02343348705874121,    0.012422819965898271,\n    -0.03478739913778877,    0.001956746184892999,    0.019976436442240127,\n    0.03293239347316306,     0.023118316686613783,    0.022350892683488242,\n    0.006470607503527942,    0.010065197929874987,    -0.021938104680333286,\n    -0.008751712151138498,   -0.005244846882408988,   0.018822504181016497,\n    0.00019856031396017372,  -0.005132563593445438,   -0.026163649390020263,\n    -0.020507375926608385,   -0.019214788632187063,   0.025417423511889737,\n    -0.004404532691734028,   -0.015373703379369346,   0.03315169340842908,\n    0.033801339442457896,    0.02547316742282353,     -0.02411830773444351,\n    0.03229554464835232,     -0.0026064947180205384,  0.020055877642878875,\n    0.008006379086803002,    -0.00225515074397362,    -0.02503063072478622,\n    0.015240208467976721,    0.005688741404118307,    -0.02964591486343217,\n    0.033148093045356715,    -0.022433896932392415,   0.011129178764240069,\n    -0.024463355288331726,   -0.02840131495515306,    -0.014886147302545774,\n    -0.0016444449215110568,  0.0017958458163458027,   -0.0034601952498482125,\n    -0.029303875463156603,   0.010376224009962179,    -0.029676650786059567,\n    0.01773696749345163,     0.0027540028091051095,   0.013031315215597963,\n    0.008835312812101164,    0.02187375659086464,     0.033648814156884636,\n    0.011748941919171465,    0.020828477325155137,    0.015774264346984725,\n    -0.0021713139822434136,  0.002631865315228925,    0.016671074191541502,\n    -0.01815199609285315,    0.011728826735975455,    0.034686694200905484,\n    0.012201687387498748,    0.010749071237506902,    0.015025278539787301,\n    -0.005781343619054119,   -0.014475326925199324,   0.004490204313628771,\n    -0.023032684370970564,   -0.003875373405813969,   -0.03123756926503195,\n    -0.02611142379276317,    0.018965307592332455,    0.028392537879619206,\n    -0.013122437018104576,   -0.011961346245702354,   -0.03305429861939419,\n    -0.03089417480937051,    -0.03411549279881976,    -0.01073798844855991,\n    0.02585523086303755,     -0.010095924382526622,   0.006768197428298388,\n    0.01949210493501843,     -0.013953407676623793,   0.005316385326403137,\n    0.030862500603274976,    -0.022268302796470605,   0.009445157134507418,\n    -0.016542482379988777,   -0.007233153227033812,   0.012892410600468989,\n    -0.008476085117806342,   -0.022597364694465126,   0.03246847341302036,\n    0.008903270759747934,    0.023084072468955313,    0.01817636626862543,\n    0.004943876035202854,    -0.014010227427906228,   -0.014580126203031918,\n    0.015522868120506421,    -0.022267026423351384,   -0.004336630203547155,\n    0.02631865171091892,     -0.012547631775414958,   -0.014643642368686205,\n    0.02762747920511602,     0.03334501188143588,     -0.031089053535699216,\n    0.023025932542702028,    -0.002491823439415357,   -0.014056986411846462,\n    -0.02351876502164001,    -0.034847210204475336,   0.03504989643229094,\n    -0.03357209833539702,    0.022750995028124364,    -0.028571976141114577,\n    0.032513248833677004,    0.03504964384815557,     -0.035695243844586326,\n    -0.034441755162992874,   -0.008408770166658228,   0.010813977500474936,\n    -0.023428746884287626,   -0.02740537578600894,    -0.035713023783289506,\n    0.016057460804083226,    0.017283674001832908,    0.0343682605026771,\n    0.008802101436245697,    -0.011748250667969234,   0.029834778910859748,\n    0.00876535517247071,     -0.00894878405074407,    -0.009536731548984751,\n    -0.005647762780023332,   0.016531792620468357,    -0.010407854344071004,\n    -0.020271551855068584,   -0.02564676871692299,    -0.000881402976415083,\n    0.010674090153394076,    -0.011847518203857146,   0.01570882001010775,\n    -0.002615731047920265,   -0.016673781857571637,   -0.015139058899020999,\n    0.006850221277655745,    -0.02749141046081517,    -0.02717552621089329,\n    -0.01329192922181438,    0.0337132969550042,      -0.0053691700520342445,\n    -0.002338838495746057,   0.0303841029391158,      -0.02566809511698884,\n    -0.0023973066230512175,  -0.02717538343113335,    0.005030700322510382,\n    0.035582599248371774,    -0.02229973341306239,    -0.0021496634201811993,\n    -0.01787140982757787,    0.015941085840398606,    -0.008541929120962457,\n    0.021962480291914013,    0.01527243367930503,     0.0261086192359655,\n    -0.0021080218777069304,  -0.015360225493332443,   0.027152836078619267,\n    -0.005089566994017636,   0.016625310228095592,    -0.010281355113404103,\n    0.000795009345985658,    0.02281078453329067,     0.007707057284798226,\n    0.006843977527846299,    0.026687216101662026,    0.0020418845848011774,\n    -0.010691718251913007,   0.032248596531577606,    0.027726111924809105,\n    0.026776687096477847,    0.02482053697634924,     -0.0073901752375933084,\n    0.0054159106423406645,   -0.033419290617419786,   -0.026214653259395426,\n    0.01829243142894713,     -0.0070136913939245395,  0.017084687763221685,\n    -0.023737577862999504,   -0.021151584307380723,   -0.004948665186948221,\n    -0.0035736681475198274,  -0.005245208279838954,   -0.006255995812731927,\n    -0.0316570832077173,     0.03330425112565947,     -0.004892496422760176,\n    -0.02608404241007976,    0.03190111149101905,     0.01236907775028779,\n    0.017423126840559466,    0.02164102519016273,     -0.001589071588151382,\n    -0.02347771133402297,    0.03436838540172462,     -0.013117629062121335,\n    -0.012236283365402039,   -0.023509541387433264,   -0.031583087285262344,\n    -0.019210948068734555,   -0.03149796574209981,    0.016776000403098956,\n    0.031053110465239547,    0.019162124311562348,    -0.010841052929410067,\n    0.016245987177775208,    -0.02336862551796701,    0.03090784763496729,\n    0.028912791217640628,    0.027387982894164758,    0.01621384906348985,\n    0.01095078678949377,     0.033084589343225106,    0.005783688727096875,\n    -0.018883072316086203,   0.026477868861306198,    -0.003097183946680475,\n    -0.033908268558325204,   0.005966698244845683,    -0.017250049161826778,\n    0.03279766770091799,     0.030094660353303514,    0.00571973607095735,\n    -0.0063782559365638015,  0.029437969752504907,    0.02062864776775838,\n    -0.0233466689037377,     0.021197255290561934,    -0.03361749586442571,\n    0.03411448647766522,     0.021337791898992986,    -0.010688181400847008,\n    -0.008559153742634011,   -0.014926690066199693,   -0.0031436680240375615,\n    0.012588657143382245,    -0.033169218023503935,   -0.009725179137816993,\n    0.030580566022537708,    0.026059493718155365,    0.02820314984730976,\n    0.016499976899905604,    0.022750526012459096,    -0.00045519160765244185,\n    0.026873598944737905,    0.021676904402804096,    0.028227188381291186,\n    -0.024974710639436314,   -0.011160843951906101,   0.03174846908639418,\n    0.0011425568803394293,   0.02770040525218382,     -0.01611967808806164,\n    -0.0006454449675172914,  0.00048569776273400215,  0.026822313387077457,\n    -0.030927265468720565,   -0.030734990861490744,   -0.026718069651820418,\n    -0.012288267684904881,   0.001889627422323538,    -0.02232956150170752,\n    -0.014987326233545222,   -0.02286241968494761,    0.024430370929082304,\n    -0.02139786846467473,    0.002637676527026416,    0.001945661163700144,\n    0.03495665977490672,     0.008838109805741694,    0.030837907512582894,\n    -0.020686770325662913,   0.028054491135258708,    0.024754583958562122,\n    -0.0027304051385791234,  0.008924953327503276,    0.026938398986929988,\n    0.007562526996019272,    -0.012044969006569444,   0.02825998693105526,\n    -0.02653577684985491,    0.004890063579127809,    -0.01576313091516829,\n    0.007506325482530218,    -0.035554358031380386,   -0.0006286044123878311,\n    0.0183448209327394,      0.014153479975695318,    0.02411545892152631,\n    -0.019703581657174632,   0.002341781217602447,    0.030270741515540996,\n    -0.02251932924272345,    -0.0005604866530342248,  -0.016492097669096355,\n    0.022465827036901077,    -0.001523260781555648,   -0.007272419438051577,\n    0.02246280510106137,     0.02269982263612269,     -0.012506747538187415,\n    -0.030874104630597712,   0.004941848634624927,    -0.007670299664701642,\n    -0.027728742103273196,   0.008319776359069917,    -0.021529713567120926,\n    0.026214910921554518,    -0.02545787456433622,    0.03130115808787142,\n    0.030181956124089485,    -0.007468596383103384,   -0.02664941632822464,\n    -0.03392154553755473,    -0.002211750696285066,   0.01203152961815092,\n    0.028275655941042144,    0.03543420563936187,     0.03451336989505694,\n    -0.012832543381213597,   0.015343663805873724,    0.03292056011276247,\n    0.010897694089818031,    0.026007385603330917,    -0.014289948882119357,\n    0.004321003393683187,    -0.004523427023690367,   0.009512986578939016,\n    -0.0035246145016806702,  0.02978392848535497,     0.007618747604230092,\n    0.022458332141826756,    0.019004888926790673,    -0.022708338456870956,\n    0.021107428155312278,    -0.009714357333867852,   -0.02260829103128868,\n    0.029671916063023517,    0.005529876563664556,    -1.874782433043874e-05,\n    0.004195083411544945,    -0.03369947077992399,    0.0178883584516116,\n    -0.019967523247785904,   -0.026179764282970253,   -0.022144096636443796,\n    0.002896899418120705,    -0.022827572506887786,   0.028878748361070752,\n    0.01617355973136731,     -0.0021405109470639355,  -0.00030998770988769985,\n    0.02837728288476051,     0.0067199624985384955,   -0.02115440603357411,\n    0.016002579736005496,    0.01982343957746658,     0.02491870178636788,\n    0.0012694715079325672,   0.014984554137696606,    -0.010578486843090555,\n    -0.009953145157924321,   -0.016544245449628354,   0.031766010987187,\n    -0.0067592874200434385,  -0.01951709841463918,    -0.01794436874969699,\n    0.03251124095051745,     0.021291045691027886,    0.016489636242981862,\n    -0.017106999928096767,   0.03259144084444162,     -0.009163932398968462,\n    -0.021702990603192165,   0.029697205284879718,    0.011944701376459848,\n    0.007893339530730792,    -0.001364733885792914,   -0.014562131956083618,\n    -0.027820123817434046,   0.011592391738386172,    0.01710028555334693,\n    -0.0012154749263732817,  0.015301427009749338,    -0.03410095723372906,\n    -0.0038812414158265274,  0.01989680275385952,     -0.012940524558494608,\n    -0.02329212484888945,    0.0028890055802161052,   -0.027379927582891338,\n    -0.010970284987486574,   -0.003911609961269966,   -0.02022990670935795,\n    0.02301135378808461,     0.008926064375051437,    -0.02743927608140333,\n    0.028262268891985343,    0.0329077337400508,      0.012421939480407889,\n    -0.021123985084131183,   0.033099138784285026,    0.009310709487255693,\n    -0.013540618531412005,   -0.0035222837570961702,  -0.027825511792844544,\n    -0.014938449049732254,   -0.002006703358511013,   -0.031019057951503393,\n    -0.015351989253993836,   0.025510097717286025,    0.0217105106321775,\n    0.00790475845683164,     0.009321235792721705,    -0.029560337555090497,\n    0.01912200414214467,     0.01185799949296481,     0.031006105357653285,\n    -0.004956319515148046,   0.019570303247657708,    0.029488714911331353,\n    -0.017909256254063255,   -0.013116358081313267,   0.008664636958392757,\n    -0.0019612313140257493,  0.018374371083876184,    0.03398196392183947,\n    0.026068427709374935,    -0.026772559325552645,   0.01586998308898804,\n    0.009951056908722142,    -0.028297179901951207,   0.024669708065505936,\n    -0.013711509958551527,   -0.002597232735438675,   0.01650189810591583,\n    0.012867275225786805,    0.023324686171999263,    0.005783621954285231,\n    -0.03212064314750629,    0.0038933959181432815,   -0.00736855453005103,\n    -0.01667789431268181,    -0.0268437235490381,     -0.004375816315265203,\n    -0.011997970884912825,   -0.011481569884718093,   -0.0029945696899941754,\n    0.0050446962043202105,   -0.031544277953036874,   -0.029075888582974083,\n    -0.00740025123904844,    0.027683942395244528,    -0.03438320399976036,\n    -0.007473456951970293,   0.000989392180106019,    -0.004131270378776689,\n    -0.030012568556666085,   -0.03500010605846208,    0.007984199274387616,\n    -0.009276029829186119,   0.011634930234348107,    -0.007219024136417848,\n    0.02072476953672146,     -0.006624397622746533,   0.01679821977553026,\n    0.021310769559615035,    0.03011966107667811,     0.0034260112471992277,\n    -0.009246057884801722,   0.029630044323126492,    0.010688542446049854,\n    -0.01075039433540903,    0.009681747837546462,    0.03542216208642736,\n    -0.011289434570385773,   -0.009599970402245235,   0.024403916763851806,\n    0.029701351558210805,    0.0013670473589393883,   -0.03410115313511574,\n    0.030408280919371762,    0.034554239357184664,    -0.035214370683895546,\n    0.008992222782854045,    0.03100786236143195,     0.020349236551443422,\n    -0.033264054224418915,   0.028667338278881904,    0.0271038381176988,\n    -0.008165807385529862,   0.004604023735505661,    0.018509723180544904,\n    -0.029032969508420506,   0.016708929763455543,    -0.022336392020445024,\n    -0.023574010595391326,   -0.0029574896098291587,  0.02548877974180039,\n    0.01726039529403908,     -0.028557410755197417,   -0.00045080952607154786,\n    0.011194921298040339,    -0.03220537818142479,    0.03279914128195128,\n    -0.02815057507225277,    -0.0005527927443031591,  0.006989564988635978,\n    0.013293548706195304,    0.011267943617251521,    -0.004709825191984857,\n    -0.028350756085042082,   -0.02248033184213453,    -0.012759530356098319,\n    -0.03546225208481092,    0.022176350840258888,    -0.032353868747245954,\n    -0.013137471015231961,   -0.009399937874289666,   -0.0230024297240546,\n    0.028509976847556136,    -0.02231019775011618,    0.00023951331278962825,\n    0.010224031804976837,    -0.004803126798510423,   0.029720242597168576,\n    0.0210628666852271,      0.0180180019920804,      -0.023852964892993843,\n    -0.002121950399892571,   0.023231087795864514,    -0.02090344769664346,\n    0.00845677626289196,     -0.008105872004408281,   0.009513231510011828,\n    0.012954841197788114,    0.007463296488906265,    0.03308698131443465,\n    0.010214787875558302,    0.0037564555526987515,   0.030560019765053893,\n    -0.0030325369600220204,  -0.027981981646263497,   0.0014407048725891428,\n    -0.034639985838438164,   -0.01951002886125738,    -0.03131416373321963,\n    -0.019495463532774957,   0.027595286442240668,    -0.01934444428255896,\n    -0.01046929854377267,    0.015112243631304279,    -0.011020586238266057,\n    0.032480754499308866,    -0.007637379270527013,   -0.003733058373050308,\n    -0.025162592792952115,   0.02612466204351187,     0.0017638447467066393,\n    -0.02325689919717544,    0.021976294057571833,    -0.019225829681487772,\n    -0.03383731979662325,    0.008351168808345235,    -0.023791948673737642,\n    -0.010521484286247091,   -0.02682694149470228,    -0.02610708930000761,\n    -0.012920014279981382,   -0.0015162202346584003,  -0.02323650760256748,\n    -0.0006763024262828757,  0.016583174755535095,    -0.019079146866876395,\n    0.030120576781429508,    -0.03394319747558238,    0.009553379493301158,\n    0.019139700155042048,    0.026732683649512437,    0.02195746290408993,\n    0.0026833714289004446,   -0.024021950933635405,   -0.016788727373578765,\n    0.0020831274754239404,   -0.026420745870124114,   -0.015854952504548974,\n    0.012322448651585358,    0.010548930896434414,    0.018360567183833745,\n    -0.0037294946576778565,  -0.0134412556193851,     -0.02453565321821128,\n    0.01040893204456147,     0.02628404536384803,     0.027350148701373166,\n    -8.525226528577345e-05,  -0.008073516306398956,   0.010263708248511059,\n    -0.021778963620310683,   0.023836157936084432,    0.004195565453594261,\n    0.033161622114809386,    0.0037154081180121312,   0.02402388363388368,\n    -0.0036081612538225406,  -0.0019271976673146077,  0.015746755242906797,\n    -0.0024255129078718835,  -0.023731546756218587,   0.011950984592014427,\n    -0.013492688702138449,   0.026247352616180806,    -0.026512987671722728,\n    0.00789181295309997,     0.010351837935302715,    0.024868804851000292,\n    0.029634114660484934,    -0.015582941176877235,   0.021382655426361797,\n    0.032339800388501115,    0.01844134984587745,     -0.02044179563503794,\n    -0.02370139685221544,    -0.009896291883290005,   0.024047951492287063,\n    -0.023950195196253774,   -0.002276756188046482,   0.012558182846577066,\n    0.03199736325799453,     -0.009090587528143528,   0.006687616258338532,\n    -0.003168930303575393,   -0.034946187773138675,   -0.03252599339687803,\n    0.004562797490257009,    -0.02595481255293053,    -0.027279275120579847,\n    -0.0032840712541482415,  -0.024526408520549395,   -0.018692703097127197,\n    0.02304847714639452,     0.027740220179345187,    0.01743809206456085,\n    0.01805971285915893,     0.01633018968794245,     0.026630652376915198,\n    0.011225175402720722,    -0.024627834579852948,   -0.01997264271839906,\n    -0.009052955410545007,   0.022778464420665334,    0.025738305815191945,\n    0.006343859978615648,    -0.0018951308636298014,  -0.0298251575493026,\n    0.032618551756334734,    0.0059236093787837065,   0.0004371297093765777,\n    -0.03444792758192216,    -0.014121178477760692,   0.012556634808101834,\n    0.004330196568767771,    0.019849021557935012,    -0.01405978081000732,\n    -0.02172287776720145,    -0.0235530764076237,     -0.021902894719347477,\n    -0.001997644361421318,   0.031234667592362382,    0.0018621332673934446,\n    0.02963520496739421};\n\nstatic float nn_linear_baseline_biases_dram[10][1] = {\n    0.029830838495251873,  -0.027718893800693683, 0.014915538915354814,\n    0.013144414092396091,  0.026214015226942618,  0.005715480139309234,\n    -0.016521356227486333, 0.01685057481095459,   0.007825814410188814,\n    0.031028853769378233};\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_08e106ea9e64fb26b666a763608fb67d/","title":"snRuntime/src/omp","text":""},{"location":"runtime/Files/dir_08e106ea9e64fb26b666a763608fb67d/#files","title":"Files","text":"Name snRuntime/src/omp/eu.h snRuntime/src/omp/interface.h snRuntime/src/omp/kmp.h snRuntime/src/omp/omp.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_1b87772ecb6338d255491e73d109d92a/","title":"snRuntime/vendor","text":""},{"location":"runtime/Files/dir_1b87772ecb6338d255491e73d109d92a/#directories","title":"Directories","text":"Name snRuntime/vendor/printf snRuntime/vendor/riscv-opcodes <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_21729c869193a00371717b990790d637/","title":"snRuntime/api/omp","text":""},{"location":"runtime/Files/dir_21729c869193a00371717b990790d637/#files","title":"Files","text":"Name snRuntime/api/omp/eu_decls.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_44cec6e3ea30e076b9313c4641539d9f/","title":"benchmark","text":""},{"location":"runtime/Files/dir_44cec6e3ea30e076b9313c4641539d9f/#directories","title":"Directories","text":"Name benchmark/include benchmark/src <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_5b32b0c8d196e0bee0bc7bd37f53bc55/","title":"benchmark/src","text":""},{"location":"runtime/Files/dir_5b32b0c8d196e0bee0bc7bd37f53bc55/#directories","title":"Directories","text":"Name benchmark/src/matmul <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_5f735e483190b1e987f01bac27340d4c/","title":"applications/src/kernels","text":""},{"location":"runtime/Files/dir_5f735e483190b1e987f01bac27340d4c/#files","title":"Files","text":"Name applications/src/kernels/batchnorm.h applications/src/kernels/conv2d.h applications/src/kernels/gemm.h applications/src/kernels/maxpool.h applications/src/kernels/nnlinear_baseline.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_65d9ac0513258746857e829de6bdcde3/","title":"applications/src/utils","text":""},{"location":"runtime/Files/dir_65d9ac0513258746857e829de6bdcde3/#files","title":"Files","text":"Name applications/src/utils/utils.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_687df1e3e4d8e7c59c4585f2d14d078b/","title":"snRuntime","text":""},{"location":"runtime/Files/dir_687df1e3e4d8e7c59c4585f2d14d078b/#directories","title":"Directories","text":"Name snRuntime/api snRuntime/src snRuntime/vendor <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_778b26f90665cd07894fddcdc79f6d9b/","title":"applications/data","text":""},{"location":"runtime/Files/dir_778b26f90665cd07894fddcdc79f6d9b/#files","title":"Files","text":"Name applications/data/data_fp32_nnlinear.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_9d3f15c1a63d4b35f6c82fad85118daa/","title":"snRuntime/api","text":""},{"location":"runtime/Files/dir_9d3f15c1a63d4b35f6c82fad85118daa/#directories","title":"Directories","text":"Name snRuntime/api/omp"},{"location":"runtime/Files/dir_9d3f15c1a63d4b35f6c82fad85118daa/#files","title":"Files","text":"Name snRuntime/api/alloc_decls.h snRuntime/api/cls_decls.h snRuntime/api/cluster_interrupt_decls.h snRuntime/api/global_interrupt_decls.h snRuntime/api/memory_decls.h snRuntime/api/riscv_decls.h snRuntime/api/start_decls.h snRuntime/api/sync_decls.h snRuntime/api/team_decls.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_a04768fb9c5f69508e8162509da4a728/","title":"snRuntime/src","text":""},{"location":"runtime/Files/dir_a04768fb9c5f69508e8162509da4a728/#directories","title":"Directories","text":"Name snRuntime/src/omp"},{"location":"runtime/Files/dir_a04768fb9c5f69508e8162509da4a728/#files","title":"Files","text":"Name snRuntime/src/alloc.h snRuntime/src/cls.h snRuntime/src/cluster_interrupts.h snRuntime/src/dm.h snRuntime/src/dma.h snRuntime/src/global_interrupts.h snRuntime/src/perf_cnt.h snRuntime/src/printf.h snRuntime/src/riscv.h snRuntime/src/ssr.h snRuntime/src/sync.h snRuntime/src/team.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_a43e155b6864a88b68593d32d6762148/","title":"snRuntime/vendor/riscv-opcodes","text":""},{"location":"runtime/Files/dir_a43e155b6864a88b68593d32d6762148/#files","title":"Files","text":"Name snRuntime/vendor/riscv-opcodes/encoding.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_a6e4fee11f07c3b70486e88fe92cbbdc/","title":"applications","text":""},{"location":"runtime/Files/dir_a6e4fee11f07c3b70486e88fe92cbbdc/#directories","title":"Directories","text":"Name applications/data applications/include applications/src <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_b2dcf2a840f0c8d24418eba95d1b8c14/","title":"snRuntime/vendor/printf","text":""},{"location":"runtime/Files/dir_b2dcf2a840f0c8d24418eba95d1b8c14/#files","title":"Files","text":"Name snRuntime/vendor/printf/printf.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_b48e99e00c13f140bbfb4c281bca5194/","title":"applications/include","text":""},{"location":"runtime/Files/dir_b48e99e00c13f140bbfb4c281bca5194/#files","title":"Files","text":"Name applications/include/layer.h applications/include/network.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_c9be9173870f327345d33414c30b89d4/","title":"benchmark/include","text":""},{"location":"runtime/Files/dir_c9be9173870f327345d33414c30b89d4/#files","title":"Files","text":"Name benchmark/include/benchmark.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_d8614481a845e6b5182a8bafa4362c3a/","title":"applications/src/layers","text":""},{"location":"runtime/Files/dir_d8614481a845e6b5182a8bafa4362c3a/#files","title":"Files","text":"Name applications/src/layers/batchnorm_layer.h applications/src/layers/conv2d_layer.h applications/src/layers/maxpool_layer.h applications/src/layers/nnlinear_backend_baseline.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_dc58b1af80798a6a36e5f5ae77c7a4ef/","title":"applications/src","text":""},{"location":"runtime/Files/dir_dc58b1af80798a6a36e5f5ae77c7a4ef/#directories","title":"Directories","text":"Name applications/src/kernels applications/src/layers applications/src/utils <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dir_e8f13bae39bfe8cd0afeb13d1c0e76c2/","title":"benchmark/src/matmul","text":""},{"location":"runtime/Files/dir_e8f13bae39bfe8cd0afeb13d1c0e76c2/#files","title":"Files","text":"Name benchmark/src/matmul/matmul.h <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dm_8h/","title":"snRuntime/src/dm.h","text":""},{"location":"runtime/Files/dm_8h/#classes","title":"Classes","text":"Name struct dm_task_t struct dm_t"},{"location":"runtime/Files/dm_8h/#types","title":"Types","text":"Name enum en_stat { STAT_WAIT_IDLE = 1, STAT_EXIT = 2, STAT_READY = 3} typedef enum en_stat en_stat_t"},{"location":"runtime/Files/dm_8h/#functions","title":"Functions","text":"Name void wfi_dm(uint32_t cluster_core_idx) void wake_dm(void ) void dm_init(void )Init the data mover and load a pointer to the DM struct in to TLS. Needs to be called by the DM itself and all harts that want to use the dm functions. void dm_main(void )data mover main function void dm_exit(void )Send the data mover to exit() void dm_memcpy_async(void * dest, const void * src, size_t n)Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. void dm_memcpy2d_async(uint64_t src, uint64_t dst, uint32_t size, uint32_t sstrd, uint32_t dstrd, uint32_t nreps, uint32_t cfg)Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. void dm_start(void )Trigger the start of queued transfers and exit immediately. void dm_wait(void )Wait for all DMA transfers to complete. void dm_wait_ready(void )Wait for the DM core to be ready."},{"location":"runtime/Files/dm_8h/#attributes","title":"Attributes","text":"Name __thread volatile dm_t * dm_p Pointer to the data mover struct in TCDM per thread for faster access. volatile dm_t *volatile dm_p_global Pointer to where the DM struct in TCDM is located."},{"location":"runtime/Files/dm_8h/#defines","title":"Defines","text":"Name DM_TASK_QUEUE_SIZE Define DM_USE_GLOBAL_CLINT to use the cluster-shared CLINT based SW interrupt system for synchronization. If not defined, the harts use the cluster-local CLINT to syncrhonize which is faster but only works for cluster-local synchronization which is sufficient at the moment since the OpenMP runtime is single cluster only. _dm_mtx_lock() _dm_mtx_release() DM_STATUS_COMPLETE_ID DM_STATUS_NEXT_ID DM_STATUS_BUSY DM_STATUS_WOULD_BLOCK DM_PRINTF(d, ...)"},{"location":"runtime/Files/dm_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/dm_8h/#enum-en_stat","title":"enum en_stat","text":"Enumerator Value Description STAT_WAIT_IDLE 1 STAT_EXIT 2 STAT_READY 3"},{"location":"runtime/Files/dm_8h/#typedef-en_stat_t","title":"typedef en_stat_t","text":"<pre><code>typedef enum en_stat en_stat_t;\n</code></pre>"},{"location":"runtime/Files/dm_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/dm_8h/#function-wfi_dm","title":"function wfi_dm","text":"<pre><code>inline void wfi_dm(\n    uint32_t cluster_core_idx\n)\n</code></pre>"},{"location":"runtime/Files/dm_8h/#function-wake_dm","title":"function wake_dm","text":"<pre><code>inline void wake_dm(\n    void \n)\n</code></pre>"},{"location":"runtime/Files/dm_8h/#function-dm_init","title":"function dm_init","text":"<pre><code>inline void dm_init(\n    void \n)\n</code></pre> <p>Init the data mover and load a pointer to the DM struct in to TLS. Needs to be called by the DM itself and all harts that want to use the dm functions. </p>"},{"location":"runtime/Files/dm_8h/#function-dm_main","title":"function dm_main","text":"<pre><code>inline void dm_main(\n    void \n)\n</code></pre> <p>data mover main function </p> <p>New transaction to issue?</p> <p>any STAT request pending?</p>"},{"location":"runtime/Files/dm_8h/#function-dm_exit","title":"function dm_exit","text":"<pre><code>inline void dm_exit(\n    void \n)\n</code></pre> <p>Send the data mover to exit() </p>"},{"location":"runtime/Files/dm_8h/#function-dm_memcpy_async","title":"function dm_memcpy_async","text":"<pre><code>inline void dm_memcpy_async(\n    void * dest,\n    const void * src,\n    size_t n\n)\n</code></pre> <p>Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. </p> <p>Parameters: </p> <ul> <li>dest destination pointer </li> <li>src source pointer </li> <li>n number of bytes to copy </li> </ul> <p>Return: transfer ID </p> <p>block only if DM queue is full</p>"},{"location":"runtime/Files/dm_8h/#function-dm_memcpy2d_async","title":"function dm_memcpy2d_async","text":"<pre><code>inline void dm_memcpy2d_async(\n    uint64_t src,\n    uint64_t dst,\n    uint32_t size,\n    uint32_t sstrd,\n    uint32_t dstrd,\n    uint32_t nreps,\n    uint32_t cfg\n)\n</code></pre> <p>Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. </p> <p>Parameters: </p> <ul> <li>src source address </li> <li>dst destination address </li> <li>size size in inner dimension </li> <li>sstrd outer source stride </li> <li>dstrd outer destination stride </li> <li>nreps number of repetitions in outer dimension </li> <li>cfg DMA configuration </li> </ul> <p>block only if DM queue is full</p>"},{"location":"runtime/Files/dm_8h/#function-dm_start","title":"function dm_start","text":"<pre><code>inline void dm_start(\n    void \n)\n</code></pre> <p>Trigger the start of queued transfers and exit immediately. </p>"},{"location":"runtime/Files/dm_8h/#function-dm_wait","title":"function dm_wait","text":"<pre><code>inline void dm_wait(\n    void \n)\n</code></pre> <p>Wait for all DMA transfers to complete. </p>"},{"location":"runtime/Files/dm_8h/#function-dm_wait_ready","title":"function dm_wait_ready","text":"<pre><code>inline void dm_wait_ready(\n    void \n)\n</code></pre> <p>Wait for the DM core to be ready. </p>"},{"location":"runtime/Files/dm_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/dm_8h/#variable-dm_p","title":"variable dm_p","text":"<pre><code>__thread volatile dm_t * dm_p;\n</code></pre> <p>Pointer to the data mover struct in TCDM per thread for faster access. </p>"},{"location":"runtime/Files/dm_8h/#variable-dm_p_global","title":"variable dm_p_global","text":"<pre><code>volatile dm_t *volatile dm_p_global;\n</code></pre> <p>Pointer to where the DM struct in TCDM is located. </p>"},{"location":"runtime/Files/dm_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/dm_8h/#define-dm_task_queue_size","title":"define DM_TASK_QUEUE_SIZE","text":"<pre><code>#define DM_TASK_QUEUE_SIZE 4\n</code></pre> <p>Define DM_USE_GLOBAL_CLINT to use the cluster-shared CLINT based SW interrupt system for synchronization. If not defined, the harts use the cluster-local CLINT to syncrhonize which is faster but only works for cluster-local synchronization which is sufficient at the moment since the OpenMP runtime is single cluster only. </p> <p>Number of outstanding transactions to buffer. Each requires sizeof(dm_task_t) bytes </p>"},{"location":"runtime/Files/dm_8h/#define-_dm_mtx_lock","title":"define _dm_mtx_lock","text":"<pre><code>#define _dm_mtx_lock(\n\n)\nsnrt_mutex_acquire(&amp;dm_p-&gt;mutex)\n</code></pre>"},{"location":"runtime/Files/dm_8h/#define-_dm_mtx_release","title":"define _dm_mtx_release","text":"<pre><code>#define _dm_mtx_release(\n\n)\nsnrt_mutex_release(&amp;dm_p-&gt;mutex)\n</code></pre>"},{"location":"runtime/Files/dm_8h/#define-dm_status_complete_id","title":"define DM_STATUS_COMPLETE_ID","text":"<pre><code>#define DM_STATUS_COMPLETE_ID 0\n</code></pre> <p>Returns of the dm status call </p>"},{"location":"runtime/Files/dm_8h/#define-dm_status_next_id","title":"define DM_STATUS_NEXT_ID","text":"<pre><code>#define DM_STATUS_NEXT_ID 1\n</code></pre>"},{"location":"runtime/Files/dm_8h/#define-dm_status_busy","title":"define DM_STATUS_BUSY","text":"<pre><code>#define DM_STATUS_BUSY 2\n</code></pre>"},{"location":"runtime/Files/dm_8h/#define-dm_status_would_block","title":"define DM_STATUS_WOULD_BLOCK","text":"<pre><code>#define DM_STATUS_WOULD_BLOCK 3\n</code></pre>"},{"location":"runtime/Files/dm_8h/#define-dm_printf","title":"define DM_PRINTF","text":"<pre><code>#define DM_PRINTF(\n    d,\n    ...\n)\n</code></pre>"},{"location":"runtime/Files/dm_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#ifndef DM_H\n#define DM_H\n\n//================================================================================\n// Settings\n//================================================================================\n\n// #define DM_USE_GLOBAL_CLINT\n\n#define DM_TASK_QUEUE_SIZE 4\n\n//================================================================================\n// Macros\n//================================================================================\n\n#define _dm_mtx_lock() snrt_mutex_acquire(&amp;dm_p-&gt;mutex)\n#define _dm_mtx_release() snrt_mutex_release(&amp;dm_p-&gt;mutex)\n\n#define DM_STATUS_COMPLETE_ID 0\n#define DM_STATUS_NEXT_ID 1\n#define DM_STATUS_BUSY 2\n#define DM_STATUS_WOULD_BLOCK 3\n\n//================================================================================\n// Debug\n//================================================================================\n\n// #define DM_DEBUG_LEVEL 100\n\n#ifdef DM_DEBUG_LEVEL\n#include \"printf.h\"\n#define _DM_PRINTF(...)             \\\n    if (1) {                        \\\n        printf(\"[dm] \"__VA_ARGS__); \\\n    }\n#define DM_PRINTF(d, ...)        \\\n    if (DM_DEBUG_LEVEL &gt;= d) {   \\\n        _DM_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define DM_PRINTF(d, ...)\n#endif\n\n//================================================================================\n// Types\n//================================================================================\n\ntypedef struct {\n    uint64_t src;\n    uint64_t dst;\n    uint32_t size;\n    uint32_t sstrd;\n    uint32_t dstrd;\n    uint32_t nreps;\n    uint32_t cfg;\n    uint32_t twod;\n} dm_task_t;\n\n// used for ultra-fine grained communication\n// stat_q can be used to request a command, 0 is no command\n// the response is put into stat_p and is valid iff stat_pvalid is non-zero\ntypedef enum en_stat {\n    // commands the DM core to wait until all transfers are complete\n    STAT_WAIT_IDLE = 1,\n    // abort and exit\n    STAT_EXIT = 2,\n    // poll if DM is ready\n    STAT_READY = 3,\n} en_stat_t;\n\ntypedef struct {\n    dm_task_t queue[DM_TASK_QUEUE_SIZE];\n    uint32_t queue_back;\n    uint32_t queue_front;\n    volatile uint32_t queue_fill;\n    volatile uint32_t mutex;\n    volatile en_stat_t stat_q;\n    volatile uint32_t stat_p;\n    volatile uint32_t stat_pvalid;\n    volatile uint32_t dm_wfi;\n} dm_t;\n\n//================================================================================\n// Data\n//================================================================================\n\nextern __thread volatile dm_t *dm_p;\nextern volatile dm_t *volatile dm_p_global;\n\n//================================================================================\n// Functions\n//================================================================================\n\n#ifdef DM_USE_GLOBAL_CLINT\ninline void wfi_dm(uint32_t cluster_core_idx) {\n    (void)cluster_core_idx;\n    snrt_int_sw_poll();\n}\ninline void wake_dm(void) {\n    uint32_t basehart = snrt_cluster_core_base_hartid();\n    snrt_int_sw_set(basehart + snrt_cluster_dm_core_idx());\n}\n#else\ninline void wfi_dm(uint32_t cluster_core_idx) {\n    __atomic_add_fetch(&amp;dm_p-&gt;dm_wfi, 1, __ATOMIC_RELAXED);\n    snrt_wfi();\n    snrt_int_cluster_clr(1 &lt;&lt; cluster_core_idx);\n    __atomic_add_fetch(&amp;dm_p-&gt;dm_wfi, -1, __ATOMIC_RELAXED);\n}\ninline void wake_dm(void) {\n    // wait for DM to sleep before sending wakeup\n    while (!__atomic_load_n(&amp;dm_p-&gt;dm_wfi, __ATOMIC_RELAXED))\n        ;\n    snrt_int_cluster_set(1 &lt;&lt; snrt_cluster_compute_core_num());\n}\n#endif  // #ifdef DM_USE_GLOBAL_CLINT\n\ninline void dm_init(void) {\n    // create a data mover instance\n    if (snrt_is_dm_core()) {\n#ifdef DM_USE_GLOBAL_CLINT\n        snrt_interrupt_enable(IRQ_M_SOFT);\n#else\n        snrt_interrupt_enable(IRQ_M_CLUSTER);\n#endif\n        dm_p = (dm_t *)snrt_l1alloc(sizeof(dm_t));\n        snrt_memset((void *)dm_p, 0, sizeof(dm_t));\n        dm_p_global = dm_p;\n    } else {\n        while (!dm_p_global)\n            ;\n        dm_p = dm_p_global;\n    }\n}\n\ninline void dm_main(void) {\n    volatile dm_task_t *t;\n    uint32_t do_exit = 0;\n    uint32_t cluster_core_idx = snrt_cluster_core_idx();\n\n    DM_PRINTF(10, \"enter main\\n\");\n\n    while (!do_exit) {\n        if (dm_p-&gt;queue_fill) {\n            // wait until DMA is ready\n            while (__builtin_sdma_stat(DM_STATUS_WOULD_BLOCK))\n                ;\n\n            t = &amp;dm_p-&gt;queue[dm_p-&gt;queue_back];\n\n            if (t-&gt;twod) {\n                DM_PRINTF(10, \"start twod\\n\");\n                __builtin_sdma_start_twod(t-&gt;src, t-&gt;dst, t-&gt;size, t-&gt;sstrd,\n                                          t-&gt;dstrd, t-&gt;nreps, t-&gt;cfg);\n            } else {\n                DM_PRINTF(10, \"start oned\\n\");\n                __builtin_sdma_start_oned(t-&gt;src, t-&gt;dst, t-&gt;size, t-&gt;cfg);\n            }\n\n            // bump\n            dm_p-&gt;queue_back = (dm_p-&gt;queue_back + 1) % DM_TASK_QUEUE_SIZE;\n            __atomic_add_fetch(&amp;dm_p-&gt;queue_fill, -1, __ATOMIC_RELAXED);\n        }\n\n        if (dm_p-&gt;stat_q) {\n            switch (dm_p-&gt;stat_q) {\n                case STAT_WAIT_IDLE:\n                    // check status and set pvalid if DMA is idle and clear\n                    // request\n                    if (__builtin_sdma_stat(DM_STATUS_BUSY) == 0) {\n                        DM_PRINTF(50, \"idle\\n\");\n                        dm_p-&gt;stat_pvalid = 1;\n                        dm_p-&gt;stat_q = 0;\n                    }\n                    break;\n                case STAT_EXIT:\n                    do_exit = 1;\n                    break;\n                case STAT_READY:\n                    DM_PRINTF(50, \"ready\\n\");\n                    dm_p-&gt;stat_pvalid = 1;\n                    dm_p-&gt;stat_q = 0;\n                    break;\n            }\n        }\n\n        // sleep if queue is empty and no stats pending\n        if (!dm_p-&gt;queue_fill &amp;&amp; !dm_p-&gt;stat_q) {\n            wfi_dm(cluster_core_idx);\n        }\n    }\n    DM_PRINTF(10, \"dm: exit\\n\");\n#ifdef DM_USE_GLOBAL_CLINT\n    snrt_interrupt_disable(IRQ_M_SOFT);\n#else\n    snrt_interrupt_disable(IRQ_M_CLUSTER);\n#endif\n    return;\n}\n\ninline void dm_exit(void) {\n    dm_p-&gt;stat_q = STAT_EXIT;\n    // signal data mover\n    wake_dm();\n}\n\ninline void dm_memcpy_async(void *dest, const void *src, size_t n) {\n    uint32_t s;\n    volatile dm_task_t *t;\n\n    DM_PRINTF(10, \"dm_memcpy_async %#x -&gt; %#x size %d\\n\", src, dest,\n              (uint32_t)n);\n\n    // poll queue size\n    do {\n        s = __atomic_load_n(&amp;dm_p-&gt;queue_fill, __ATOMIC_RELAXED);\n    } while (s &gt;= DM_TASK_QUEUE_SIZE);\n    _dm_mtx_lock();\n\n    // insert\n    t = &amp;dm_p-&gt;queue[dm_p-&gt;queue_front];\n    t-&gt;src = (uint64_t)src;\n    t-&gt;dst = (uint64_t)dest;\n    t-&gt;size = (uint32_t)n;\n    t-&gt;twod = 0;\n    t-&gt;cfg = 0;\n\n    // bump\n    __atomic_add_fetch(&amp;dm_p-&gt;queue_fill, 1, __ATOMIC_RELAXED);\n    dm_p-&gt;queue_front = (dm_p-&gt;queue_front + 1) % DM_TASK_QUEUE_SIZE;\n\n    _dm_mtx_release();\n}\n\ninline void dm_memcpy2d_async(uint64_t src, uint64_t dst, uint32_t size,\n                              uint32_t sstrd, uint32_t dstrd, uint32_t nreps,\n                              uint32_t cfg) {\n    uint32_t s;\n    volatile dm_task_t *t;\n\n    DM_PRINTF(10, \"dm_memcpy2d_async %#x -&gt; %#x size %d\\n\", src, dst,\n              (uint32_t)size);\n\n    // poll queue size\n    do {\n        s = __atomic_load_n(&amp;dm_p-&gt;queue_fill, __ATOMIC_RELAXED);\n    } while (s &gt;= DM_TASK_QUEUE_SIZE);\n    _dm_mtx_lock();\n\n    // insert\n    t = &amp;dm_p-&gt;queue[dm_p-&gt;queue_front];\n    t-&gt;src = src;\n    t-&gt;dst = dst;\n    t-&gt;size = size;\n    t-&gt;sstrd = sstrd;\n    t-&gt;dstrd = dstrd;\n    t-&gt;nreps = nreps;\n    t-&gt;twod = 1;\n    t-&gt;cfg = cfg;\n\n    // bump\n    __atomic_add_fetch(&amp;dm_p-&gt;queue_fill, 1, __ATOMIC_RELAXED);\n    dm_p-&gt;queue_front = (dm_p-&gt;queue_front + 1) % DM_TASK_QUEUE_SIZE;\n\n    _dm_mtx_release();\n}\n\ninline void dm_start(void) { wake_dm(); }\n\ninline void dm_wait(void) {\n    uint32_t s;\n\n    // signal data mover\n    wake_dm();\n\n    // first, wait for the dm queue to be empty and no request be pending\n    do {\n        s = __atomic_load_n(&amp;dm_p-&gt;queue_fill, __ATOMIC_RELAXED);\n    } while (s != 0);\n    while (dm_p-&gt;stat_q)\n        ;\n\n    // then, issue the STAT_WAIT_IDLE request so the DM core polls for the DMA\n    // to be idle\n    _dm_mtx_lock();\n    dm_p-&gt;stat_pvalid = 0;\n    // this is the request\n    dm_p-&gt;stat_q = STAT_WAIT_IDLE;\n    // signal data mover\n    wake_dm();\n    // whenever stat_pvalid is non-zero, the DMA has completed all transfers\n    while (!dm_p-&gt;stat_pvalid)\n        ;\n    _dm_mtx_release();\n}\n\ninline void dm_wait_ready(void) {\n    _dm_mtx_lock();\n    dm_p-&gt;stat_pvalid = 0;\n    dm_p-&gt;stat_q = STAT_READY;\n    wake_dm();\n    while (!dm_p-&gt;stat_pvalid)\n        ;\n    _dm_mtx_release();\n}\n\n#endif /* DM_H */\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/dma_8h/","title":"snRuntime/src/dma.h","text":""},{"location":"runtime/Files/dma_8h/#types","title":"Types","text":"Name typedef uint32_t snrt_dma_txid_t A DMA transfer identifier."},{"location":"runtime/Files/dma_8h/#functions","title":"Functions","text":"Name snrt_dma_txid_t snrt_dma_start_1d_wideptr(uint64_t dst, uint64_t src, size_t size)Initiate an asynchronous 1D DMA transfer with wide 64-bit pointers. snrt_dma_txid_t snrt_dma_start_1d(void * dst, const void * src, size_t size)Initiate an asynchronous 1D DMA transfer. snrt_dma_txid_t snrt_dma_start_2d_wideptr(uint64_t dst, uint64_t src, size_t size, size_t dst_stride, size_t src_stride, size_t repeat)Initiate an asynchronous 2D DMA transfer with wide 64-bit pointers. snrt_dma_txid_t snrt_dma_start_2d(void * dst, const void * src, size_t size, size_t dst_stride, size_t src_stride, size_t repeat)Initiate an asynchronous 2D DMA transfer. void snrt_dma_wait(snrt_dma_txid_t tid)Block until a transfer finishes. void snrt_dma_wait_all()Block until all operation on the DMA ceases."},{"location":"runtime/Files/dma_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/dma_8h/#typedef-snrt_dma_txid_t","title":"typedef snrt_dma_txid_t","text":"<pre><code>typedef uint32_t snrt_dma_txid_t;\n</code></pre> <p>A DMA transfer identifier. </p>"},{"location":"runtime/Files/dma_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/dma_8h/#function-snrt_dma_start_1d_wideptr","title":"function snrt_dma_start_1d_wideptr","text":"<pre><code>inline snrt_dma_txid_t snrt_dma_start_1d_wideptr(\n    uint64_t dst,\n    uint64_t src,\n    size_t size\n)\n</code></pre> <p>Initiate an asynchronous 1D DMA transfer with wide 64-bit pointers. </p>"},{"location":"runtime/Files/dma_8h/#function-snrt_dma_start_1d","title":"function snrt_dma_start_1d","text":"<pre><code>inline snrt_dma_txid_t snrt_dma_start_1d(\n    void * dst,\n    const void * src,\n    size_t size\n)\n</code></pre> <p>Initiate an asynchronous 1D DMA transfer. </p>"},{"location":"runtime/Files/dma_8h/#function-snrt_dma_start_2d_wideptr","title":"function snrt_dma_start_2d_wideptr","text":"<pre><code>inline snrt_dma_txid_t snrt_dma_start_2d_wideptr(\n    uint64_t dst,\n    uint64_t src,\n    size_t size,\n    size_t dst_stride,\n    size_t src_stride,\n    size_t repeat\n)\n</code></pre> <p>Initiate an asynchronous 2D DMA transfer with wide 64-bit pointers. </p>"},{"location":"runtime/Files/dma_8h/#function-snrt_dma_start_2d","title":"function snrt_dma_start_2d","text":"<pre><code>inline snrt_dma_txid_t snrt_dma_start_2d(\n    void * dst,\n    const void * src,\n    size_t size,\n    size_t dst_stride,\n    size_t src_stride,\n    size_t repeat\n)\n</code></pre> <p>Initiate an asynchronous 2D DMA transfer. </p>"},{"location":"runtime/Files/dma_8h/#function-snrt_dma_wait","title":"function snrt_dma_wait","text":"<pre><code>inline void snrt_dma_wait(\n    snrt_dma_txid_t tid\n)\n</code></pre> <p>Block until a transfer finishes. </p>"},{"location":"runtime/Files/dma_8h/#function-snrt_dma_wait_all","title":"function snrt_dma_wait_all","text":"<pre><code>inline void snrt_dma_wait_all()\n</code></pre> <p>Block until all operation on the DMA ceases. </p>"},{"location":"runtime/Files/dma_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ntypedef uint32_t snrt_dma_txid_t;\n\ninline snrt_dma_txid_t snrt_dma_start_1d_wideptr(uint64_t dst, uint64_t src,\n                                                 size_t size) {\n    register uint32_t reg_dst_low asm(\"a0\") = dst &gt;&gt; 0;    // 10\n    register uint32_t reg_dst_high asm(\"a1\") = dst &gt;&gt; 32;  // 11\n    register uint32_t reg_src_low asm(\"a2\") = src &gt;&gt; 0;    // 12\n    register uint32_t reg_src_high asm(\"a3\") = src &gt;&gt; 32;  // 13\n    register uint32_t reg_size asm(\"a4\") = size;           // 14\n\n    // dmsrc a2, a3\n    asm volatile(\n        \".word (0b0000000 &lt;&lt; 25) | \\\n               (     (13) &lt;&lt; 20) | \\\n               (     (12) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\" ::\"r\"(reg_src_high),\n        \"r\"(reg_src_low));\n\n    // dmdst a0, a1\n    asm volatile(\n        \".word (0b0000001 &lt;&lt; 25) | \\\n               (     (11) &lt;&lt; 20) | \\\n               (     (10) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\" ::\"r\"(reg_dst_high),\n        \"r\"(reg_dst_low));\n\n    // dmcpyi a0, a4, 0b00\n    register uint32_t reg_txid asm(\"a0\");  // 10\n    asm volatile(\n        \".word (0b0000010 &lt;&lt; 25) | \\\n               (  0b00000 &lt;&lt; 20) | \\\n               (     (14) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (     (10) &lt;&lt;  7) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\"\n        : \"=r\"(reg_txid)\n        : \"r\"(reg_size));\n\n    return reg_txid;\n}\n\ninline snrt_dma_txid_t snrt_dma_start_1d(void *dst, const void *src,\n                                         size_t size) {\n    return snrt_dma_start_1d_wideptr((size_t)dst, (size_t)src, size);\n}\n\ninline snrt_dma_txid_t snrt_dma_start_2d_wideptr(uint64_t dst, uint64_t src,\n                                                 size_t size, size_t dst_stride,\n                                                 size_t src_stride,\n                                                 size_t repeat) {\n    register uint32_t reg_dst_low asm(\"a0\") = dst &gt;&gt; 0;       // 10\n    register uint32_t reg_dst_high asm(\"a1\") = dst &gt;&gt; 32;     // 11\n    register uint32_t reg_src_low asm(\"a2\") = src &gt;&gt; 0;       // 12\n    register uint32_t reg_src_high asm(\"a3\") = src &gt;&gt; 32;     // 13\n    register uint32_t reg_size asm(\"a4\") = size;              // 14\n    register uint32_t reg_dst_stride asm(\"a5\") = dst_stride;  // 15\n    register uint32_t reg_src_stride asm(\"a6\") = src_stride;  // 16\n    register uint32_t reg_repeat asm(\"a7\") = repeat;          // 17\n\n    // dmsrc a0, a1\n    asm volatile(\n        \".word (0b0000000 &lt;&lt; 25) | \\\n               (     (13) &lt;&lt; 20) | \\\n               (     (12) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\" ::\"r\"(reg_src_high),\n        \"r\"(reg_src_low));\n\n    // dmdst a0, a1\n    asm volatile(\n        \".word (0b0000001 &lt;&lt; 25) | \\\n               (     (11) &lt;&lt; 20) | \\\n               (     (10) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\" ::\"r\"(reg_dst_high),\n        \"r\"(reg_dst_low));\n\n    // dmstr a5, a6\n    asm volatile(\n        \".word (0b0000110 &lt;&lt; 25) | \\\n               (     (15) &lt;&lt; 20) | \\\n               (     (16) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\"\n        :\n        : \"r\"(reg_dst_stride), \"r\"(reg_src_stride));\n\n    // dmrep a7\n    asm volatile(\n        \".word (0b0000111 &lt;&lt; 25) | \\\n               (     (17) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\"\n        :\n        : \"r\"(reg_repeat));\n\n    // dmcpyi a0, a4, 0b10\n    register uint32_t reg_txid asm(\"a0\");  // 10\n    asm volatile(\n        \".word (0b0000010 &lt;&lt; 25) | \\\n               (  0b00010 &lt;&lt; 20) | \\\n               (     (14) &lt;&lt; 15) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (     (10) &lt;&lt;  7) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\"\n        : \"=r\"(reg_txid)\n        : \"r\"(reg_size));\n\n    return reg_txid;\n}\n\ninline snrt_dma_txid_t snrt_dma_start_2d(void *dst, const void *src,\n                                         size_t size, size_t dst_stride,\n                                         size_t src_stride, size_t repeat) {\n    return snrt_dma_start_2d_wideptr((size_t)dst, (size_t)src, size, dst_stride,\n                                     src_stride, repeat);\n}\n\ninline void snrt_dma_wait(snrt_dma_txid_t tid) {\n    // dmstati t0, 0  # 2=status.completed_id\n    asm volatile(\n        \"1: \\n\"\n        \".word (0b0000100 &lt;&lt; 25) | \\\n               (  0b00000 &lt;&lt; 20) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (      (5) &lt;&lt;  7) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\"\n        \"sub t0, t0, %0 \\n\"\n        \"blez t0, 1b \\n\" ::\"r\"(tid)\n        : \"t0\");\n}\n\ninline void snrt_dma_wait_all() {\n    // dmstati t0, 2  # 2=status.busy\n    asm volatile(\n        \"1: \\n\"\n        \".word (0b0000100 &lt;&lt; 25) | \\\n               (  0b00010 &lt;&lt; 20) | \\\n               (    0b000 &lt;&lt; 12) | \\\n               (      (5) &lt;&lt;  7) | \\\n               (0b0101011 &lt;&lt;  0)   \\n\"\n        \"bne t0, zero, 1b \\n\" ::\n            : \"t0\");\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/encoding_8h/","title":"snRuntime/vendor/riscv-opcodes/encoding.h","text":""},{"location":"runtime/Files/encoding_8h/#defines","title":"Defines","text":"Name MSTATUS_UIE MSTATUS_SIE MSTATUS_HIE MSTATUS_MIE MSTATUS_UPIE MSTATUS_SPIE MSTATUS_UBE MSTATUS_MPIE MSTATUS_SPP MSTATUS_VS MSTATUS_MPP MSTATUS_FS MSTATUS_XS MSTATUS_MPRV MSTATUS_SUM MSTATUS_MXR MSTATUS_TVM MSTATUS_TW MSTATUS_TSR MSTATUS32_SD MSTATUS_UXL MSTATUS_SXL MSTATUS_SBE MSTATUS_MBE MSTATUS_GVA MSTATUS_MPV MSTATUS64_SD MSTATUSH_SBE MSTATUSH_MBE SSTATUS_UIE SSTATUS_SIE SSTATUS_UPIE SSTATUS_SPIE SSTATUS_UBE SSTATUS_SPP SSTATUS_VS SSTATUS_FS SSTATUS_XS SSTATUS_SUM SSTATUS_MXR SSTATUS32_SD SSTATUS_UXL SSTATUS64_SD SSTATUS_VS_MASK HSTATUS_VSXL HSTATUS_VTSR HSTATUS_VTW HSTATUS_VTVM HSTATUS_VGEIN HSTATUS_HU HSTATUS_SPVP HSTATUS_SPV HSTATUS_GVA HSTATUS_VSBE USTATUS_UIE USTATUS_UPIE DCSR_XDEBUGVER DCSR_NDRESET DCSR_FULLRESET DCSR_EBREAKM DCSR_EBREAKH DCSR_EBREAKS DCSR_EBREAKU DCSR_STOPCYCLE DCSR_STOPTIME DCSR_CAUSE DCSR_DEBUGINT DCSR_HALT DCSR_STEP DCSR_PRV DCSR_CAUSE_NONE DCSR_CAUSE_SWBP DCSR_CAUSE_HWBP DCSR_CAUSE_DEBUGINT DCSR_CAUSE_STEP DCSR_CAUSE_HALT DCSR_CAUSE_GROUP MCONTROL_TYPE(xlen) MCONTROL_DMODE(xlen) MCONTROL_MASKMAX(xlen) MCONTROL_SELECT MCONTROL_TIMING MCONTROL_ACTION MCONTROL_CHAIN MCONTROL_MATCH MCONTROL_M MCONTROL_H MCONTROL_S MCONTROL_U MCONTROL_EXECUTE MCONTROL_STORE MCONTROL_LOAD MCONTROL_TYPE_NONE MCONTROL_TYPE_MATCH MCONTROL_ACTION_DEBUG_EXCEPTION MCONTROL_ACTION_DEBUG_MODE MCONTROL_ACTION_TRACE_START MCONTROL_ACTION_TRACE_STOP MCONTROL_ACTION_TRACE_EMIT MCONTROL_MATCH_EQUAL MCONTROL_MATCH_NAPOT MCONTROL_MATCH_GE MCONTROL_MATCH_LT MCONTROL_MATCH_MASK_LOW MCONTROL_MATCH_MASK_HIGH MIP_USIP MIP_SSIP MIP_VSSIP MIP_MSIP MIP_UTIP MIP_STIP MIP_VSTIP MIP_MTIP MIP_UEIP MIP_SEIP MIP_VSEIP MIP_MEIP MIP_SGEIP SIP_SCIP MIP_MCIP MIE_SSIE MIE_HSIE MIE_MSIE MIE_STIE MIE_HTIE MIE_MTIE MIE_SEIE MIE_HEIE MIE_MEIE MIE_SCIE MIE_MCIE MCAUSE_INTERRUPT MIP_S_MASK MIP_VS_MASK MIP_HS_MASK MIDELEG_FORCED_MASK SIP_SSIP SIP_STIP PRV_U PRV_S PRV_M PRV_HS SATP32_MODE SATP32_ASID SATP32_PPN SATP64_MODE SATP64_ASID SATP64_PPN SATP_MODE_OFF SATP_MODE_SV32 SATP_MODE_SV39 SATP_MODE_SV48 SATP_MODE_SV57 SATP_MODE_SV64 HGATP32_MODE HGATP32_VMID HGATP32_PPN HGATP64_MODE HGATP64_VMID HGATP64_PPN HGATP_MODE_OFF HGATP_MODE_SV32X4 HGATP_MODE_SV39X4 HGATP_MODE_SV48X4 PMP_R PMP_W PMP_X PMP_A PMP_L PMP_SHIFT PMP_TOR PMP_NA4 PMP_NAPOT IRQ_U_SOFT IRQ_S_SOFT IRQ_VS_SOFT IRQ_M_SOFT IRQ_U_TIMER IRQ_S_TIMER IRQ_VS_TIMER IRQ_M_TIMER IRQ_U_EXT IRQ_S_EXT IRQ_VS_EXT IRQ_M_EXT IRQ_S_GEXT IRQ_COP IRQ_HOST IRQ_M_CLUSTER IRQ_S_CLUSTER PTE_V PTE_R PTE_W PTE_X PTE_U PTE_G PTE_A PTE_D PTE_SOFT PTE_RSVD PTE_PBMT PTE_N PTE_ATTR PTE_PPN_SHIFT PTE_TABLE(PTE)"},{"location":"runtime/Files/encoding_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/encoding_8h/#define-mstatus_uie","title":"define MSTATUS_UIE","text":"<pre><code>#define MSTATUS_UIE 0x00000001\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sie","title":"define MSTATUS_SIE","text":"<pre><code>#define MSTATUS_SIE 0x00000002\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_hie","title":"define MSTATUS_HIE","text":"<pre><code>#define MSTATUS_HIE 0x00000004\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mie","title":"define MSTATUS_MIE","text":"<pre><code>#define MSTATUS_MIE 0x00000008\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_upie","title":"define MSTATUS_UPIE","text":"<pre><code>#define MSTATUS_UPIE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_spie","title":"define MSTATUS_SPIE","text":"<pre><code>#define MSTATUS_SPIE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_ube","title":"define MSTATUS_UBE","text":"<pre><code>#define MSTATUS_UBE 0x00000040\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mpie","title":"define MSTATUS_MPIE","text":"<pre><code>#define MSTATUS_MPIE 0x00000080\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_spp","title":"define MSTATUS_SPP","text":"<pre><code>#define MSTATUS_SPP 0x00000100\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_vs","title":"define MSTATUS_VS","text":"<pre><code>#define MSTATUS_VS 0x00000600\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mpp","title":"define MSTATUS_MPP","text":"<pre><code>#define MSTATUS_MPP 0x00001800\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_fs","title":"define MSTATUS_FS","text":"<pre><code>#define MSTATUS_FS 0x00006000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_xs","title":"define MSTATUS_XS","text":"<pre><code>#define MSTATUS_XS 0x00018000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mprv","title":"define MSTATUS_MPRV","text":"<pre><code>#define MSTATUS_MPRV 0x00020000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sum","title":"define MSTATUS_SUM","text":"<pre><code>#define MSTATUS_SUM 0x00040000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mxr","title":"define MSTATUS_MXR","text":"<pre><code>#define MSTATUS_MXR 0x00080000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_tvm","title":"define MSTATUS_TVM","text":"<pre><code>#define MSTATUS_TVM 0x00100000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_tw","title":"define MSTATUS_TW","text":"<pre><code>#define MSTATUS_TW 0x00200000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_tsr","title":"define MSTATUS_TSR","text":"<pre><code>#define MSTATUS_TSR 0x00400000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus32_sd","title":"define MSTATUS32_SD","text":"<pre><code>#define MSTATUS32_SD 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_uxl","title":"define MSTATUS_UXL","text":"<pre><code>#define MSTATUS_UXL 0x0000000300000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sxl","title":"define MSTATUS_SXL","text":"<pre><code>#define MSTATUS_SXL 0x0000000C00000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sbe","title":"define MSTATUS_SBE","text":"<pre><code>#define MSTATUS_SBE 0x0000001000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mbe","title":"define MSTATUS_MBE","text":"<pre><code>#define MSTATUS_MBE 0x0000002000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_gva","title":"define MSTATUS_GVA","text":"<pre><code>#define MSTATUS_GVA 0x0000004000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mpv","title":"define MSTATUS_MPV","text":"<pre><code>#define MSTATUS_MPV 0x0000008000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus64_sd","title":"define MSTATUS64_SD","text":"<pre><code>#define MSTATUS64_SD 0x8000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatush_sbe","title":"define MSTATUSH_SBE","text":"<pre><code>#define MSTATUSH_SBE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatush_mbe","title":"define MSTATUSH_MBE","text":"<pre><code>#define MSTATUSH_MBE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_uie","title":"define SSTATUS_UIE","text":"<pre><code>#define SSTATUS_UIE 0x00000001\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_sie","title":"define SSTATUS_SIE","text":"<pre><code>#define SSTATUS_SIE 0x00000002\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_upie","title":"define SSTATUS_UPIE","text":"<pre><code>#define SSTATUS_UPIE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_spie","title":"define SSTATUS_SPIE","text":"<pre><code>#define SSTATUS_SPIE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_ube","title":"define SSTATUS_UBE","text":"<pre><code>#define SSTATUS_UBE 0x00000040\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_spp","title":"define SSTATUS_SPP","text":"<pre><code>#define SSTATUS_SPP 0x00000100\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_vs","title":"define SSTATUS_VS","text":"<pre><code>#define SSTATUS_VS 0x00000600\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_fs","title":"define SSTATUS_FS","text":"<pre><code>#define SSTATUS_FS 0x00006000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_xs","title":"define SSTATUS_XS","text":"<pre><code>#define SSTATUS_XS 0x00018000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_sum","title":"define SSTATUS_SUM","text":"<pre><code>#define SSTATUS_SUM 0x00040000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_mxr","title":"define SSTATUS_MXR","text":"<pre><code>#define SSTATUS_MXR 0x00080000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus32_sd","title":"define SSTATUS32_SD","text":"<pre><code>#define SSTATUS32_SD 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_uxl","title":"define SSTATUS_UXL","text":"<pre><code>#define SSTATUS_UXL 0x0000000300000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus64_sd","title":"define SSTATUS64_SD","text":"<pre><code>#define SSTATUS64_SD 0x8000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_vs_mask","title":"define SSTATUS_VS_MASK","text":"<pre><code>#define SSTATUS_VS_MASK     (SSTATUS_SIE | SSTATUS_SPIE | SSTATUS_SPP | SSTATUS_FS | SSTATUS_SUM | \\\n     SSTATUS_MXR | SSTATUS_UXL)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vsxl","title":"define HSTATUS_VSXL","text":"<pre><code>#define HSTATUS_VSXL 0x300000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vtsr","title":"define HSTATUS_VTSR","text":"<pre><code>#define HSTATUS_VTSR 0x00400000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vtw","title":"define HSTATUS_VTW","text":"<pre><code>#define HSTATUS_VTW 0x00200000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vtvm","title":"define HSTATUS_VTVM","text":"<pre><code>#define HSTATUS_VTVM 0x00100000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vgein","title":"define HSTATUS_VGEIN","text":"<pre><code>#define HSTATUS_VGEIN 0x0003f000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_hu","title":"define HSTATUS_HU","text":"<pre><code>#define HSTATUS_HU 0x00000200\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_spvp","title":"define HSTATUS_SPVP","text":"<pre><code>#define HSTATUS_SPVP 0x00000100\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_spv","title":"define HSTATUS_SPV","text":"<pre><code>#define HSTATUS_SPV 0x00000080\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_gva","title":"define HSTATUS_GVA","text":"<pre><code>#define HSTATUS_GVA 0x00000040\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vsbe","title":"define HSTATUS_VSBE","text":"<pre><code>#define HSTATUS_VSBE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-ustatus_uie","title":"define USTATUS_UIE","text":"<pre><code>#define USTATUS_UIE 0x00000001\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-ustatus_upie","title":"define USTATUS_UPIE","text":"<pre><code>#define USTATUS_UPIE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_xdebugver","title":"define DCSR_XDEBUGVER","text":"<pre><code>#define DCSR_XDEBUGVER (3U &lt;&lt; 30)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ndreset","title":"define DCSR_NDRESET","text":"<pre><code>#define DCSR_NDRESET (1 &lt;&lt; 29)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_fullreset","title":"define DCSR_FULLRESET","text":"<pre><code>#define DCSR_FULLRESET (1 &lt;&lt; 28)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreakm","title":"define DCSR_EBREAKM","text":"<pre><code>#define DCSR_EBREAKM (1 &lt;&lt; 15)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreakh","title":"define DCSR_EBREAKH","text":"<pre><code>#define DCSR_EBREAKH (1 &lt;&lt; 14)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreaks","title":"define DCSR_EBREAKS","text":"<pre><code>#define DCSR_EBREAKS (1 &lt;&lt; 13)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreaku","title":"define DCSR_EBREAKU","text":"<pre><code>#define DCSR_EBREAKU (1 &lt;&lt; 12)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_stopcycle","title":"define DCSR_STOPCYCLE","text":"<pre><code>#define DCSR_STOPCYCLE (1 &lt;&lt; 10)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_stoptime","title":"define DCSR_STOPTIME","text":"<pre><code>#define DCSR_STOPTIME (1 &lt;&lt; 9)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause","title":"define DCSR_CAUSE","text":"<pre><code>#define DCSR_CAUSE (7 &lt;&lt; 6)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_debugint","title":"define DCSR_DEBUGINT","text":"<pre><code>#define DCSR_DEBUGINT (1 &lt;&lt; 5)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_halt","title":"define DCSR_HALT","text":"<pre><code>#define DCSR_HALT (1 &lt;&lt; 3)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_step","title":"define DCSR_STEP","text":"<pre><code>#define DCSR_STEP (1 &lt;&lt; 2)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_prv","title":"define DCSR_PRV","text":"<pre><code>#define DCSR_PRV (3 &lt;&lt; 0)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_none","title":"define DCSR_CAUSE_NONE","text":"<pre><code>#define DCSR_CAUSE_NONE 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_swbp","title":"define DCSR_CAUSE_SWBP","text":"<pre><code>#define DCSR_CAUSE_SWBP 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_hwbp","title":"define DCSR_CAUSE_HWBP","text":"<pre><code>#define DCSR_CAUSE_HWBP 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_debugint","title":"define DCSR_CAUSE_DEBUGINT","text":"<pre><code>#define DCSR_CAUSE_DEBUGINT 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_step","title":"define DCSR_CAUSE_STEP","text":"<pre><code>#define DCSR_CAUSE_STEP 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_halt","title":"define DCSR_CAUSE_HALT","text":"<pre><code>#define DCSR_CAUSE_HALT 5\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_group","title":"define DCSR_CAUSE_GROUP","text":"<pre><code>#define DCSR_CAUSE_GROUP 6\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_type","title":"define MCONTROL_TYPE","text":"<pre><code>#define MCONTROL_TYPE(\n    xlen\n)\n(0xfULL &lt;&lt; ((xlen)-4))\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_dmode","title":"define MCONTROL_DMODE","text":"<pre><code>#define MCONTROL_DMODE(\n    xlen\n)\n(1ULL &lt;&lt; ((xlen)-5))\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_maskmax","title":"define MCONTROL_MASKMAX","text":"<pre><code>#define MCONTROL_MASKMAX(\n    xlen\n)\n(0x3fULL &lt;&lt; ((xlen)-11))\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_select","title":"define MCONTROL_SELECT","text":"<pre><code>#define MCONTROL_SELECT (1 &lt;&lt; 19)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_timing","title":"define MCONTROL_TIMING","text":"<pre><code>#define MCONTROL_TIMING (1 &lt;&lt; 18)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action","title":"define MCONTROL_ACTION","text":"<pre><code>#define MCONTROL_ACTION (0x3f &lt;&lt; 12)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_chain","title":"define MCONTROL_CHAIN","text":"<pre><code>#define MCONTROL_CHAIN (1 &lt;&lt; 11)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match","title":"define MCONTROL_MATCH","text":"<pre><code>#define MCONTROL_MATCH (0xf &lt;&lt; 7)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_m","title":"define MCONTROL_M","text":"<pre><code>#define MCONTROL_M (1 &lt;&lt; 6)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_h","title":"define MCONTROL_H","text":"<pre><code>#define MCONTROL_H (1 &lt;&lt; 5)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_s","title":"define MCONTROL_S","text":"<pre><code>#define MCONTROL_S (1 &lt;&lt; 4)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_u","title":"define MCONTROL_U","text":"<pre><code>#define MCONTROL_U (1 &lt;&lt; 3)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_execute","title":"define MCONTROL_EXECUTE","text":"<pre><code>#define MCONTROL_EXECUTE (1 &lt;&lt; 2)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_store","title":"define MCONTROL_STORE","text":"<pre><code>#define MCONTROL_STORE (1 &lt;&lt; 1)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_load","title":"define MCONTROL_LOAD","text":"<pre><code>#define MCONTROL_LOAD (1 &lt;&lt; 0)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_type_none","title":"define MCONTROL_TYPE_NONE","text":"<pre><code>#define MCONTROL_TYPE_NONE 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_type_match","title":"define MCONTROL_TYPE_MATCH","text":"<pre><code>#define MCONTROL_TYPE_MATCH 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_debug_exception","title":"define MCONTROL_ACTION_DEBUG_EXCEPTION","text":"<pre><code>#define MCONTROL_ACTION_DEBUG_EXCEPTION 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_debug_mode","title":"define MCONTROL_ACTION_DEBUG_MODE","text":"<pre><code>#define MCONTROL_ACTION_DEBUG_MODE 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_trace_start","title":"define MCONTROL_ACTION_TRACE_START","text":"<pre><code>#define MCONTROL_ACTION_TRACE_START 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_trace_stop","title":"define MCONTROL_ACTION_TRACE_STOP","text":"<pre><code>#define MCONTROL_ACTION_TRACE_STOP 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_trace_emit","title":"define MCONTROL_ACTION_TRACE_EMIT","text":"<pre><code>#define MCONTROL_ACTION_TRACE_EMIT 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_equal","title":"define MCONTROL_MATCH_EQUAL","text":"<pre><code>#define MCONTROL_MATCH_EQUAL 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_napot","title":"define MCONTROL_MATCH_NAPOT","text":"<pre><code>#define MCONTROL_MATCH_NAPOT 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_ge","title":"define MCONTROL_MATCH_GE","text":"<pre><code>#define MCONTROL_MATCH_GE 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_lt","title":"define MCONTROL_MATCH_LT","text":"<pre><code>#define MCONTROL_MATCH_LT 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_mask_low","title":"define MCONTROL_MATCH_MASK_LOW","text":"<pre><code>#define MCONTROL_MATCH_MASK_LOW 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_mask_high","title":"define MCONTROL_MATCH_MASK_HIGH","text":"<pre><code>#define MCONTROL_MATCH_MASK_HIGH 5\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_usip","title":"define MIP_USIP","text":"<pre><code>#define MIP_USIP (1 &lt;&lt; IRQ_U_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_ssip","title":"define MIP_SSIP","text":"<pre><code>#define MIP_SSIP (1 &lt;&lt; IRQ_S_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vssip","title":"define MIP_VSSIP","text":"<pre><code>#define MIP_VSSIP (1 &lt;&lt; IRQ_VS_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_msip","title":"define MIP_MSIP","text":"<pre><code>#define MIP_MSIP (1 &lt;&lt; IRQ_M_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_utip","title":"define MIP_UTIP","text":"<pre><code>#define MIP_UTIP (1 &lt;&lt; IRQ_U_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_stip","title":"define MIP_STIP","text":"<pre><code>#define MIP_STIP (1 &lt;&lt; IRQ_S_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vstip","title":"define MIP_VSTIP","text":"<pre><code>#define MIP_VSTIP (1 &lt;&lt; IRQ_VS_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_mtip","title":"define MIP_MTIP","text":"<pre><code>#define MIP_MTIP (1 &lt;&lt; IRQ_M_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_ueip","title":"define MIP_UEIP","text":"<pre><code>#define MIP_UEIP (1 &lt;&lt; IRQ_U_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_seip","title":"define MIP_SEIP","text":"<pre><code>#define MIP_SEIP (1 &lt;&lt; IRQ_S_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vseip","title":"define MIP_VSEIP","text":"<pre><code>#define MIP_VSEIP (1 &lt;&lt; IRQ_VS_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_meip","title":"define MIP_MEIP","text":"<pre><code>#define MIP_MEIP (1 &lt;&lt; IRQ_M_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_sgeip","title":"define MIP_SGEIP","text":"<pre><code>#define MIP_SGEIP (1 &lt;&lt; IRQ_S_GEXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sip_scip","title":"define SIP_SCIP","text":"<pre><code>#define SIP_SCIP (1 &lt;&lt; IRQ_S_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_mcip","title":"define MIP_MCIP","text":"<pre><code>#define MIP_MCIP (1 &lt;&lt; IRQ_M_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_ssie","title":"define MIE_SSIE","text":"<pre><code>#define MIE_SSIE (1 &lt;&lt; IRQ_S_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_hsie","title":"define MIE_HSIE","text":"<pre><code>#define MIE_HSIE (1 &lt;&lt; IRQ_H_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_msie","title":"define MIE_MSIE","text":"<pre><code>#define MIE_MSIE (1 &lt;&lt; IRQ_M_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_stie","title":"define MIE_STIE","text":"<pre><code>#define MIE_STIE (1 &lt;&lt; IRQ_S_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_htie","title":"define MIE_HTIE","text":"<pre><code>#define MIE_HTIE (1 &lt;&lt; IRQ_H_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_mtie","title":"define MIE_MTIE","text":"<pre><code>#define MIE_MTIE (1 &lt;&lt; IRQ_M_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_seie","title":"define MIE_SEIE","text":"<pre><code>#define MIE_SEIE (1 &lt;&lt; IRQ_S_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_heie","title":"define MIE_HEIE","text":"<pre><code>#define MIE_HEIE (1 &lt;&lt; IRQ_H_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_meie","title":"define MIE_MEIE","text":"<pre><code>#define MIE_MEIE (1 &lt;&lt; IRQ_M_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_scie","title":"define MIE_SCIE","text":"<pre><code>#define MIE_SCIE (1 &lt;&lt; IRQ_S_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_mcie","title":"define MIE_MCIE","text":"<pre><code>#define MIE_MCIE (1 &lt;&lt; IRQ_M_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcause_interrupt","title":"define MCAUSE_INTERRUPT","text":"<pre><code>#define MCAUSE_INTERRUPT 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_s_mask","title":"define MIP_S_MASK","text":"<pre><code>#define MIP_S_MASK (MIP_SSIP | MIP_STIP | MIP_SEIP)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vs_mask","title":"define MIP_VS_MASK","text":"<pre><code>#define MIP_VS_MASK (MIP_VSSIP | MIP_VSTIP | MIP_VSEIP)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_hs_mask","title":"define MIP_HS_MASK","text":"<pre><code>#define MIP_HS_MASK (MIP_VS_MASK | MIP_SGEIP)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mideleg_forced_mask","title":"define MIDELEG_FORCED_MASK","text":"<pre><code>#define MIDELEG_FORCED_MASK MIP_HS_MASK\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sip_ssip","title":"define SIP_SSIP","text":"<pre><code>#define SIP_SSIP MIP_SSIP\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sip_stip","title":"define SIP_STIP","text":"<pre><code>#define SIP_STIP MIP_STIP\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_u","title":"define PRV_U","text":"<pre><code>#define PRV_U 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_s","title":"define PRV_S","text":"<pre><code>#define PRV_S 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_m","title":"define PRV_M","text":"<pre><code>#define PRV_M 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_hs","title":"define PRV_HS","text":"<pre><code>#define PRV_HS (PRV_S + 1)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp32_mode","title":"define SATP32_MODE","text":"<pre><code>#define SATP32_MODE 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp32_asid","title":"define SATP32_ASID","text":"<pre><code>#define SATP32_ASID 0x7FC00000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp32_ppn","title":"define SATP32_PPN","text":"<pre><code>#define SATP32_PPN 0x003FFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp64_mode","title":"define SATP64_MODE","text":"<pre><code>#define SATP64_MODE 0xF000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp64_asid","title":"define SATP64_ASID","text":"<pre><code>#define SATP64_ASID 0x0FFFF00000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp64_ppn","title":"define SATP64_PPN","text":"<pre><code>#define SATP64_PPN 0x00000FFFFFFFFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_off","title":"define SATP_MODE_OFF","text":"<pre><code>#define SATP_MODE_OFF 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv32","title":"define SATP_MODE_SV32","text":"<pre><code>#define SATP_MODE_SV32 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv39","title":"define SATP_MODE_SV39","text":"<pre><code>#define SATP_MODE_SV39 8\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv48","title":"define SATP_MODE_SV48","text":"<pre><code>#define SATP_MODE_SV48 9\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv57","title":"define SATP_MODE_SV57","text":"<pre><code>#define SATP_MODE_SV57 10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv64","title":"define SATP_MODE_SV64","text":"<pre><code>#define SATP_MODE_SV64 11\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp32_mode","title":"define HGATP32_MODE","text":"<pre><code>#define HGATP32_MODE 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp32_vmid","title":"define HGATP32_VMID","text":"<pre><code>#define HGATP32_VMID 0x1FC00000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp32_ppn","title":"define HGATP32_PPN","text":"<pre><code>#define HGATP32_PPN 0x003FFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp64_mode","title":"define HGATP64_MODE","text":"<pre><code>#define HGATP64_MODE 0xF000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp64_vmid","title":"define HGATP64_VMID","text":"<pre><code>#define HGATP64_VMID 0x03FFF00000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp64_ppn","title":"define HGATP64_PPN","text":"<pre><code>#define HGATP64_PPN 0x00000FFFFFFFFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_off","title":"define HGATP_MODE_OFF","text":"<pre><code>#define HGATP_MODE_OFF 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_sv32x4","title":"define HGATP_MODE_SV32X4","text":"<pre><code>#define HGATP_MODE_SV32X4 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_sv39x4","title":"define HGATP_MODE_SV39X4","text":"<pre><code>#define HGATP_MODE_SV39X4 8\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_sv48x4","title":"define HGATP_MODE_SV48X4","text":"<pre><code>#define HGATP_MODE_SV48X4 9\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_r","title":"define PMP_R","text":"<pre><code>#define PMP_R 0x01\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_w","title":"define PMP_W","text":"<pre><code>#define PMP_W 0x02\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_x","title":"define PMP_X","text":"<pre><code>#define PMP_X 0x04\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_a","title":"define PMP_A","text":"<pre><code>#define PMP_A 0x18\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_l","title":"define PMP_L","text":"<pre><code>#define PMP_L 0x80\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_shift","title":"define PMP_SHIFT","text":"<pre><code>#define PMP_SHIFT 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_tor","title":"define PMP_TOR","text":"<pre><code>#define PMP_TOR 0x08\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_na4","title":"define PMP_NA4","text":"<pre><code>#define PMP_NA4 0x10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_napot","title":"define PMP_NAPOT","text":"<pre><code>#define PMP_NAPOT 0x18\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_u_soft","title":"define IRQ_U_SOFT","text":"<pre><code>#define IRQ_U_SOFT 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_soft","title":"define IRQ_S_SOFT","text":"<pre><code>#define IRQ_S_SOFT 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_vs_soft","title":"define IRQ_VS_SOFT","text":"<pre><code>#define IRQ_VS_SOFT 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_soft","title":"define IRQ_M_SOFT","text":"<pre><code>#define IRQ_M_SOFT 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_u_timer","title":"define IRQ_U_TIMER","text":"<pre><code>#define IRQ_U_TIMER 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_timer","title":"define IRQ_S_TIMER","text":"<pre><code>#define IRQ_S_TIMER 5\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_vs_timer","title":"define IRQ_VS_TIMER","text":"<pre><code>#define IRQ_VS_TIMER 6\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_timer","title":"define IRQ_M_TIMER","text":"<pre><code>#define IRQ_M_TIMER 7\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_u_ext","title":"define IRQ_U_EXT","text":"<pre><code>#define IRQ_U_EXT 8\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_ext","title":"define IRQ_S_EXT","text":"<pre><code>#define IRQ_S_EXT 9\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_vs_ext","title":"define IRQ_VS_EXT","text":"<pre><code>#define IRQ_VS_EXT 10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_ext","title":"define IRQ_M_EXT","text":"<pre><code>#define IRQ_M_EXT 11\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_gext","title":"define IRQ_S_GEXT","text":"<pre><code>#define IRQ_S_GEXT 12\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_cop","title":"define IRQ_COP","text":"<pre><code>#define IRQ_COP 12\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_host","title":"define IRQ_HOST","text":"<pre><code>#define IRQ_HOST 13\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_cluster","title":"define IRQ_M_CLUSTER","text":"<pre><code>#define IRQ_M_CLUSTER 19\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_cluster","title":"define IRQ_S_CLUSTER","text":"<pre><code>#define IRQ_S_CLUSTER 17\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_v","title":"define PTE_V","text":"<pre><code>#define PTE_V 0x001                 /* Valid */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_r","title":"define PTE_R","text":"<pre><code>#define PTE_R 0x002                 /* Read */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_w","title":"define PTE_W","text":"<pre><code>#define PTE_W 0x004                 /* Write */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_x","title":"define PTE_X","text":"<pre><code>#define PTE_X 0x008                 /* Execute */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_u","title":"define PTE_U","text":"<pre><code>#define PTE_U 0x010                 /* User */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_g","title":"define PTE_G","text":"<pre><code>#define PTE_G 0x020                 /* Global */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_a","title":"define PTE_A","text":"<pre><code>#define PTE_A 0x040                 /* Accessed */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_d","title":"define PTE_D","text":"<pre><code>#define PTE_D 0x080                 /* Dirty */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_soft","title":"define PTE_SOFT","text":"<pre><code>#define PTE_SOFT 0x300              /* Reserved for Software */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_rsvd","title":"define PTE_RSVD","text":"<pre><code>#define PTE_RSVD 0x1FC0000000000000 /* Reserved for future standard use */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_pbmt","title":"define PTE_PBMT","text":"<pre><code>#define PTE_PBMT 0x6000000000000000 /* Svpbmt: Page-based memory types */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_n","title":"define PTE_N","text":"<pre><code>#define PTE_N 0x8000000000000000    /* Svnapot: NAPOT translation contiguity */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_attr","title":"define PTE_ATTR","text":"<pre><code>#define PTE_ATTR 0xFFC0000000000000 /* All attributes and reserved bits */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_ppn_shift","title":"define PTE_PPN_SHIFT","text":"<pre><code>#define PTE_PPN_SHIFT 10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_table","title":"define PTE_TABLE","text":"<pre><code>#define PTE_TABLE(\n    PTE\n)\n(((PTE) &amp; (PTE_V | PTE_R | PTE_W | PTE_X)) == PTE_V)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#source-code","title":"Source code","text":"<pre><code>/* See LICENSE for license details. */\n\n#ifndef RISCV_CSR_ENCODING_H\n#define RISCV_CSR_ENCODING_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#define MSTATUS_UIE 0x00000001\n#define MSTATUS_SIE 0x00000002\n#define MSTATUS_HIE 0x00000004\n#define MSTATUS_MIE 0x00000008\n#define MSTATUS_UPIE 0x00000010\n#define MSTATUS_SPIE 0x00000020\n#define MSTATUS_UBE 0x00000040\n#define MSTATUS_MPIE 0x00000080\n#define MSTATUS_SPP 0x00000100\n#define MSTATUS_VS 0x00000600\n#define MSTATUS_MPP 0x00001800\n#define MSTATUS_FS 0x00006000\n#define MSTATUS_XS 0x00018000\n#define MSTATUS_MPRV 0x00020000\n#define MSTATUS_SUM 0x00040000\n#define MSTATUS_MXR 0x00080000\n#define MSTATUS_TVM 0x00100000\n#define MSTATUS_TW 0x00200000\n#define MSTATUS_TSR 0x00400000\n#define MSTATUS32_SD 0x80000000\n#define MSTATUS_UXL 0x0000000300000000\n#define MSTATUS_SXL 0x0000000C00000000\n#define MSTATUS_SBE 0x0000001000000000\n#define MSTATUS_MBE 0x0000002000000000\n#define MSTATUS_GVA 0x0000004000000000\n#define MSTATUS_MPV 0x0000008000000000\n#define MSTATUS64_SD 0x8000000000000000\n\n#define MSTATUSH_SBE 0x00000010\n#define MSTATUSH_MBE 0x00000020\n\n#define SSTATUS_UIE 0x00000001\n#define SSTATUS_SIE 0x00000002\n#define SSTATUS_UPIE 0x00000010\n#define SSTATUS_SPIE 0x00000020\n#define SSTATUS_UBE 0x00000040\n#define SSTATUS_SPP 0x00000100\n#define SSTATUS_VS 0x00000600\n#define SSTATUS_FS 0x00006000\n#define SSTATUS_XS 0x00018000\n#define SSTATUS_SUM 0x00040000\n#define SSTATUS_MXR 0x00080000\n#define SSTATUS32_SD 0x80000000\n#define SSTATUS_UXL 0x0000000300000000\n#define SSTATUS64_SD 0x8000000000000000\n\n#define SSTATUS_VS_MASK                                                    \\\n    (SSTATUS_SIE | SSTATUS_SPIE | SSTATUS_SPP | SSTATUS_FS | SSTATUS_SUM | \\\n     SSTATUS_MXR | SSTATUS_UXL)\n\n#define HSTATUS_VSXL 0x300000000\n#define HSTATUS_VTSR 0x00400000\n#define HSTATUS_VTW 0x00200000\n#define HSTATUS_VTVM 0x00100000\n#define HSTATUS_VGEIN 0x0003f000\n#define HSTATUS_HU 0x00000200\n#define HSTATUS_SPVP 0x00000100\n#define HSTATUS_SPV 0x00000080\n#define HSTATUS_GVA 0x00000040\n#define HSTATUS_VSBE 0x00000020\n\n#define USTATUS_UIE 0x00000001\n#define USTATUS_UPIE 0x00000010\n\n#define DCSR_XDEBUGVER (3U &lt;&lt; 30)\n#define DCSR_NDRESET (1 &lt;&lt; 29)\n#define DCSR_FULLRESET (1 &lt;&lt; 28)\n#define DCSR_EBREAKM (1 &lt;&lt; 15)\n#define DCSR_EBREAKH (1 &lt;&lt; 14)\n#define DCSR_EBREAKS (1 &lt;&lt; 13)\n#define DCSR_EBREAKU (1 &lt;&lt; 12)\n#define DCSR_STOPCYCLE (1 &lt;&lt; 10)\n#define DCSR_STOPTIME (1 &lt;&lt; 9)\n#define DCSR_CAUSE (7 &lt;&lt; 6)\n#define DCSR_DEBUGINT (1 &lt;&lt; 5)\n#define DCSR_HALT (1 &lt;&lt; 3)\n#define DCSR_STEP (1 &lt;&lt; 2)\n#define DCSR_PRV (3 &lt;&lt; 0)\n\n#define DCSR_CAUSE_NONE 0\n#define DCSR_CAUSE_SWBP 1\n#define DCSR_CAUSE_HWBP 2\n#define DCSR_CAUSE_DEBUGINT 3\n#define DCSR_CAUSE_STEP 4\n#define DCSR_CAUSE_HALT 5\n#define DCSR_CAUSE_GROUP 6\n\n#define MCONTROL_TYPE(xlen) (0xfULL &lt;&lt; ((xlen)-4))\n#define MCONTROL_DMODE(xlen) (1ULL &lt;&lt; ((xlen)-5))\n#define MCONTROL_MASKMAX(xlen) (0x3fULL &lt;&lt; ((xlen)-11))\n\n#define MCONTROL_SELECT (1 &lt;&lt; 19)\n#define MCONTROL_TIMING (1 &lt;&lt; 18)\n#define MCONTROL_ACTION (0x3f &lt;&lt; 12)\n#define MCONTROL_CHAIN (1 &lt;&lt; 11)\n#define MCONTROL_MATCH (0xf &lt;&lt; 7)\n#define MCONTROL_M (1 &lt;&lt; 6)\n#define MCONTROL_H (1 &lt;&lt; 5)\n#define MCONTROL_S (1 &lt;&lt; 4)\n#define MCONTROL_U (1 &lt;&lt; 3)\n#define MCONTROL_EXECUTE (1 &lt;&lt; 2)\n#define MCONTROL_STORE (1 &lt;&lt; 1)\n#define MCONTROL_LOAD (1 &lt;&lt; 0)\n\n#define MCONTROL_TYPE_NONE 0\n#define MCONTROL_TYPE_MATCH 2\n\n#define MCONTROL_ACTION_DEBUG_EXCEPTION 0\n#define MCONTROL_ACTION_DEBUG_MODE 1\n#define MCONTROL_ACTION_TRACE_START 2\n#define MCONTROL_ACTION_TRACE_STOP 3\n#define MCONTROL_ACTION_TRACE_EMIT 4\n\n#define MCONTROL_MATCH_EQUAL 0\n#define MCONTROL_MATCH_NAPOT 1\n#define MCONTROL_MATCH_GE 2\n#define MCONTROL_MATCH_LT 3\n#define MCONTROL_MATCH_MASK_LOW 4\n#define MCONTROL_MATCH_MASK_HIGH 5\n\n#define MIP_USIP (1 &lt;&lt; IRQ_U_SOFT)\n#define MIP_SSIP (1 &lt;&lt; IRQ_S_SOFT)\n#define MIP_VSSIP (1 &lt;&lt; IRQ_VS_SOFT)\n#define MIP_MSIP (1 &lt;&lt; IRQ_M_SOFT)\n#define MIP_UTIP (1 &lt;&lt; IRQ_U_TIMER)\n#define MIP_STIP (1 &lt;&lt; IRQ_S_TIMER)\n#define MIP_VSTIP (1 &lt;&lt; IRQ_VS_TIMER)\n#define MIP_MTIP (1 &lt;&lt; IRQ_M_TIMER)\n#define MIP_UEIP (1 &lt;&lt; IRQ_U_EXT)\n#define MIP_SEIP (1 &lt;&lt; IRQ_S_EXT)\n#define MIP_VSEIP (1 &lt;&lt; IRQ_VS_EXT)\n#define MIP_MEIP (1 &lt;&lt; IRQ_M_EXT)\n#define MIP_SGEIP (1 &lt;&lt; IRQ_S_GEXT)\n#define SIP_SCIP (1 &lt;&lt; IRQ_S_CLUSTER)\n#define MIP_MCIP (1 &lt;&lt; IRQ_M_CLUSTER)\n\n#define MIE_SSIE (1 &lt;&lt; IRQ_S_SOFT)\n#define MIE_HSIE (1 &lt;&lt; IRQ_H_SOFT)\n#define MIE_MSIE (1 &lt;&lt; IRQ_M_SOFT)\n#define MIE_STIE (1 &lt;&lt; IRQ_S_TIMER)\n#define MIE_HTIE (1 &lt;&lt; IRQ_H_TIMER)\n#define MIE_MTIE (1 &lt;&lt; IRQ_M_TIMER)\n#define MIE_SEIE (1 &lt;&lt; IRQ_S_EXT)\n#define MIE_HEIE (1 &lt;&lt; IRQ_H_EXT)\n#define MIE_MEIE (1 &lt;&lt; IRQ_M_EXT)\n#define MIE_SCIE (1 &lt;&lt; IRQ_S_CLUSTER)\n#define MIE_MCIE (1 &lt;&lt; IRQ_M_CLUSTER)\n\n#define MCAUSE_INTERRUPT 0x80000000\n\n#define MIP_S_MASK (MIP_SSIP | MIP_STIP | MIP_SEIP)\n#define MIP_VS_MASK (MIP_VSSIP | MIP_VSTIP | MIP_VSEIP)\n#define MIP_HS_MASK (MIP_VS_MASK | MIP_SGEIP)\n\n#define MIDELEG_FORCED_MASK MIP_HS_MASK\n\n#define SIP_SSIP MIP_SSIP\n#define SIP_STIP MIP_STIP\n\n#define PRV_U 0\n#define PRV_S 1\n#define PRV_M 3\n\n#define PRV_HS (PRV_S + 1)\n\n#define SATP32_MODE 0x80000000\n#define SATP32_ASID 0x7FC00000\n#define SATP32_PPN 0x003FFFFF\n#define SATP64_MODE 0xF000000000000000\n#define SATP64_ASID 0x0FFFF00000000000\n#define SATP64_PPN 0x00000FFFFFFFFFFF\n\n#define SATP_MODE_OFF 0\n#define SATP_MODE_SV32 1\n#define SATP_MODE_SV39 8\n#define SATP_MODE_SV48 9\n#define SATP_MODE_SV57 10\n#define SATP_MODE_SV64 11\n\n#define HGATP32_MODE 0x80000000\n#define HGATP32_VMID 0x1FC00000\n#define HGATP32_PPN 0x003FFFFF\n\n#define HGATP64_MODE 0xF000000000000000\n#define HGATP64_VMID 0x03FFF00000000000\n#define HGATP64_PPN 0x00000FFFFFFFFFFF\n\n#define HGATP_MODE_OFF 0\n#define HGATP_MODE_SV32X4 1\n#define HGATP_MODE_SV39X4 8\n#define HGATP_MODE_SV48X4 9\n\n#define PMP_R 0x01\n#define PMP_W 0x02\n#define PMP_X 0x04\n#define PMP_A 0x18\n#define PMP_L 0x80\n#define PMP_SHIFT 2\n\n#define PMP_TOR 0x08\n#define PMP_NA4 0x10\n#define PMP_NAPOT 0x18\n\n#define IRQ_U_SOFT 0\n#define IRQ_S_SOFT 1\n#define IRQ_VS_SOFT 2\n#define IRQ_M_SOFT 3\n#define IRQ_U_TIMER 4\n#define IRQ_S_TIMER 5\n#define IRQ_VS_TIMER 6\n#define IRQ_M_TIMER 7\n#define IRQ_U_EXT 8\n#define IRQ_S_EXT 9\n#define IRQ_VS_EXT 10\n#define IRQ_M_EXT 11\n#define IRQ_S_GEXT 12\n#define IRQ_COP 12\n#define IRQ_HOST 13\n#define IRQ_M_CLUSTER 19\n#define IRQ_S_CLUSTER 17\n\n/* page table entry (PTE) fields */\n#define PTE_V 0x001                 /* Valid */\n#define PTE_R 0x002                 /* Read */\n#define PTE_W 0x004                 /* Write */\n#define PTE_X 0x008                 /* Execute */\n#define PTE_U 0x010                 /* User */\n#define PTE_G 0x020                 /* Global */\n#define PTE_A 0x040                 /* Accessed */\n#define PTE_D 0x080                 /* Dirty */\n#define PTE_SOFT 0x300              /* Reserved for Software */\n#define PTE_RSVD 0x1FC0000000000000 /* Reserved for future standard use */\n#define PTE_PBMT 0x6000000000000000 /* Svpbmt: Page-based memory types */\n#define PTE_N 0x8000000000000000    /* Svnapot: NAPOT translation contiguity */\n#define PTE_ATTR 0xFFC0000000000000 /* All attributes and reserved bits */\n\n#define PTE_PPN_SHIFT 10\n\n#define PTE_TABLE(PTE) (((PTE) &amp; (PTE_V | PTE_R | PTE_W | PTE_X)) == PTE_V)\n\n#ifdef __riscv\n\n#if __riscv_xlen == 64\n#define MSTATUS_SD MSTATUS64_SD\n#define SSTATUS_SD SSTATUS64_SD\n#define RISCV_PGLEVEL_BITS 9\n#define SATP_MODE SATP64_MODE\n#else\n#define MSTATUS_SD MSTATUS32_SD\n#define SSTATUS_SD SSTATUS32_SD\n#define RISCV_PGLEVEL_BITS 10\n#define SATP_MODE SATP32_MODE\n#endif\n#define RISCV_PGSHIFT 12\n#define RISCV_PGSIZE (1 &lt;&lt; RISCV_PGSHIFT)\n\n#ifndef __ASSEMBLER__\n\n#ifdef __GNUC__\n\n#define read_csr(reg)                                 \\\n    ({                                                \\\n        unsigned long __tmp;                          \\\n        asm volatile(\"csrr %0, \" #reg : \"=r\"(__tmp)); \\\n        __tmp;                                        \\\n    })\n\n#define write_csr(reg, val) ({ asm volatile(\"csrw \" #reg \", %0\" ::\"rK\"(val)); })\n\n#define swap_csr(reg, val)                                                \\\n    ({                                                                    \\\n        unsigned long __tmp;                                              \\\n        asm volatile(\"csrrw %0, \" #reg \", %1\" : \"=r\"(__tmp) : \"rK\"(val)); \\\n        __tmp;                                                            \\\n    })\n\n#define set_csr(reg, bit)                                                 \\\n    ({                                                                    \\\n        unsigned long __tmp;                                              \\\n        asm volatile(\"csrrs %0, \" #reg \", %1\" : \"=r\"(__tmp) : \"rK\"(bit)); \\\n        __tmp;                                                            \\\n    })\n\n#define clear_csr(reg, bit)                                               \\\n    ({                                                                    \\\n        unsigned long __tmp;                                              \\\n        asm volatile(\"csrrc %0, \" #reg \", %1\" : \"=r\"(__tmp) : \"rK\"(bit)); \\\n        __tmp;                                                            \\\n    })\n\n#define rdtime() read_csr(time)\n#define rdcycle() read_csr(cycle)\n#define rdinstret() read_csr(instret)\n\n#endif  // __GNUC__\n\n#endif  // __ASSEMBLER__\n\n#endif  // __riscv\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif  // RISCV_CSR_ENCODING_H\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/eu_8h/","title":"snRuntime/src/omp/eu.h","text":""},{"location":"runtime/Files/eu_8h/#functions","title":"Functions","text":"Name void wait_worker_wfi(void ) void wake_workers(void )When using the CLINT as wakeup. void worker_wfi(uint32_t cluster_core_idx) void eu_print_status()Debugging info to printf. void eu_mutex_lock()Acquires the event unit mutex, exits only on success. void eu_mutex_release()Releases the acquired mutex. uint32_t eu_get_workers_in_loop() uint32_t eu_get_workers_in_wfi() void eu_init(void )Initialize the event unit. void eu_exit(uint32_t core_idx)send all workers in loop to exit() void eu_event_loop(uint32_t cluster_core_idx)Enter the event unit loop, never exits. int eu_dispatch_push(void()(void , uint32_t) fn, uint32_t argc, void * data, uint32_t nthreads)Set function to execute by <code>nthreads</code> number of threads. void eu_run_empty(uint32_t core_idx)wait for all workers to idle"},{"location":"runtime/Files/eu_8h/#attributes","title":"Attributes","text":"Name __thread volatile eu_t * eu_p Pointer to the event unit struct only initialized after call to eu_init for main thread and call to eu_event_loop for worker threads. volatile eu_t *volatile eu_p_global Pointer to where the DM struct in TCDM is located."},{"location":"runtime/Files/eu_8h/#defines","title":"Defines","text":"Name EU_PRINTF(d, ...) Define EU_USE_GLOBAL_CLINT to use the cluster-shared CLINT based SW interrupt system for synchronization. If not defined, the harts use the cluster-local CLINT to syncrhonize which is faster but only works for cluster-local synchronization which is sufficient at the moment since the OpenMP runtime is single cluster only."},{"location":"runtime/Files/eu_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/eu_8h/#function-wait_worker_wfi","title":"function wait_worker_wfi","text":"<pre><code>inline void wait_worker_wfi(\n    void \n)\n</code></pre>"},{"location":"runtime/Files/eu_8h/#function-wake_workers","title":"function wake_workers","text":"<pre><code>inline void wake_workers(\n    void \n)\n</code></pre> <p>When using the CLINT as wakeup. </p>"},{"location":"runtime/Files/eu_8h/#function-worker_wfi","title":"function worker_wfi","text":"<pre><code>inline void worker_wfi(\n    uint32_t cluster_core_idx\n)\n</code></pre>"},{"location":"runtime/Files/eu_8h/#function-eu_print_status","title":"function eu_print_status","text":"<pre><code>inline void eu_print_status()\n</code></pre> <p>Debugging info to printf. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_mutex_lock","title":"function eu_mutex_lock","text":"<pre><code>inline void eu_mutex_lock()\n</code></pre> <p>Acquires the event unit mutex, exits only on success. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_mutex_release","title":"function eu_mutex_release","text":"<pre><code>inline void eu_mutex_release()\n</code></pre> <p>Releases the acquired mutex. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_get_workers_in_loop","title":"function eu_get_workers_in_loop","text":"<pre><code>inline uint32_t eu_get_workers_in_loop()\n</code></pre> <p>Getters </p>"},{"location":"runtime/Files/eu_8h/#function-eu_get_workers_in_wfi","title":"function eu_get_workers_in_wfi","text":"<pre><code>inline uint32_t eu_get_workers_in_wfi()\n</code></pre>"},{"location":"runtime/Files/eu_8h/#function-eu_init","title":"function eu_init","text":"<pre><code>inline void eu_init(\n    void \n)\n</code></pre> <p>Initialize the event unit. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_exit","title":"function eu_exit","text":"<pre><code>inline void eu_exit(\n    uint32_t core_idx\n)\n</code></pre> <p>send all workers in loop to exit() </p> <p>Parameters: </p> <ul> <li>core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_event_loop","title":"function eu_event_loop","text":"<pre><code>inline void eu_event_loop(\n    uint32_t cluster_core_idx\n)\n</code></pre> <p>Enter the event unit loop, never exits. </p> <p>Parameters: </p> <ul> <li>cluster_core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_dispatch_push","title":"function eu_dispatch_push","text":"<pre><code>inline int eu_dispatch_push(\n    void(*)(void *, uint32_t) fn,\n    uint32_t argc,\n    void * data,\n    uint32_t nthreads\n)\n</code></pre> <p>Set function to execute by <code>nthreads</code> number of threads. </p> <p>Parameters: </p> <ul> <li>fn pointer to worker function to be executed </li> <li>data pointer to function arguments </li> <li>argc number of elements in data </li> <li>nthreads number of threads that have to execute this event </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_run_empty","title":"function eu_run_empty","text":"<pre><code>inline void eu_run_empty(\n    uint32_t core_idx\n)\n</code></pre> <p>wait for all workers to idle </p> <p>Parameters: </p> <ul> <li>core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/eu_8h/#variable-eu_p","title":"variable eu_p","text":"<pre><code>__thread volatile eu_t * eu_p;\n</code></pre> <p>Pointer to the event unit struct only initialized after call to eu_init for main thread and call to eu_event_loop for worker threads. </p>"},{"location":"runtime/Files/eu_8h/#variable-eu_p_global","title":"variable eu_p_global","text":"<pre><code>volatile eu_t *volatile eu_p_global;\n</code></pre> <p>Pointer to where the DM struct in TCDM is located. </p>"},{"location":"runtime/Files/eu_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/eu_8h/#define-eu_printf","title":"define EU_PRINTF","text":"<pre><code>#define EU_PRINTF(\n    d,\n    ...\n)\n</code></pre> <p>Define EU_USE_GLOBAL_CLINT to use the cluster-shared CLINT based SW interrupt system for synchronization. If not defined, the harts use the cluster-local CLINT to syncrhonize which is faster but only works for cluster-local synchronization which is sufficient at the moment since the OpenMP runtime is single cluster only. </p>"},{"location":"runtime/Files/eu_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#ifndef EU_H\n#define EU_H\n\n#include \"eu_decls.h\"\n\n//================================================================================\n// Settings\n//================================================================================\n// #define EU_USE_GLOBAL_CLINT\n\n//================================================================================\n// Debug\n//================================================================================\n\n#ifdef EU_DEBUG_LEVEL\n#include \"printf.h\"\n#define _EU_PRINTF(...)             \\\n    if (1) {                        \\\n        printf(\"[eu] \"__VA_ARGS__); \\\n    }\n#define EU_PRINTF(d, ...)        \\\n    if (EU_DEBUG_LEVEL &gt;= d) {   \\\n        _EU_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define EU_PRINTF(d, ...)\n#endif\n\n//================================================================================\n// Data\n//================================================================================\n\nextern __thread volatile eu_t *eu_p;\n\nextern volatile eu_t *volatile eu_p_global;\n\n//================================================================================\n// Functions\n//================================================================================\n\ninline void wait_worker_wfi(void) {\n    uint32_t scratch = eu_p-&gt;workers_in_loop;\n    while (__atomic_load_n(&amp;eu_p-&gt;workers_wfi, __ATOMIC_RELAXED) != scratch)\n        ;\n}\n\n#ifdef EU_USE_GLOBAL_CLINT\n\ninline void wake_workers(void) {\n#ifdef OMPSTATIC_NUMTHREADS\n#define WAKE_MASK (((1 &lt;&lt; OMPSTATIC_NUMTHREADS) - 1) &amp; ~0x1)\n    // Fast wake-up for static number of worker threads\n    uint32_t basehart = snrt_cluster_core_base_hartid();\n    if ((basehart % 32) + OMPSTATIC_NUMTHREADS &gt; 32) {\n        // wake-up is split over two CLINT registers\n        snrt_int_clint_set(basehart / 32, WAKE_MASK &lt;&lt; (basehart % 32));\n        snrt_int_clint_set(basehart / 32 + 1,\n                           WAKE_MASK &gt;&gt; (32 - basehart % 32));\n    } else {\n        snrt_int_clint_set(basehart / 32, WAKE_MASK &lt;&lt; (basehart % 32));\n    }\n    const uint32_t mask = OMPSTATIC_NUMTHREADS - 1;\n#else\n\n    // wake all worker cores except the main thread\n    uint32_t numcores = snrt_cluster_compute_core_num(),\n             basehart = snrt_cluster_core_base_hartid();\n    uint32_t mask = 0, hart = 1;\n    for (; hart &lt; numcores; ++hart) {\n        mask |= 1 &lt;&lt; (basehart + hart);\n        if ((basehart + hart + 1) % 32 == 0) {\n            snrt_int_clint_set((basehart + hart) / 32, mask);\n            mask = 0;\n        }\n    }\n    if (mask) snrt_int_clint_set((basehart + hart) / 32, mask);\n#endif\n}\n\ninline void worker_wfi(uint32_t cluster_core_idx) {\n    __atomic_add_fetch(&amp;eu_p-&gt;workers_wfi, 1, __ATOMIC_RELAXED);\n    snrt_int_sw_poll();\n    __atomic_add_fetch(&amp;eu_p-&gt;workers_wfi, -1, __ATOMIC_RELAXED);\n}\n\n#else  // #ifdef EU_USE_GLOBAL_CLINT\n\ninline void wake_workers(void) {\n    // Guard to wake only if all workers are wfi\n    wait_worker_wfi();\n    // Wake the cluster cores. We do this with cluster relative hart IDs and do\n    // not wake hart 0 since this is the main thread\n    uint32_t numcores = snrt_cluster_compute_core_num();\n    snrt_int_cluster_set(~0x1 &amp; ((1 &lt;&lt; numcores) - 1));\n}\ninline void worker_wfi(uint32_t cluster_core_idx) {\n    __atomic_add_fetch(&amp;eu_p-&gt;workers_wfi, 1, __ATOMIC_RELAXED);\n    snrt_wfi();\n    snrt_int_cluster_clr(1 &lt;&lt; cluster_core_idx);\n    __atomic_add_fetch(&amp;eu_p-&gt;workers_wfi, -1, __ATOMIC_RELAXED);\n}\n\n#endif  // #ifdef EU_USE_GLOBAL_CLINT\n\ninline void eu_print_status() {\n    EU_PRINTF(0, \"workers_in_loop=%d\\n\", eu_p-&gt;workers_in_loop);\n}\n\ninline void eu_mutex_lock() { snrt_mutex_acquire(&amp;eu_p-&gt;workers_mutex); }\n\ninline void eu_mutex_release() { snrt_mutex_release(&amp;eu_p-&gt;workers_mutex); }\n\ninline uint32_t eu_get_workers_in_loop() {\n    return __atomic_load_n(&amp;eu_p-&gt;workers_in_loop, __ATOMIC_RELAXED);\n}\ninline uint32_t eu_get_workers_in_wfi() {\n    return __atomic_load_n(&amp;eu_p-&gt;workers_wfi, __ATOMIC_RELAXED);\n}\n\ninline void eu_init(void) {\n    if (snrt_cluster_core_idx() == 0) {\n        // Allocate the eu struct in L1 for fast access\n        eu_p = snrt_l1alloc(sizeof(eu_t));\n        snrt_memset((void *)eu_p, 0, sizeof(eu_t));\n        // store copy of eu_p on shared memory\n        eu_p_global = eu_p;\n    } else {\n        while (!eu_p_global)\n            ;\n        eu_p = eu_p_global;\n    }\n}\n\ninline void eu_exit(uint32_t core_idx) {\n    // make sure queue is empty\n    if (!eu_p-&gt;e.nthreads) eu_run_empty(core_idx);\n    // set exit flag and wake cores\n    wait_worker_wfi();\n    eu_p-&gt;exit_flag = 1;\n    wake_workers();\n}\n\ninline void eu_event_loop(uint32_t cluster_core_idx) {\n    uint32_t scratch;\n    uint32_t nthds;\n\n    // count number of workers in loop\n    __atomic_add_fetch(&amp;eu_p-&gt;workers_in_loop, 1, __ATOMIC_RELAXED);\n\n    // enable software interrupts\n#ifdef EU_USE_GLOBAL_CLINT\n    snrt_interrupt_enable(IRQ_M_SOFT);\n#else\n    snrt_interrupt_enable(IRQ_M_CLUSTER);\n#endif\n\n    EU_PRINTF(0, \"#%d entered event loop\\n\", cluster_core_idx);\n\n    while (1) {\n        // check for exit\n        if (eu_p-&gt;exit_flag) {\n#ifdef EU_USE_GLOBAL_CLINT\n            snrt_interrupt_disable(IRQ_M_SOFT);\n#else\n            // TODO colluca: should this be \"disable\"?\n            snrt_interrupt_enable(IRQ_M_CLUSTER);\n#endif\n            return;\n        }\n\n        if (cluster_core_idx &lt; eu_p-&gt;e.nthreads) {\n            // make a local copy of nthreads to sync after work since the master\n            // hart will reset eu_p-&gt;e.nthreads as soon as all workers finished\n            // which might cause a race condition\n            nthds = eu_p-&gt;e.nthreads;\n            EU_PRINTF(0, \"run fn @ %#x (arg 0 = %#x)\\n\", eu_p-&gt;e.fn,\n                      ((uint32_t *)eu_p-&gt;e.data)[0]);\n            // call\n            eu_p-&gt;e.fn(eu_p-&gt;e.data, eu_p-&gt;e.argc);\n        }\n\n        // enter wait for interrupt\n        __atomic_add_fetch(&amp;eu_p-&gt;e.fini_count, 1, __ATOMIC_RELAXED);\n        worker_wfi(cluster_core_idx);\n    }\n}\n\ninline int eu_dispatch_push(void (*fn)(void *, uint32_t), uint32_t argc,\n                            void *data, uint32_t nthreads) {\n    // wait for workers to be in wfi before manipulating the event struct\n    wait_worker_wfi();\n\n    // fill queue\n    eu_p-&gt;e.fn = fn;\n    eu_p-&gt;e.data = data;\n    eu_p-&gt;e.argc = argc;\n    eu_p-&gt;e.nthreads = nthreads;\n\n    EU_PRINTF(10, \"eu_dispatch_push success, workers %d in loop %d\\n\", nthreads,\n              eu_p-&gt;workers_in_loop);\n\n    return 0;\n}\n\ninline void eu_run_empty(uint32_t core_idx) {\n    unsigned nfini, scratch;\n    scratch = eu_p-&gt;e.nthreads;\n    if (!scratch) return;\n    EU_PRINTF(10, \"eu_run_empty enter: q size %d\\n\", eu_p-&gt;e.nthreads);\n\n    eu_p-&gt;e.fini_count = 0;\n    if (scratch &gt; 1) wake_workers();\n\n    // Am i also part of the team?\n    if (core_idx &lt; eu_p-&gt;e.nthreads) {\n        // call\n        EU_PRINTF(0, \"run fn @ %#x (arg 0 = %#x)\\n\", eu_p-&gt;e.fn,\n                  ((uint32_t *)eu_p-&gt;e.data)[0]);\n        eu_p-&gt;e.fn(eu_p-&gt;e.data, eu_p-&gt;e.argc);\n    }\n\n    // wait for queue to be empty\n    if (scratch &gt; 1) {\n        scratch = eu_get_workers_in_loop();\n        while (__atomic_load_n(&amp;eu_p-&gt;e.fini_count, __ATOMIC_RELAXED) !=\n               scratch)\n            ;\n    }\n\n    // stop workers from re-executing the task\n    eu_p-&gt;e.nthreads = 0;\n\n    EU_PRINTF(10, \"eu_run_empty exit\\n\");\n}\n\n#endif /* EU_H */\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/eu__decls_8h/","title":"snRuntime/api/omp/eu_decls.h","text":""},{"location":"runtime/Files/eu__decls_8h/#classes","title":"Classes","text":"Name struct eu_t"},{"location":"runtime/Files/eu__decls_8h/#functions","title":"Functions","text":"Name void eu_init(void )Initialize the event unit. void eu_exit(uint32_t core_idx)send all workers in loop to exit() void eu_event_loop(uint32_t cluster_core_idx)Enter the event unit loop, never exits. int eu_dispatch_push(void()(void , uint32_t) fn, uint32_t argc, void * data, uint32_t nthreads)Set function to execute by <code>nthreads</code> number of threads. void eu_run_empty(uint32_t core_idx)wait for all workers to idle void eu_print_status()Debugging info to printf."},{"location":"runtime/Files/eu__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/eu__decls_8h/#function-eu_init","title":"function eu_init","text":"<pre><code>inline void eu_init(\n    void \n)\n</code></pre> <p>Initialize the event unit. </p>"},{"location":"runtime/Files/eu__decls_8h/#function-eu_exit","title":"function eu_exit","text":"<pre><code>inline void eu_exit(\n    uint32_t core_idx\n)\n</code></pre> <p>send all workers in loop to exit() </p> <p>Parameters: </p> <ul> <li>core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu__decls_8h/#function-eu_event_loop","title":"function eu_event_loop","text":"<pre><code>inline void eu_event_loop(\n    uint32_t cluster_core_idx\n)\n</code></pre> <p>Enter the event unit loop, never exits. </p> <p>Parameters: </p> <ul> <li>cluster_core_idx cluster-local core index</li> <li>cluster_core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu__decls_8h/#function-eu_dispatch_push","title":"function eu_dispatch_push","text":"<pre><code>inline int eu_dispatch_push(\n    void(*)(void *, uint32_t) fn,\n    uint32_t argc,\n    void * data,\n    uint32_t nthreads\n)\n</code></pre> <p>Set function to execute by <code>nthreads</code> number of threads. </p> <p>Parameters: </p> <ul> <li>fn pointer to worker function to be executed </li> <li>data pointer to function arguments </li> <li>argc number of elements in data </li> <li>nthreads number of threads that have to execute this event </li> </ul>"},{"location":"runtime/Files/eu__decls_8h/#function-eu_run_empty","title":"function eu_run_empty","text":"<pre><code>inline void eu_run_empty(\n    uint32_t core_idx\n)\n</code></pre> <p>wait for all workers to idle </p> <p>Parameters: </p> <ul> <li>core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu__decls_8h/#function-eu_print_status","title":"function eu_print_status","text":"<pre><code>inline void eu_print_status()\n</code></pre> <p>Debugging info to printf. </p>"},{"location":"runtime/Files/eu__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ntypedef struct {\n    uint32_t workers_in_loop;\n    uint32_t exit_flag;\n    uint32_t workers_mutex;\n    uint32_t workers_wfi;\n    struct {\n        void (*fn)(void *, uint32_t);  // points to microtask wrapper\n        void *data;\n        uint32_t argc;\n        uint32_t nthreads;\n        uint32_t fini_count;\n    } e;\n} eu_t;\n\ninline void eu_init(void);\n\ninline void eu_exit(uint32_t core_idx);\n\ninline void eu_event_loop(uint32_t cluster_core_idx);\n\ninline int eu_dispatch_push(void (*fn)(void *, uint32_t), uint32_t argc,\n                            void *data, uint32_t nthreads);\n\ninline void eu_run_empty(uint32_t core_idx);\n\ninline void eu_print_status();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/gemm_8h/","title":"applications/src/kernels/gemm.h","text":""},{"location":"runtime/Files/gemm_8h/#functions","title":"Functions","text":"Name void gemm_fp64_baseline(uint32_t M, uint32_t N, uint32_t K, double * A, uint32_t ldA, uint32_t ta, double * B, uint32_t ldB, uint32_t tb, double * C, uint32_t ldC, const double ALPHA)baseline implementation of a FP64 GEMM void gemm_fp64_opt(uint32_t M, uint32_t N, uint32_t K, double * A, uint32_t ldA, uint32_t ta, double * B, uint32_t ldB, uint32_t tb, double * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a FP64 GEMM with configured SSRs and frep loop. void gemm_fp32_opt(const uint32_t M, const uint32_t N, const uint32_t K, float * A, const uint32_t ldA, float * B, const uint32_t ldB, float * C, const uint32_t ldC, const uint32_t * ALPHA, const uint32_t setup_SSR)implementation of a FP32 SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. void gemm_fp16_opt(uint32_t M, uint32_t N, uint32_t K, __fp16 * A, uint32_t ldA, __fp16 * B, uint32_t ldB, __fp16 * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a non-expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. void gemm_fp16_ex_opt(uint32_t M, uint32_t N, uint32_t K, __fp16 * A, uint32_t ldA, __fp16 * B, uint32_t ldB, __fp16 * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a FP16 -&gt; FP32 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. void gemm_fp8_ex_opt(uint32_t M, uint32_t N, uint32_t K, char * A, uint32_t ldA, char * B, uint32_t ldB, char * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a FP8-&gt;FP16 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions."},{"location":"runtime/Files/gemm_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/gemm_8h/#function-gemm_fp64_baseline","title":"function gemm_fp64_baseline","text":"<pre><code>void gemm_fp64_baseline(\n    uint32_t M,\n    uint32_t N,\n    uint32_t K,\n    double * A,\n    uint32_t ldA,\n    uint32_t ta,\n    double * B,\n    uint32_t ldB,\n    uint32_t tb,\n    double * C,\n    uint32_t ldC,\n    const double ALPHA\n)\n</code></pre> <p>baseline implementation of a FP64 GEMM </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>ta transposed memory layout for matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>tb transposed memory layout for matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> </ul>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp64_opt","title":"function gemm_fp64_opt","text":"<pre><code>void gemm_fp64_opt(\n    uint32_t M,\n    uint32_t N,\n    uint32_t K,\n    double * A,\n    uint32_t ldA,\n    uint32_t ta,\n    double * B,\n    uint32_t ldB,\n    uint32_t tb,\n    double * C,\n    uint32_t ldC,\n    const uint32_t * ALPHA,\n    uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP64 GEMM with configured SSRs and frep loop. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>ta transposed memory layout for matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>tb transposed memory layout for matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp32_opt","title":"function gemm_fp32_opt","text":"<pre><code>void gemm_fp32_opt(\n    const uint32_t M,\n    const uint32_t N,\n    const uint32_t K,\n    float * A,\n    const uint32_t ldA,\n    float * B,\n    const uint32_t ldB,\n    float * C,\n    const uint32_t ldC,\n    const uint32_t * ALPHA,\n    const uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP32 SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp16_opt","title":"function gemm_fp16_opt","text":"<pre><code>void gemm_fp16_opt(\n    uint32_t M,\n    uint32_t N,\n    uint32_t K,\n    __fp16 * A,\n    uint32_t ldA,\n    __fp16 * B,\n    uint32_t ldB,\n    __fp16 * C,\n    uint32_t ldC,\n    const uint32_t * ALPHA,\n    uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a non-expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp16_ex_opt","title":"function gemm_fp16_ex_opt","text":"<pre><code>void gemm_fp16_ex_opt(\n    uint32_t M,\n    uint32_t N,\n    uint32_t K,\n    __fp16 * A,\n    uint32_t ldA,\n    __fp16 * B,\n    uint32_t ldB,\n    __fp16 * C,\n    uint32_t ldC,\n    const uint32_t * ALPHA,\n    uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP16 -&gt; FP32 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp8_ex_opt","title":"function gemm_fp8_ex_opt","text":"<pre><code>void gemm_fp8_ex_opt(\n    uint32_t M,\n    uint32_t N,\n    uint32_t K,\n    char * A,\n    uint32_t ldA,\n    char * B,\n    uint32_t ldB,\n    char * C,\n    uint32_t ldC,\n    const uint32_t * ALPHA,\n    uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP8-&gt;FP16 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\nvoid gemm_fp64_baseline(uint32_t M, uint32_t N, uint32_t K, double* A,\n                        uint32_t ldA, uint32_t ta, double* B, uint32_t ldB,\n                        uint32_t tb, double* C, uint32_t ldC,\n                        const double ALPHA);\n\nvoid gemm_fp64_opt(uint32_t M, uint32_t N, uint32_t K, double* A, uint32_t ldA,\n                   uint32_t ta, double* B, uint32_t ldB, uint32_t tb, double* C,\n                   uint32_t ldC, const uint32_t* ALPHA, uint32_t setup_SSR);\n\nvoid gemm_fp32_opt(const uint32_t M, const uint32_t N, const uint32_t K,\n                   float* A, const uint32_t ldA, float* B, const uint32_t ldB,\n                   float* C, const uint32_t ldC, const uint32_t* ALPHA,\n                   const uint32_t setup_SSR);\n\nvoid gemm_fp16_opt(uint32_t M, uint32_t N, uint32_t K, __fp16* A, uint32_t ldA,\n                   __fp16* B, uint32_t ldB, __fp16* C, uint32_t ldC,\n                   const uint32_t* ALPHA, uint32_t setup_SSR);\nvoid gemm_fp16_ex_opt(uint32_t M, uint32_t N, uint32_t K, __fp16* A,\n                      uint32_t ldA, __fp16* B, uint32_t ldB, __fp16* C,\n                      uint32_t ldC, const uint32_t* ALPHA, uint32_t setup_SSR);\n\nvoid gemm_fp8_ex_opt(uint32_t M, uint32_t N, uint32_t K, char* A, uint32_t ldA,\n                     char* B, uint32_t ldB, char* C, uint32_t ldC,\n                     const uint32_t* ALPHA, uint32_t setup_SSR);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/global__interrupt__decls_8h/","title":"snRuntime/api/global_interrupt_decls.h","text":""},{"location":"runtime/Files/global__interrupt__decls_8h/#functions","title":"Functions","text":"Name void snrt_int_sw_clear(uint32_t hartid)Clear SW interrupt in CLINT. void snrt_int_sw_set(uint32_t hartid)Set SW interrupt in CLINT."},{"location":"runtime/Files/global__interrupt__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/global__interrupt__decls_8h/#function-snrt_int_sw_clear","title":"function snrt_int_sw_clear","text":"<pre><code>inline void snrt_int_sw_clear(\n    uint32_t hartid\n)\n</code></pre> <p>Clear SW interrupt in CLINT. </p> <p>Parameters: </p> <ul> <li>hartid Target interrupt to clear </li> </ul>"},{"location":"runtime/Files/global__interrupt__decls_8h/#function-snrt_int_sw_set","title":"function snrt_int_sw_set","text":"<pre><code>inline void snrt_int_sw_set(\n    uint32_t hartid\n)\n</code></pre> <p>Set SW interrupt in CLINT. </p> <p>Parameters: </p> <ul> <li>hartid Target interrupt to set </li> </ul>"},{"location":"runtime/Files/global__interrupt__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline void snrt_int_sw_clear(uint32_t hartid);\n\ninline void snrt_int_sw_set(uint32_t hartid);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/global__interrupts_8h/","title":"snRuntime/src/global_interrupts.h","text":""},{"location":"runtime/Files/global__interrupts_8h/#functions","title":"Functions","text":"Name void snrt_int_sw_clear(uint32_t hartid)Clear SW interrupt in CLINT. void snrt_int_sw_set(uint32_t hartid)Set SW interrupt in CLINT. uint32_t snrt_int_sw_get(uint32_t hartid)Read SW interrupt for hartid in CLINT."},{"location":"runtime/Files/global__interrupts_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/global__interrupts_8h/#function-snrt_int_sw_clear","title":"function snrt_int_sw_clear","text":"<pre><code>inline void snrt_int_sw_clear(\n    uint32_t hartid\n)\n</code></pre> <p>Clear SW interrupt in CLINT. </p> <p>Parameters: </p> <ul> <li>hartid Target interrupt to clear </li> </ul>"},{"location":"runtime/Files/global__interrupts_8h/#function-snrt_int_sw_set","title":"function snrt_int_sw_set","text":"<pre><code>inline void snrt_int_sw_set(\n    uint32_t hartid\n)\n</code></pre> <p>Set SW interrupt in CLINT. </p> <p>Parameters: </p> <ul> <li>hartid Target interrupt to set </li> </ul>"},{"location":"runtime/Files/global__interrupts_8h/#function-snrt_int_sw_get","title":"function snrt_int_sw_get","text":"<pre><code>inline uint32_t snrt_int_sw_get(\n    uint32_t hartid\n)\n</code></pre> <p>Read SW interrupt for hartid in CLINT. </p> <p>Parameters: </p> <ul> <li>hartid hartid to poll for interrupt flag </li> </ul> <p>Return: uint32_t 0 if no SW interrupt is pending, 1 otherwise </p>"},{"location":"runtime/Files/global__interrupts_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline void snrt_int_sw_clear(uint32_t hartid) {\n    snrt_mutex_acquire(snrt_clint_mutex_ptr());\n    *(snrt_clint_msip_ptr(hartid)) &amp;= ~(1 &lt;&lt; (hartid &amp; 0x1f));\n    snrt_mutex_release(snrt_clint_mutex_ptr());\n}\n\ninline void snrt_int_sw_set(uint32_t hartid) {\n    snrt_mutex_acquire(snrt_clint_mutex_ptr());\n    *(snrt_clint_msip_ptr(hartid)) |= (1 &lt;&lt; (hartid &amp; 0x1f));\n    snrt_mutex_release(snrt_clint_mutex_ptr());\n}\n\ninline uint32_t snrt_int_sw_get(uint32_t hartid) {\n    snrt_mutex_acquire(snrt_clint_mutex_ptr());\n    uint32_t ret = *(snrt_clint_msip_ptr(hartid)) &gt;&gt; (hartid &amp; 0x1f);\n    snrt_mutex_release(snrt_clint_mutex_ptr());\n    return ret;\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/interface_8h/","title":"snRuntime/src/omp/interface.h","text":""},{"location":"runtime/Files/interface_8h/#classes","title":"Classes","text":"Name struct ident"},{"location":"runtime/Files/interface_8h/#types","title":"Types","text":"Name enum kmp_int32 sched_type { kmp_sch_lower = 32, kmp_sch_static_chunked = 33, kmp_sch_static = 34, kmp_sch_dynamic_chunked = 35, kmp_sch_guided_chunked = 36, kmp_sch_runtime = 37, kmp_sch_auto = 38, kmp_sch_trapezoidal = 39, kmp_sch_static_greedy = 40, kmp_sch_static_balanced = 41, kmp_sch_guided_iterative_chunked = 42, kmp_sch_guided_analytical_chunked = 43, kmp_sch_static_steal = 44, kmp_sch_static_balanced_chunked = 45, kmp_sch_guided_simd = 46, kmp_sch_runtime_simd = 47, kmp_sch_upper, kmp_ord_lower = 64, kmp_ord_static_chunked = 65, kmp_ord_static = 66, kmp_ord_dynamic_chunked = 67, kmp_ord_guided_chunked = 68, kmp_ord_runtime = 69, kmp_ord_auto = 70, kmp_ord_trapezoidal = 71, kmp_ord_upper, kmp_distribute_static_chunked = 91, kmp_distribute_static = 92, kmp_nm_lower = 160, kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower), kmp_nm_static = 162, kmp_nm_dynamic_chunked = 163, kmp_nm_guided_chunked = 164, kmp_nm_runtime = 165, kmp_nm_auto = 166, kmp_nm_trapezoidal = 167, kmp_nm_static_greedy = 168, kmp_nm_static_balanced = 169, kmp_nm_guided_iterative_chunked = 170, kmp_nm_guided_analytical_chunked = 171, kmp_nm_static_steal = 172, kmp_nm_ord_static_chunked = 193, kmp_nm_ord_static = 194, kmp_nm_ord_dynamic_chunked = 195, kmp_nm_ord_guided_chunked = 196, kmp_nm_ord_runtime = 197, kmp_nm_ord_auto = 198, kmp_nm_ord_trapezoidal = 199, kmp_nm_upper, kmp_sch_modifier_monotonic = (1 &lt;&lt; 29), kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30), kmp_sch_default = kmp_sch_static, kmp_sch_lower = 32, kmp_sch_static_chunked = 33, kmp_sch_static = 34, kmp_sch_dynamic_chunked = 35, kmp_sch_guided_chunked = 36, kmp_sch_runtime = 37, kmp_sch_auto = 38, kmp_sch_trapezoidal = 39, kmp_sch_static_greedy = 40, kmp_sch_static_balanced = 41, kmp_sch_guided_iterative_chunked = 42, kmp_sch_guided_analytical_chunked = 43, kmp_sch_static_steal = 44, kmp_sch_static_balanced_chunked = 45, kmp_sch_guided_simd = 46, kmp_sch_runtime_simd = 47, kmp_sch_upper, kmp_ord_lower = 64, kmp_ord_static_chunked = 65, kmp_ord_static = 66, kmp_ord_dynamic_chunked = 67, kmp_ord_guided_chunked = 68, kmp_ord_runtime = 69, kmp_ord_auto = 70, kmp_ord_trapezoidal = 71, kmp_ord_upper, kmp_distribute_static_chunked = 91, kmp_distribute_static = 92, kmp_nm_lower = 160, kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower), kmp_nm_static = 162, kmp_nm_dynamic_chunked = 163, kmp_nm_guided_chunked = 164, kmp_nm_runtime = 165, kmp_nm_auto = 166, kmp_nm_trapezoidal = 167, kmp_nm_static_greedy = 168, kmp_nm_static_balanced = 169, kmp_nm_guided_iterative_chunked = 170, kmp_nm_guided_analytical_chunked = 171, kmp_nm_static_steal = 172, kmp_nm_ord_static_chunked = 193, kmp_nm_ord_static = 194, kmp_nm_ord_dynamic_chunked = 195, kmp_nm_ord_guided_chunked = 196, kmp_nm_ord_runtime = 197, kmp_nm_ord_auto = 198, kmp_nm_ord_trapezoidal = 199, kmp_nm_upper, kmp_sch_modifier_monotonic = (1 &lt;&lt; 29), kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30), kmp_sch_default = kmp_sch_static} typedef int32_t kmp_int32 typedef uint32_t kmp_uint32 typedef int64_t kmp_int64 typedef uint64_t kmp_uint64 typedef kmp_uint64 _kmp_ptr64 typedef kmp_uint32 _kmp_ptr32 typedef struct ident ident_t"},{"location":"runtime/Files/interface_8h/#defines","title":"Defines","text":"Name SCHEDULE_WITHOUT_MODIFIERS(s) SCHEDULE_HAS_MONOTONIC(s) SCHEDULE_HAS_NONMONOTONIC(s) SCHEDULE_HAS_NO_MODIFIERS(s) SCHEDULE_GET_MODIFIERS(s) SCHEDULE_SET_MODIFIERS(s, m) SCHEDULE_NONMONOTONIC SCHEDULE_MONOTONIC"},{"location":"runtime/Files/interface_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/interface_8h/#enum-sched_type","title":"enum sched_type","text":"Enumerator Value Description kmp_sch_lower 32 lower bound for unordered values kmp_sch_static_chunked 33 kmp_sch_static 34 static unspecialized kmp_sch_dynamic_chunked 35 kmp_sch_guided_chunked 36 guided unspecialized kmp_sch_runtime 37 kmp_sch_auto 38 auto kmp_sch_trapezoidal 39 kmp_sch_static_greedy 40 kmp_sch_static_balanced 41 kmp_sch_guided_iterative_chunked 42 kmp_sch_guided_analytical_chunked 43 kmp_sch_static_steal 44 kmp_sch_static_balanced_chunked 45 kmp_sch_guided_simd 46 guided with chunk adjustment kmp_sch_runtime_simd 47 runtime with chunk adjustment kmp_sch_upper upper bound for unordered values kmp_ord_lower = 64 lower bound for ordered values, must be power of 2 kmp_ord_static_chunked 65 kmp_ord_static 66 ordered static unspecialized kmp_ord_dynamic_chunked 67 kmp_ord_guided_chunked 68 kmp_ord_runtime 69 kmp_ord_auto 70 ordered auto kmp_ord_trapezoidal 71 kmp_ord_upper upper bound for ordered values kmp_distribute_static_chunked 91 distribute static chunked kmp_distribute_static 92 distribute static unspecialized kmp_nm_lower 160 lower bound for nomerge values kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower) kmp_nm_static 162 static unspecialized kmp_nm_dynamic_chunked 163 kmp_nm_guided_chunked 164 guided unspecialized kmp_nm_runtime 165 kmp_nm_auto 166 auto kmp_nm_trapezoidal 167 kmp_nm_static_greedy 168 kmp_nm_static_balanced 169 kmp_nm_guided_iterative_chunked 170 kmp_nm_guided_analytical_chunked 171 kmp_nm_static_steal = 172 kmp_nm_ord_static_chunked 193 kmp_nm_ord_static 194 ordered static unspecialized kmp_nm_ord_dynamic_chunked 195 kmp_nm_ord_guided_chunked 196 kmp_nm_ord_runtime 197 kmp_nm_ord_auto 198 auto kmp_nm_ord_trapezoidal 199 kmp_nm_upper upper bound for nomerge values kmp_sch_modifier_monotonic = (1 &lt;&lt; 29) Set if the monotonic schedule modifier was present kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30) Set if the nonmonotonic schedule modifier was present kmp_sch_default kmp_sch_static default scheduling algorithm kmp_sch_lower 32 lower bound for unordered values kmp_sch_static_chunked 33 kmp_sch_static 34 static unspecialized kmp_sch_dynamic_chunked 35 kmp_sch_guided_chunked 36 guided unspecialized kmp_sch_runtime 37 kmp_sch_auto 38 auto kmp_sch_trapezoidal 39 kmp_sch_static_greedy 40 kmp_sch_static_balanced 41 kmp_sch_guided_iterative_chunked 42 kmp_sch_guided_analytical_chunked 43 kmp_sch_static_steal 44 kmp_sch_static_balanced_chunked 45 kmp_sch_guided_simd 46 guided with chunk adjustment kmp_sch_runtime_simd 47 runtime with chunk adjustment kmp_sch_upper upper bound for unordered values kmp_ord_lower = 64 lower bound for ordered values, must be power of 2 kmp_ord_static_chunked 65 kmp_ord_static 66 ordered static unspecialized kmp_ord_dynamic_chunked 67 kmp_ord_guided_chunked 68 kmp_ord_runtime 69 kmp_ord_auto 70 ordered auto kmp_ord_trapezoidal 71 kmp_ord_upper upper bound for ordered values kmp_distribute_static_chunked 91 distribute static chunked kmp_distribute_static 92 distribute static unspecialized kmp_nm_lower 160 lower bound for nomerge values kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower) kmp_nm_static 162 static unspecialized kmp_nm_dynamic_chunked 163 kmp_nm_guided_chunked 164 guided unspecialized kmp_nm_runtime 165 kmp_nm_auto 166 auto kmp_nm_trapezoidal 167 kmp_nm_static_greedy 168 kmp_nm_static_balanced 169 kmp_nm_guided_iterative_chunked 170 kmp_nm_guided_analytical_chunked 171 kmp_nm_static_steal = 172 kmp_nm_ord_static_chunked 193 kmp_nm_ord_static 194 ordered static unspecialized kmp_nm_ord_dynamic_chunked 195 kmp_nm_ord_guided_chunked 196 kmp_nm_ord_runtime 197 kmp_nm_ord_auto 198 auto kmp_nm_ord_trapezoidal 199 kmp_nm_upper upper bound for nomerge values kmp_sch_modifier_monotonic = (1 &lt;&lt; 29) Set if the monotonic schedule modifier was present kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30) Set if the nonmonotonic schedule modifier was present kmp_sch_default kmp_sch_static default scheduling algorithm <p>Describes the loop schedule to be used for a parallel for loop. </p>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_int32","title":"typedef kmp_int32","text":"<pre><code>typedef int32_t kmp_int32;\n</code></pre> <p>The ident structure that describes a source location. The struct is identical to the one in the kmp.h file. We maintain the same data structure for compatibility. </p>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_uint32","title":"typedef kmp_uint32","text":"<pre><code>typedef uint32_t kmp_uint32;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_int64","title":"typedef kmp_int64","text":"<pre><code>typedef int64_t kmp_int64;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_uint64","title":"typedef kmp_uint64","text":"<pre><code>typedef uint64_t kmp_uint64;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-_kmp_ptr64","title":"typedef _kmp_ptr64","text":"<pre><code>typedef kmp_uint64 _kmp_ptr64;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-_kmp_ptr32","title":"typedef _kmp_ptr32","text":"<pre><code>typedef kmp_uint32 _kmp_ptr32;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-ident_t","title":"typedef ident_t","text":"<pre><code>typedef struct ident ident_t;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/interface_8h/#define-schedule_without_modifiers","title":"define SCHEDULE_WITHOUT_MODIFIERS","text":"<pre><code>#define SCHEDULE_WITHOUT_MODIFIERS(\n    s\n)\n    (enum sched_type)(                \\\n        (s) &amp; ~(kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic))\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_has_monotonic","title":"define SCHEDULE_HAS_MONOTONIC","text":"<pre><code>#define SCHEDULE_HAS_MONOTONIC(\n    s\n)\n(((s)&amp;kmp_sch_modifier_monotonic) != 0)\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_has_nonmonotonic","title":"define SCHEDULE_HAS_NONMONOTONIC","text":"<pre><code>#define SCHEDULE_HAS_NONMONOTONIC(\n    s\n)\n(((s)&amp;kmp_sch_modifier_nonmonotonic) != 0)\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_has_no_modifiers","title":"define SCHEDULE_HAS_NO_MODIFIERS","text":"<pre><code>#define SCHEDULE_HAS_NO_MODIFIERS(\n    s\n)\n    (((s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)) == 0)\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_get_modifiers","title":"define SCHEDULE_GET_MODIFIERS","text":"<pre><code>#define SCHEDULE_GET_MODIFIERS(\n    s\n)\n    ((enum sched_type)(           \\\n        (s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)))\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_set_modifiers","title":"define SCHEDULE_SET_MODIFIERS","text":"<pre><code>#define SCHEDULE_SET_MODIFIERS(\n    s,\n    m\n)\n    (s = (enum sched_type)((kmp_int32)s | (kmp_int32)m))\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_nonmonotonic","title":"define SCHEDULE_NONMONOTONIC","text":"<pre><code>#define SCHEDULE_NONMONOTONIC 0\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_monotonic","title":"define SCHEDULE_MONOTONIC","text":"<pre><code>#define SCHEDULE_MONOTONIC 1\n</code></pre>"},{"location":"runtime/Files/interface_8h/#source-code","title":"Source code","text":"<pre><code>// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n\n#ifndef INTERFACE_H\n#define INTERFACE_H\n\n#include &lt;stdint.h&gt;\n\n// kmp specific types\n// Code taken from\n//     https://github.com/llvm/llvm-project/blob/main/openmp/runtime/src/kmp.h\n\ntypedef int32_t kmp_int32;\ntypedef uint32_t kmp_uint32;\ntypedef int64_t kmp_int64;\ntypedef uint64_t kmp_uint64;\ntypedef kmp_uint64 _kmp_ptr64;\ntypedef kmp_uint32 _kmp_ptr32;\n\ntypedef struct ident {\n    kmp_int32 reserved_1; \n    kmp_int32 flags; \n    kmp_int32\n        reserved_2; \n    kmp_int32 reserved_3; \n    char const *psource;  \n} ident_t;\n\nenum sched_type : kmp_int32 {\n    kmp_sch_lower = 32, \n    kmp_sch_static_chunked = 33,\n    kmp_sch_static = 34, \n    kmp_sch_dynamic_chunked = 35,\n    kmp_sch_guided_chunked = 36, \n    kmp_sch_runtime = 37,\n    kmp_sch_auto = 38, \n    kmp_sch_trapezoidal = 39,\n\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_static_greedy = 40,\n    kmp_sch_static_balanced = 41,\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_guided_iterative_chunked = 42,\n    kmp_sch_guided_analytical_chunked = 43,\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_static_steal = 44,\n\n    /* static with chunk adjustment (e.g., simd) */\n    kmp_sch_static_balanced_chunked = 45,\n    kmp_sch_guided_simd = 46,  \n    kmp_sch_runtime_simd = 47, \n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_upper, \n    kmp_ord_lower =\n        64, \n    kmp_ord_static_chunked = 65,\n    kmp_ord_static = 66, \n    kmp_ord_dynamic_chunked = 67,\n    kmp_ord_guided_chunked = 68,\n    kmp_ord_runtime = 69,\n    kmp_ord_auto = 70, \n    kmp_ord_trapezoidal = 71,\n    kmp_ord_upper, \n    /* Schedules for Distribute construct */\n    kmp_distribute_static_chunked = 91, \n    kmp_distribute_static = 92,         \n    /* For the \"nomerge\" versions, kmp_dispatch_next*() will always return a\n       single iteration/chunk, even if the loop is serialized. For the schedule\n       types listed above, the entire iteration vector is returned if the loop\n       is serialized. This doesn't work for gcc/gcomp sections. */\n    kmp_nm_lower = 160, \n    kmp_nm_static_chunked =\n        (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower),\n    kmp_nm_static = 162, \n    kmp_nm_dynamic_chunked = 163,\n    kmp_nm_guided_chunked = 164, \n    kmp_nm_runtime = 165,\n    kmp_nm_auto = 166, \n    kmp_nm_trapezoidal = 167,\n\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_nm_static_greedy = 168,\n    kmp_nm_static_balanced = 169,\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_nm_guided_iterative_chunked = 170,\n    kmp_nm_guided_analytical_chunked = 171,\n    kmp_nm_static_steal =\n        172, /* accessible only through OMP_SCHEDULE environment variable */\n\n    kmp_nm_ord_static_chunked = 193,\n    kmp_nm_ord_static = 194, \n    kmp_nm_ord_dynamic_chunked = 195,\n    kmp_nm_ord_guided_chunked = 196,\n    kmp_nm_ord_runtime = 197,\n    kmp_nm_ord_auto = 198, \n    kmp_nm_ord_trapezoidal = 199,\n    kmp_nm_upper, \n    /* Support for OpenMP 4.5 monotonic and nonmonotonic schedule modifiers.\n       Since we need to distinguish the three possible cases (no modifier,\n       monotonic modifier, nonmonotonic modifier), we need separate bits for\n       each modifier. The absence of monotonic does not imply nonmonotonic,\n       especially since 4.5 says that the behaviour of the \"no modifier\" case is\n       implementation defined in 4.5, but will become \"nonmonotonic\" in 5.0.\n\n       Since we're passing a full 32 bit value, we can use a couple of high bits\n       for these flags; out of paranoia we avoid the sign bit.\n\n       These modifiers can be or-ed into non-static schedules by the compiler to\n       pass the additional information. They will be stripped early in the\n       processing in __kmp_dispatch_init when setting up schedules, so most of\n       the code won't ever see schedules with these bits set.  */\n    kmp_sch_modifier_monotonic =\n        (1 &lt;&lt; 29), \n    kmp_sch_modifier_nonmonotonic =\n        (1 &lt;&lt; 30), \n#define SCHEDULE_WITHOUT_MODIFIERS(s) \\\n    (enum sched_type)(                \\\n        (s) &amp; ~(kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic))\n#define SCHEDULE_HAS_MONOTONIC(s) (((s)&amp;kmp_sch_modifier_monotonic) != 0)\n#define SCHEDULE_HAS_NONMONOTONIC(s) (((s)&amp;kmp_sch_modifier_nonmonotonic) != 0)\n#define SCHEDULE_HAS_NO_MODIFIERS(s) \\\n    (((s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)) == 0)\n#define SCHEDULE_GET_MODIFIERS(s) \\\n    ((enum sched_type)(           \\\n        (s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)))\n#define SCHEDULE_SET_MODIFIERS(s, m) \\\n    (s = (enum sched_type)((kmp_int32)s | (kmp_int32)m))\n#define SCHEDULE_NONMONOTONIC 0\n#define SCHEDULE_MONOTONIC 1\n\n    kmp_sch_default = kmp_sch_static \n};\n\n#endif\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/kmp_8h/","title":"snRuntime/src/omp/kmp.h","text":""},{"location":"runtime/Files/kmp_8h/#classes","title":"Classes","text":"Name struct ident"},{"location":"runtime/Files/kmp_8h/#types","title":"Types","text":"Name enum kmp_int32 sched_type { kmp_sch_lower = 32, kmp_sch_static_chunked = 33, kmp_sch_static = 34, kmp_sch_dynamic_chunked = 35, kmp_sch_guided_chunked = 36, kmp_sch_runtime = 37, kmp_sch_auto = 38, kmp_sch_trapezoidal = 39, kmp_sch_static_greedy = 40, kmp_sch_static_balanced = 41, kmp_sch_guided_iterative_chunked = 42, kmp_sch_guided_analytical_chunked = 43, kmp_sch_static_steal = 44, kmp_sch_static_balanced_chunked = 45, kmp_sch_guided_simd = 46, kmp_sch_runtime_simd = 47, kmp_sch_upper, kmp_ord_lower = 64, kmp_ord_static_chunked = 65, kmp_ord_static = 66, kmp_ord_dynamic_chunked = 67, kmp_ord_guided_chunked = 68, kmp_ord_runtime = 69, kmp_ord_auto = 70, kmp_ord_trapezoidal = 71, kmp_ord_upper, kmp_distribute_static_chunked = 91, kmp_distribute_static = 92, kmp_nm_lower = 160, kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower), kmp_nm_static = 162, kmp_nm_dynamic_chunked = 163, kmp_nm_guided_chunked = 164, kmp_nm_runtime = 165, kmp_nm_auto = 166, kmp_nm_trapezoidal = 167, kmp_nm_static_greedy = 168, kmp_nm_static_balanced = 169, kmp_nm_guided_iterative_chunked = 170, kmp_nm_guided_analytical_chunked = 171, kmp_nm_static_steal = 172, kmp_nm_ord_static_chunked = 193, kmp_nm_ord_static = 194, kmp_nm_ord_dynamic_chunked = 195, kmp_nm_ord_guided_chunked = 196, kmp_nm_ord_runtime = 197, kmp_nm_ord_auto = 198, kmp_nm_ord_trapezoidal = 199, kmp_nm_upper, kmp_sch_modifier_monotonic = (1 &lt;&lt; 29), kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30), kmp_sch_default = kmp_sch_static, kmp_sch_lower = 32, kmp_sch_static_chunked = 33, kmp_sch_static = 34, kmp_sch_dynamic_chunked = 35, kmp_sch_guided_chunked = 36, kmp_sch_runtime = 37, kmp_sch_auto = 38, kmp_sch_trapezoidal = 39, kmp_sch_static_greedy = 40, kmp_sch_static_balanced = 41, kmp_sch_guided_iterative_chunked = 42, kmp_sch_guided_analytical_chunked = 43, kmp_sch_static_steal = 44, kmp_sch_static_balanced_chunked = 45, kmp_sch_guided_simd = 46, kmp_sch_runtime_simd = 47, kmp_sch_upper, kmp_ord_lower = 64, kmp_ord_static_chunked = 65, kmp_ord_static = 66, kmp_ord_dynamic_chunked = 67, kmp_ord_guided_chunked = 68, kmp_ord_runtime = 69, kmp_ord_auto = 70, kmp_ord_trapezoidal = 71, kmp_ord_upper, kmp_distribute_static_chunked = 91, kmp_distribute_static = 92, kmp_nm_lower = 160, kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower), kmp_nm_static = 162, kmp_nm_dynamic_chunked = 163, kmp_nm_guided_chunked = 164, kmp_nm_runtime = 165, kmp_nm_auto = 166, kmp_nm_trapezoidal = 167, kmp_nm_static_greedy = 168, kmp_nm_static_balanced = 169, kmp_nm_guided_iterative_chunked = 170, kmp_nm_guided_analytical_chunked = 171, kmp_nm_static_steal = 172, kmp_nm_ord_static_chunked = 193, kmp_nm_ord_static = 194, kmp_nm_ord_dynamic_chunked = 195, kmp_nm_ord_guided_chunked = 196, kmp_nm_ord_runtime = 197, kmp_nm_ord_auto = 198, kmp_nm_ord_trapezoidal = 199, kmp_nm_upper, kmp_sch_modifier_monotonic = (1 &lt;&lt; 29), kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30), kmp_sch_default = kmp_sch_static} typedef int32_t kmp_int32 typedef uint32_t kmp_uint32 typedef int64_t kmp_int64 typedef uint64_t kmp_uint64 typedef kmp_uint64 _kmp_ptr64 typedef kmp_uint32 _kmp_ptr32 typedef struct ident ident_t typedef void()(kmp_int32 global_tid, kmp_int32 *bound_tid,...) kmpc_micro"},{"location":"runtime/Files/kmp_8h/#attributes","title":"Attributes","text":"Name _kmp_ptr32 * kmpc_args"},{"location":"runtime/Files/kmp_8h/#defines","title":"Defines","text":"Name KMP_PRINTF(d, ...) SCHEDULE_WITHOUT_MODIFIERS(s) SCHEDULE_HAS_MONOTONIC(s) SCHEDULE_HAS_NONMONOTONIC(s) SCHEDULE_HAS_NO_MODIFIERS(s) SCHEDULE_GET_MODIFIERS(s) SCHEDULE_SET_MODIFIERS(s, m) SCHEDULE_NONMONOTONIC SCHEDULE_MONOTONIC"},{"location":"runtime/Files/kmp_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/kmp_8h/#enum-sched_type","title":"enum sched_type","text":"Enumerator Value Description kmp_sch_lower 32 lower bound for unordered values kmp_sch_static_chunked 33 kmp_sch_static 34 static unspecialized kmp_sch_dynamic_chunked 35 kmp_sch_guided_chunked 36 guided unspecialized kmp_sch_runtime 37 kmp_sch_auto 38 auto kmp_sch_trapezoidal 39 kmp_sch_static_greedy 40 kmp_sch_static_balanced 41 kmp_sch_guided_iterative_chunked 42 kmp_sch_guided_analytical_chunked 43 kmp_sch_static_steal 44 kmp_sch_static_balanced_chunked 45 kmp_sch_guided_simd 46 guided with chunk adjustment kmp_sch_runtime_simd 47 runtime with chunk adjustment kmp_sch_upper upper bound for unordered values kmp_ord_lower = 64 lower bound for ordered values, must be power of 2 kmp_ord_static_chunked 65 kmp_ord_static 66 ordered static unspecialized kmp_ord_dynamic_chunked 67 kmp_ord_guided_chunked 68 kmp_ord_runtime 69 kmp_ord_auto 70 ordered auto kmp_ord_trapezoidal 71 kmp_ord_upper upper bound for ordered values kmp_distribute_static_chunked 91 distribute static chunked kmp_distribute_static 92 distribute static unspecialized kmp_nm_lower 160 lower bound for nomerge values kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower) kmp_nm_static 162 static unspecialized kmp_nm_dynamic_chunked 163 kmp_nm_guided_chunked 164 guided unspecialized kmp_nm_runtime 165 kmp_nm_auto 166 auto kmp_nm_trapezoidal 167 kmp_nm_static_greedy 168 kmp_nm_static_balanced 169 kmp_nm_guided_iterative_chunked 170 kmp_nm_guided_analytical_chunked 171 kmp_nm_static_steal = 172 kmp_nm_ord_static_chunked 193 kmp_nm_ord_static 194 ordered static unspecialized kmp_nm_ord_dynamic_chunked 195 kmp_nm_ord_guided_chunked 196 kmp_nm_ord_runtime 197 kmp_nm_ord_auto 198 auto kmp_nm_ord_trapezoidal 199 kmp_nm_upper upper bound for nomerge values kmp_sch_modifier_monotonic = (1 &lt;&lt; 29) Set if the monotonic schedule modifier was present kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30) Set if the nonmonotonic schedule modifier was present kmp_sch_default kmp_sch_static default scheduling algorithm kmp_sch_lower 32 lower bound for unordered values kmp_sch_static_chunked 33 kmp_sch_static 34 static unspecialized kmp_sch_dynamic_chunked 35 kmp_sch_guided_chunked 36 guided unspecialized kmp_sch_runtime 37 kmp_sch_auto 38 auto kmp_sch_trapezoidal 39 kmp_sch_static_greedy 40 kmp_sch_static_balanced 41 kmp_sch_guided_iterative_chunked 42 kmp_sch_guided_analytical_chunked 43 kmp_sch_static_steal 44 kmp_sch_static_balanced_chunked 45 kmp_sch_guided_simd 46 guided with chunk adjustment kmp_sch_runtime_simd 47 runtime with chunk adjustment kmp_sch_upper upper bound for unordered values kmp_ord_lower = 64 lower bound for ordered values, must be power of 2 kmp_ord_static_chunked 65 kmp_ord_static 66 ordered static unspecialized kmp_ord_dynamic_chunked 67 kmp_ord_guided_chunked 68 kmp_ord_runtime 69 kmp_ord_auto 70 ordered auto kmp_ord_trapezoidal 71 kmp_ord_upper upper bound for ordered values kmp_distribute_static_chunked 91 distribute static chunked kmp_distribute_static 92 distribute static unspecialized kmp_nm_lower 160 lower bound for nomerge values kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower) kmp_nm_static 162 static unspecialized kmp_nm_dynamic_chunked 163 kmp_nm_guided_chunked 164 guided unspecialized kmp_nm_runtime 165 kmp_nm_auto 166 auto kmp_nm_trapezoidal 167 kmp_nm_static_greedy 168 kmp_nm_static_balanced 169 kmp_nm_guided_iterative_chunked 170 kmp_nm_guided_analytical_chunked 171 kmp_nm_static_steal = 172 kmp_nm_ord_static_chunked 193 kmp_nm_ord_static 194 ordered static unspecialized kmp_nm_ord_dynamic_chunked 195 kmp_nm_ord_guided_chunked 196 kmp_nm_ord_runtime 197 kmp_nm_ord_auto 198 auto kmp_nm_ord_trapezoidal 199 kmp_nm_upper upper bound for nomerge values kmp_sch_modifier_monotonic = (1 &lt;&lt; 29) Set if the monotonic schedule modifier was present kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30) Set if the nonmonotonic schedule modifier was present kmp_sch_default kmp_sch_static default scheduling algorithm <p>Describes the loop schedule to be used for a parallel for loop. </p>"},{"location":"runtime/Files/kmp_8h/#typedef-kmp_int32","title":"typedef kmp_int32","text":"<pre><code>typedef int32_t kmp_int32;\n</code></pre> <p>The ident structure that describes a source location. The struct is identical to the one in the kmp.h file. We maintain the same data structure for compatibility. </p>"},{"location":"runtime/Files/kmp_8h/#typedef-kmp_uint32","title":"typedef kmp_uint32","text":"<pre><code>typedef uint32_t kmp_uint32;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#typedef-kmp_int64","title":"typedef kmp_int64","text":"<pre><code>typedef int64_t kmp_int64;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#typedef-kmp_uint64","title":"typedef kmp_uint64","text":"<pre><code>typedef uint64_t kmp_uint64;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#typedef-_kmp_ptr64","title":"typedef _kmp_ptr64","text":"<pre><code>typedef kmp_uint64 _kmp_ptr64;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#typedef-_kmp_ptr32","title":"typedef _kmp_ptr32","text":"<pre><code>typedef kmp_uint32 _kmp_ptr32;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#typedef-ident_t","title":"typedef ident_t","text":"<pre><code>typedef struct ident ident_t;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#typedef-kmpc_micro","title":"typedef kmpc_micro","text":"<pre><code>typedef void(* kmpc_micro) (kmp_int32 *global_tid, kmp_int32 *bound_tid,...);\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/kmp_8h/#variable-kmpc_args","title":"variable kmpc_args","text":"<pre><code>_kmp_ptr32 * kmpc_args;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/kmp_8h/#define-kmp_printf","title":"define KMP_PRINTF","text":"<pre><code>#define KMP_PRINTF(\n    d,\n    ...\n)\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_without_modifiers","title":"define SCHEDULE_WITHOUT_MODIFIERS","text":"<pre><code>#define SCHEDULE_WITHOUT_MODIFIERS(\n    s\n)\n    (enum sched_type)(                \\\n        (s) &amp; ~(kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic))\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_has_monotonic","title":"define SCHEDULE_HAS_MONOTONIC","text":"<pre><code>#define SCHEDULE_HAS_MONOTONIC(\n    s\n)\n(((s)&amp;kmp_sch_modifier_monotonic) != 0)\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_has_nonmonotonic","title":"define SCHEDULE_HAS_NONMONOTONIC","text":"<pre><code>#define SCHEDULE_HAS_NONMONOTONIC(\n    s\n)\n(((s)&amp;kmp_sch_modifier_nonmonotonic) != 0)\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_has_no_modifiers","title":"define SCHEDULE_HAS_NO_MODIFIERS","text":"<pre><code>#define SCHEDULE_HAS_NO_MODIFIERS(\n    s\n)\n    (((s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)) == 0)\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_get_modifiers","title":"define SCHEDULE_GET_MODIFIERS","text":"<pre><code>#define SCHEDULE_GET_MODIFIERS(\n    s\n)\n    ((enum sched_type)(           \\\n        (s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)))\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_set_modifiers","title":"define SCHEDULE_SET_MODIFIERS","text":"<pre><code>#define SCHEDULE_SET_MODIFIERS(\n    s,\n    m\n)\n    (s = (enum sched_type)((kmp_int32)s | (kmp_int32)m))\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_nonmonotonic","title":"define SCHEDULE_NONMONOTONIC","text":"<pre><code>#define SCHEDULE_NONMONOTONIC 0\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#define-schedule_monotonic","title":"define SCHEDULE_MONOTONIC","text":"<pre><code>#define SCHEDULE_MONOTONIC 1\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#ifndef KMP_H\n#define KMP_H\n\n// debug\n\n#ifdef KMP_DEBUG_LEVEL\n#include \"encoding.h\"\n#include \"printf.h\"\n#define _KMP_PRINTF(...)             \\\n    if (1) {                         \\\n        printf(\"[kmc] \"__VA_ARGS__); \\\n    }\n#define KMP_PRINTF(d, ...)        \\\n    if (KMP_DEBUG_LEVEL &gt;= d) {   \\\n        _KMP_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define KMP_PRINTF(d, ...)\n#endif\n\n// kmp specific types\n// Code taken from\n//     https://github.com/llvm/llvm-project/blob/main/openmp/runtime/src/kmp.h\n\ntypedef int32_t kmp_int32;\ntypedef uint32_t kmp_uint32;\ntypedef int64_t kmp_int64;\ntypedef uint64_t kmp_uint64;\ntypedef kmp_uint64 _kmp_ptr64;\ntypedef kmp_uint32 _kmp_ptr32;\n\ntypedef struct ident {\n    kmp_int32 reserved_1; \n    kmp_int32 flags; \n    kmp_int32\n        reserved_2; \n    kmp_int32 reserved_3; \n    char const *psource;  \n} ident_t;\n\nenum sched_type : kmp_int32 {\n    kmp_sch_lower = 32, \n    kmp_sch_static_chunked = 33,\n    kmp_sch_static = 34, \n    kmp_sch_dynamic_chunked = 35,\n    kmp_sch_guided_chunked = 36, \n    kmp_sch_runtime = 37,\n    kmp_sch_auto = 38, \n    kmp_sch_trapezoidal = 39,\n\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_static_greedy = 40,\n    kmp_sch_static_balanced = 41,\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_guided_iterative_chunked = 42,\n    kmp_sch_guided_analytical_chunked = 43,\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_static_steal = 44,\n\n    /* static with chunk adjustment (e.g., simd) */\n    kmp_sch_static_balanced_chunked = 45,\n    kmp_sch_guided_simd = 46,  \n    kmp_sch_runtime_simd = 47, \n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_sch_upper, \n    kmp_ord_lower =\n        64, \n    kmp_ord_static_chunked = 65,\n    kmp_ord_static = 66, \n    kmp_ord_dynamic_chunked = 67,\n    kmp_ord_guided_chunked = 68,\n    kmp_ord_runtime = 69,\n    kmp_ord_auto = 70, \n    kmp_ord_trapezoidal = 71,\n    kmp_ord_upper, \n    /* Schedules for Distribute construct */\n    kmp_distribute_static_chunked = 91, \n    kmp_distribute_static = 92,         \n    /* For the \"nomerge\" versions, kmp_dispatch_next*() will always return a\n       single iteration/chunk, even if the loop is serialized. For the schedule\n       types listed above, the entire iteration vector is returned if the loop\n       is serialized. This doesn't work for gcc/gcomp sections. */\n    kmp_nm_lower = 160, \n    kmp_nm_static_chunked =\n        (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower),\n    kmp_nm_static = 162, \n    kmp_nm_dynamic_chunked = 163,\n    kmp_nm_guided_chunked = 164, \n    kmp_nm_runtime = 165,\n    kmp_nm_auto = 166, \n    kmp_nm_trapezoidal = 167,\n\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_nm_static_greedy = 168,\n    kmp_nm_static_balanced = 169,\n    /* accessible only through KMP_SCHEDULE environment variable */\n    kmp_nm_guided_iterative_chunked = 170,\n    kmp_nm_guided_analytical_chunked = 171,\n    kmp_nm_static_steal =\n        172, /* accessible only through OMP_SCHEDULE environment variable */\n\n    kmp_nm_ord_static_chunked = 193,\n    kmp_nm_ord_static = 194, \n    kmp_nm_ord_dynamic_chunked = 195,\n    kmp_nm_ord_guided_chunked = 196,\n    kmp_nm_ord_runtime = 197,\n    kmp_nm_ord_auto = 198, \n    kmp_nm_ord_trapezoidal = 199,\n    kmp_nm_upper, \n    /* Support for OpenMP 4.5 monotonic and nonmonotonic schedule modifiers.\n       Since we need to distinguish the three possible cases (no modifier,\n       monotonic modifier, nonmonotonic modifier), we need separate bits for\n       each modifier. The absence of monotonic does not imply nonmonotonic,\n       especially since 4.5 says that the behaviour of the \"no modifier\" case is\n       implementation defined in 4.5, but will become \"nonmonotonic\" in 5.0.\n\n       Since we're passing a full 32 bit value, we can use a couple of high bits\n       for these flags; out of paranoia we avoid the sign bit.\n\n       These modifiers can be or-ed into non-static schedules by the compiler to\n       pass the additional information. They will be stripped early in the\n       processing in __kmp_dispatch_init when setting up schedules, so most of\n       the code won't ever see schedules with these bits set.  */\n    kmp_sch_modifier_monotonic =\n        (1 &lt;&lt; 29), \n    kmp_sch_modifier_nonmonotonic =\n        (1 &lt;&lt; 30), \n#define SCHEDULE_WITHOUT_MODIFIERS(s) \\\n    (enum sched_type)(                \\\n        (s) &amp; ~(kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic))\n#define SCHEDULE_HAS_MONOTONIC(s) (((s)&amp;kmp_sch_modifier_monotonic) != 0)\n#define SCHEDULE_HAS_NONMONOTONIC(s) (((s)&amp;kmp_sch_modifier_nonmonotonic) != 0)\n#define SCHEDULE_HAS_NO_MODIFIERS(s) \\\n    (((s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)) == 0)\n#define SCHEDULE_GET_MODIFIERS(s) \\\n    ((enum sched_type)(           \\\n        (s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)))\n#define SCHEDULE_SET_MODIFIERS(s, m) \\\n    (s = (enum sched_type)((kmp_int32)s | (kmp_int32)m))\n#define SCHEDULE_NONMONOTONIC 0\n#define SCHEDULE_MONOTONIC 1\n\n    kmp_sch_default = kmp_sch_static \n};\n\ntypedef void (*kmpc_micro)(kmp_int32 *global_tid, kmp_int32 *bound_tid, ...);\n\n// data\n\nextern _kmp_ptr32 *kmpc_args;\n\n#endif /* KMP_H */\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/layer_8h/","title":"applications/include/layer.h","text":""},{"location":"runtime/Files/layer_8h/#classes","title":"Classes","text":"Name struct gemm_layer_struct This structure contains all parameters necessary for GEMM. struct conv_layer_struct This structure contains all parameters necessary for Convolutional layers."},{"location":"runtime/Files/layer_8h/#types","title":"Types","text":"Name enum precision_t { FP64 = 8, FP32 = 4, FP16 = 2, FP8 = 1} typedef struct gemm_layer_struct gemm_layer typedef struct conv_layer_struct conv_layer"},{"location":"runtime/Files/layer_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/layer_8h/#enum-precision_t","title":"enum precision_t","text":"Enumerator Value Description FP64 8 FP32 4 FP16 2 FP8 1"},{"location":"runtime/Files/layer_8h/#typedef-gemm_layer","title":"typedef gemm_layer","text":"<pre><code>typedef struct gemm_layer_struct gemm_layer;\n</code></pre>"},{"location":"runtime/Files/layer_8h/#typedef-conv_layer","title":"typedef conv_layer","text":"<pre><code>typedef struct conv_layer_struct conv_layer;\n</code></pre>"},{"location":"runtime/Files/layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\ntypedef enum { FP64 = 8, FP32 = 4, FP16 = 2, FP8 = 1 } precision_t;\n\ntypedef struct gemm_layer_struct {\n    uint32_t M;\n    uint32_t M_p;\n    uint32_t N;\n    uint32_t K;\n\n    uint32_t TA;\n    uint32_t TB;\n\n    uint32_t TILE_M;\n    uint32_t TILE_N;\n    uint32_t TILE_K;\n\n    double *A;\n    double *B;\n    double *C;\n\n    uint32_t ALPHA;\n\n    precision_t dtype;\n    uint32_t expand;\n} gemm_layer;\n\ntypedef struct conv_layer_struct {\n    // CONV2D\n    uint32_t CO;\n    uint32_t CI;\n    uint32_t IH;\n    uint32_t IW;\n    uint32_t OH;\n    uint32_t OW;\n    uint32_t FH;\n    uint32_t FW;\n    uint32_t pad;\n\n    double *ifmap;\n    double *weights;\n    double *ofmap;\n\n    uint32_t TILE_CI;\n    uint32_t cluster2cluster;\n    uint32_t im2col;\n\n    // BATCHNORM\n    double *gamma;\n    double *beta;\n\n    precision_t dtype;\n} conv_layer;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/matmul_8h/","title":"benchmark/src/matmul/matmul.h","text":""},{"location":"runtime/Files/matmul_8h/#classes","title":"Classes","text":"Name struct gemm_result_t"},{"location":"runtime/Files/matmul_8h/#types","title":"Types","text":"Name typedef void()(uint32_t N, uint32_t M, uint32_t K, double A, uint32_t ldA, double B, uint32_t ldB, double C, uint32_t ldC) gemm_impl_t"},{"location":"runtime/Files/matmul_8h/#functions","title":"Functions","text":"Name gemm_result_t gemm_bench(gemm_impl_t gemm_impl) void gemm_seq_baseline(uint32_t N, uint32_t M, uint32_t K, double restrict A, uint32_t ldA, double restrict B, uint32_t ldB, double *restrict C, uint32_t ldC) void gemm_seq_ssr(uint32_t N, uint32_t M, uint32_t K, double restrict A, uint32_t ldA, double restrict B, uint32_t ldB, double *restrict C, uint32_t ldC) void gemm_seq_ssr_frep(uint32_t N, uint32_t M, uint32_t K, double restrict A, uint32_t ldA, double restrict B, uint32_t ldB, double *restrict C, uint32_t ldC)"},{"location":"runtime/Files/matmul_8h/#attributes","title":"Attributes","text":"Name uint32_t input_size double output_checksum"},{"location":"runtime/Files/matmul_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/matmul_8h/#typedef-gemm_impl_t","title":"typedef gemm_impl_t","text":"<pre><code>typedef void(* gemm_impl_t) (uint32_t N, uint32_t M, uint32_t K, double *A, uint32_t ldA, double *B, uint32_t ldB, double *C, uint32_t ldC);\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/matmul_8h/#function-gemm_bench","title":"function gemm_bench","text":"<pre><code>gemm_result_t gemm_bench(\n    gemm_impl_t gemm_impl\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#function-gemm_seq_baseline","title":"function gemm_seq_baseline","text":"<pre><code>void gemm_seq_baseline(\n    uint32_t N,\n    uint32_t M,\n    uint32_t K,\n    double *restrict A,\n    uint32_t ldA,\n    double *restrict B,\n    uint32_t ldB,\n    double *restrict C,\n    uint32_t ldC\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#function-gemm_seq_ssr","title":"function gemm_seq_ssr","text":"<pre><code>void gemm_seq_ssr(\n    uint32_t N,\n    uint32_t M,\n    uint32_t K,\n    double *restrict A,\n    uint32_t ldA,\n    double *restrict B,\n    uint32_t ldB,\n    double *restrict C,\n    uint32_t ldC\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#function-gemm_seq_ssr_frep","title":"function gemm_seq_ssr_frep","text":"<pre><code>void gemm_seq_ssr_frep(\n    uint32_t N,\n    uint32_t M,\n    uint32_t K,\n    double *restrict A,\n    uint32_t ldA,\n    double *restrict B,\n    uint32_t ldB,\n    double *restrict C,\n    uint32_t ldC\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/matmul_8h/#variable-input_size","title":"variable input_size","text":"<pre><code>uint32_t input_size;\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#variable-output_checksum","title":"variable output_checksum","text":"<pre><code>double output_checksum;\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n#include \"benchmark.h\"\n\nextern uint32_t input_size;\nextern double output_checksum[];\n\ntypedef struct {\n    size_t errors;\n    size_t cycles_core;\n    size_t cycles_total;\n} gemm_result_t;\n\ntypedef void (*gemm_impl_t)(uint32_t N, uint32_t M, uint32_t K, double *A,\n                            uint32_t ldA, double *B, uint32_t ldB, double *C,\n                            uint32_t ldC);\n\ngemm_result_t gemm_bench(gemm_impl_t gemm_impl);\n\nvoid gemm_seq_baseline(uint32_t N, uint32_t M, uint32_t K, double *restrict A,\n                       uint32_t ldA, double *restrict B, uint32_t ldB,\n                       double *restrict C, uint32_t ldC);\n\nvoid gemm_seq_ssr(uint32_t N, uint32_t M, uint32_t K, double *restrict A,\n                  uint32_t ldA, double *restrict B, uint32_t ldB,\n                  double *restrict C, uint32_t ldC);\n\nvoid gemm_seq_ssr_frep(uint32_t N, uint32_t M, uint32_t K, double *restrict A,\n                       uint32_t ldA, double *restrict B, uint32_t ldB,\n                       double *restrict C, uint32_t ldC);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/maxpool_8h/","title":"applications/src/kernels/maxpool.h","text":""},{"location":"runtime/Files/maxpool_8h/#functions","title":"Functions","text":"Name void maxpool_fp64(double * ifmap, double * ofmap, uint32_t CI, uint32_t FH, uint32_t FW, uint32_t compute_num)implementation of FP64 maxpooling"},{"location":"runtime/Files/maxpool_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/maxpool_8h/#function-maxpool_fp64","title":"function maxpool_fp64","text":"<pre><code>void maxpool_fp64(\n    double * ifmap,\n    double * ofmap,\n    uint32_t CI,\n    uint32_t FH,\n    uint32_t FW,\n    uint32_t compute_num\n)\n</code></pre> <p>implementation of FP64 maxpooling </p> <p>Parameters: </p> <ul> <li>ifmap pointer to input feature map </li> <li>ofmap pointer to output feature map </li> <li>CI number of input channels </li> <li>FH height of filter </li> <li>FW width of filter </li> <li>compute_num number of compute units </li> </ul>"},{"location":"runtime/Files/maxpool_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"snrt.h\"\n\nvoid maxpool_fp64(double *ifmap, double *ofmap, uint32_t CI, uint32_t FH,\n                  uint32_t FW, uint32_t compute_num);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/maxpool__layer_8h/","title":"applications/src/layers/maxpool_layer.h","text":""},{"location":"runtime/Files/maxpool__layer_8h/#functions","title":"Functions","text":"Name void maxpool_layer(const conv_layer * l)maxpool layer that handles data transfers in a double buffered fashion"},{"location":"runtime/Files/maxpool__layer_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/maxpool__layer_8h/#function-maxpool_layer","title":"function maxpool_layer","text":"<pre><code>void maxpool_layer(\n    const conv_layer * l\n)\n</code></pre> <p>maxpool layer that handles data transfers in a double buffered fashion </p> <p>Parameters: </p> <ul> <li>l conv_layer struct that holds addresses and parameters </li> </ul>"},{"location":"runtime/Files/maxpool__layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n\nvoid maxpool_layer(const conv_layer *l);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/memory__decls_8h/","title":"snRuntime/api/memory_decls.h","text":""},{"location":"runtime/Files/memory__decls_8h/#functions","title":"Functions","text":"Name uint32_t attribute((const) )"},{"location":"runtime/Files/memory__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/memory__decls_8h/#function-attribute","title":"function attribute","text":"<pre><code>inline uint32_t __attribute__(\n    (const) \n)\n</code></pre>"},{"location":"runtime/Files/memory__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline uint32_t __attribute__((const)) snrt_l1_start_addr();\n\ninline uint32_t __attribute__((const)) snrt_l1_end_addr();\n\ninline volatile uint32_t* __attribute__((const)) snrt_clint_mutex_ptr();\n\ninline volatile uint32_t* __attribute__((const)) snrt_clint_msip_ptr();\n\ninline volatile uint32_t* __attribute__((const)) snrt_cluster_clint_set_ptr();\n\ninline volatile uint32_t* __attribute__((const)) snrt_cluster_clint_clr_ptr();\n\ninline uint32_t __attribute__((const)) snrt_cluster_hw_barrier_addr();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/network_8h/","title":"applications/include/network.h","text":""},{"location":"runtime/Files/network_8h/#classes","title":"Classes","text":"Name struct network_t_ This structure contains all parameters necessary for building a simple neural netowork. struct network_fp64_t_ struct network_fp32_t_ struct network_fp16_t_ struct network_fp8_t_ struct cnn_t_ struct network_benchmark_t_ struct network_single_cluster_t_"},{"location":"runtime/Files/network_8h/#types","title":"Types","text":"Name typedef struct network_t_ network_t typedef struct network_fp64_t_ network_fp64_t typedef struct network_fp32_t_ network_fp32_t typedef struct network_fp16_t_ network_fp16_t typedef struct network_fp8_t_ network_fp8_t typedef struct cnn_t_ cnn_t typedef struct network_benchmark_t_ network_benchmark_t typedef struct network_single_cluster_t_ network_single_cluster_t"},{"location":"runtime/Files/network_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/network_8h/#typedef-network_t","title":"typedef network_t","text":"<pre><code>typedef struct network_t_ network_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp64_t","title":"typedef network_fp64_t","text":"<pre><code>typedef struct network_fp64_t_ network_fp64_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp32_t","title":"typedef network_fp32_t","text":"<pre><code>typedef struct network_fp32_t_ network_fp32_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp16_t","title":"typedef network_fp16_t","text":"<pre><code>typedef struct network_fp16_t_ network_fp16_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp8_t","title":"typedef network_fp8_t","text":"<pre><code>typedef struct network_fp8_t_ network_fp8_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-cnn_t","title":"typedef cnn_t","text":"<pre><code>typedef struct cnn_t_ cnn_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_benchmark_t","title":"typedef network_benchmark_t","text":"<pre><code>typedef struct network_benchmark_t_ network_benchmark_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_single_cluster_t","title":"typedef network_single_cluster_t","text":"<pre><code>typedef struct network_single_cluster_t_ network_single_cluster_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\n#include \"layer.h\"\n\ntypedef struct network_t_ {\n    uint32_t IN_CH1;\n    uint32_t IN_CH2;\n    uint32_t OUT_CH;\n\n    float *b;\n    float *W;\n    float *b_grad;\n    float *W_grad;\n    float *images;\n    uint32_t *targets;\n\n    precision_t dtype;\n\n} network_t;\n\ntypedef struct network_fp64_t_ {\n    uint32_t IN_CH1;\n    uint32_t IN_CH2;\n    uint32_t OUT_CH;\n\n    double *b;\n    double *W;\n    double *b_grad;\n    double *W_grad;\n\n    double *images;\n    uint32_t *targets;\n    float learning_rate;\n\n    precision_t dtype;\n\n} network_fp64_t;\n\ntypedef struct network_fp32_t_ {\n    uint32_t IN_CH1;\n    uint32_t IN_CH2;\n    uint32_t OUT_CH;\n\n    float *b;\n    float *W;\n    float *b_grad;\n    float *W_grad;\n\n    float *images;\n    uint32_t *targets;\n    float learning_rate;\n\n    precision_t dtype;\n\n} network_fp32_t;\n\ntypedef struct network_fp16_t_ {\n    uint32_t IN_CH1;\n    uint32_t IN_CH2;\n    uint32_t OUT_CH;\n\n    __fp16 *b;\n    __fp16 *W;\n    __fp16 *b_grad;\n    __fp16 *W_grad;\n\n    __fp16 *images;\n    uint32_t *targets;\n    float learning_rate;\n\n    precision_t dtype;\n\n} network_fp16_t;\n\ntypedef struct network_fp8_t_ {\n    uint32_t IN_CH1;\n    uint32_t IN_CH2;\n    uint32_t OUT_CH;\n\n    char *b;\n    char *W;\n    char *b_grad;\n    char *W_grad;\n\n    char *images;\n    uint32_t *targets;\n    float learning_rate;\n\n    precision_t dtype;\n\n} network_fp8_t;\n\n// TODO: add description for MNIST CNN network struct\ntypedef struct cnn_t_ {\n    uint16_t CO;\n    uint16_t CI;\n    uint16_t H;\n    uint16_t W;\n    uint16_t K;\n    uint16_t M;\n\n    uint16_t padding;\n    uint16_t stride;\n\n    double *image;\n    double *conv1_weights;\n    double *conv1_biases;\n\n    precision_t dtype;\n\n} cnn_t;\n\ntypedef struct network_benchmark_t_ {\n    uint32_t IN_CH;\n    uint32_t OUT_CH;\n\n    void *b;\n    void *W;\n\n    void *images;\n    uint32_t *targets;\n\n    precision_t dtype;\n\n} network_benchmark_t;\n\ntypedef struct network_single_cluster_t_ {\n    uint32_t IN_CH;\n    uint32_t OUT_CH;\n\n    void *b;\n    void *W;\n\n    void *b_grads;\n    void *W_grads;\n\n    void *images;\n    uint32_t *targets;\n\n    precision_t dtype;\n\n} network_single_cluster_t;\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/nnlinear__backend__baseline_8h/","title":"applications/src/layers/nnlinear_backend_baseline.h","text":""},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#functions","title":"Functions","text":"Name void nnlinear_backend_baseline(const network_fp32_t * n)MNIST baseline network handling data transfers &amp; function calls for a single core execution and no fancy optimizations like SSRs or FREP."},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#function-nnlinear_backend_baseline","title":"function nnlinear_backend_baseline","text":"<pre><code>void nnlinear_backend_baseline(\n    const network_fp32_t * n\n)\n</code></pre> <p>MNIST baseline network handling data transfers &amp; function calls for a single core execution and no fancy optimizations like SSRs or FREP. </p> <p>Parameters: </p> <ul> <li>n network_t struct holding all addresses and parameters which are in FP32 format </li> </ul>"},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"network.h\"\n\nvoid nnlinear_backend_baseline(const network_fp32_t *n);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/nnlinear__baseline_8h/","title":"applications/src/kernels/nnlinear_baseline.h","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#classes","title":"Classes","text":"Name union v2s union v4s union v8s"},{"location":"runtime/Files/nnlinear__baseline_8h/#types","title":"Types","text":"Name typedef float v2f32((vector_size(8))) attribute"},{"location":"runtime/Files/nnlinear__baseline_8h/#functions","title":"Functions","text":"Name void SoftMax_baseline(float * activations, int length) void FeedForward_baseline(float * image, float * activations, float * biases, float * weights) void GradientUpdate_baseline(float * image, float * activations, float * biases, float * weights, float * W_gradients, float * b_gradients, uint32_t label, float * loss) void TrainingStep_baseline(float * biases, float * weights, float * W_gradients, float * b_gradients, float learning_rate)"},{"location":"runtime/Files/nnlinear__baseline_8h/#defines","title":"Defines","text":"Name NUM_CLASSES IN_CH BATCH_SIZE"},{"location":"runtime/Files/nnlinear__baseline_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#typedef-attribute","title":"typedef attribute","text":"<pre><code>typedef char v8f8 __attribute__((vector_size(8)));\n</code></pre>"},{"location":"runtime/Files/nnlinear__baseline_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#function-softmax_baseline","title":"function SoftMax_baseline","text":"<pre><code>static inline void SoftMax_baseline(\n    float * activations,\n    int length\n)\n</code></pre> <p>SoftMax calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#function-feedforward_baseline","title":"function FeedForward_baseline","text":"<pre><code>static inline void FeedForward_baseline(\n    float * image,\n    float * activations,\n    float * biases,\n    float * weights\n)\n</code></pre> <p>FeedForward calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#function-gradientupdate_baseline","title":"function GradientUpdate_baseline","text":"<pre><code>static inline void GradientUpdate_baseline(\n    float * image,\n    float * activations,\n    float * biases,\n    float * weights,\n    float * W_gradients,\n    float * b_gradients,\n    uint32_t label,\n    float * loss\n)\n</code></pre> <p>Gradient update calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#function-trainingstep_baseline","title":"function TrainingStep_baseline","text":"<pre><code>static inline void TrainingStep_baseline(\n    float * biases,\n    float * weights,\n    float * W_gradients,\n    float * b_gradients,\n    float learning_rate\n)\n</code></pre> <p>Training step calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#define-num_classes","title":"define NUM_CLASSES","text":"<pre><code>#define NUM_CLASSES 10\n</code></pre> <p>Baseline kernels for a single core execution </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#define-in_ch","title":"define IN_CH","text":"<pre><code>#define IN_CH 784\n</code></pre>"},{"location":"runtime/Files/nnlinear__baseline_8h/#define-batch_size","title":"define BATCH_SIZE","text":"<pre><code>#define BATCH_SIZE 256\n</code></pre>"},{"location":"runtime/Files/nnlinear__baseline_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include \"math.h\"\n#include \"printf.h\"\n#include \"snrt.h\"\n#include \"utils.h\"\n\ntypedef float v2f32 __attribute__((vector_size(8)));\ntypedef __fp16 v4f16 __attribute__((vector_size(8)));\ntypedef char v8f8 __attribute__((vector_size(8)));\n\ntypedef union {\n    double f64;\n    v2f32 vec;\n} v2s;\ntypedef union {\n    double f64;\n    v4f16 vec;\n} v4s;\ntypedef union {\n    double f64;\n    v8f8 vec;\n} v8s;\n\n#define NUM_CLASSES 10\n#define IN_CH 784\n#define BATCH_SIZE 256\n\nstatic inline void SoftMax_baseline(float *activations, int length) {\n    // printf(\"============= SoftMax feedforward start =============\\n\");\n    float sum = 0;\n    float max = activations[0];\n    int correct, predict = 0;\n\n    // Get the maximum value of all activations\n    for (int i = 1; i &lt; length; i++) {\n        if (activations[i] &gt; max) {\n            max = activations[i];\n        }\n    }\n\n    // normalize\n    for (int i = 0; i &lt; length; i++) {\n        activations[i] = exp(activations[i] - max);\n        sum += activations[i];\n    }\n\n    // compute softmax activations\n    for (int i = 0; i &lt; length; i++) {\n        activations[i] /= sum;\n        // printf(\"activations[%d] = %f\\n\", i, activations[i]);\n    }\n\n    // printf(\"============= SoftMax feedforward end =============\\n\");\n\n    // snrt_cluster_hw_barrier();\n}\n\nstatic inline void FeedForward_baseline(float *image, float *activations,\n                                        float *biases, float *weights) {\n    // printf(\"============= Feedforward pass start =============\\n\");\n\n    // float checksum = 0;\n    // float img_checksum = 0;\n    // float weight_checksum = 0;\n    for (int i = 0; i &lt; NUM_CLASSES; i++) {\n        activations[i] = biases[i];\n        for (int j = 0; j &lt; IN_CH; j++) {\n            // img_checksum += image[j];\n            // weight_checksum += weights[i * IN_CH + j];\n            activations[i] += weights[i * IN_CH + j] * image[j];\n        }\n\n        // checksum += activations[i];\n\n        // printf(\"activations[%d] = %f\\n\", i, activations[i]);\n    }\n\n    // printf(\"Activation checksum = %f\\n\", checksum);\n    // printf(\"Image FeedForward checksum = %f\\n\", img_checksum);\n    // printf(\"Weight FeedForward checksum = %f\\n\", weight_checksum);\n\n    // printf(\"============= Feedforward pass end =============\\n\");\n\n    // snrt_cluster_hw_barrier();\n\n    SoftMax_baseline(activations, NUM_CLASSES);\n}\n\nstatic inline void GradientUpdate_baseline(float *image, float *activations,\n                                           float *biases, float *weights,\n                                           float *W_gradients,\n                                           float *b_gradients, uint32_t label,\n                                           float *loss) {\n    FeedForward_baseline(image, activations, biases, weights);\n\n    loss[0] = 0.0f - log(activations[label]);\n    // printf(\"loss = %f, label = %u, activation = %f\\n\", loss[0], label,\n    // activations[label]);\n\n    snrt_cluster_hw_barrier();\n\n    float b_grad, W_grad;\n    for (int i = 0; i &lt; NUM_CLASSES; i++) {\n        b_grad = (i == label) ? (activations[i] - 1) : activations[i];\n        for (int j = 0; j &lt; IN_CH; j++) {\n            W_grad = b_grad * image[j];\n            W_gradients[i * IN_CH + j] += W_grad;\n        }\n\n        b_gradients[i] += b_grad;\n    }\n\n    // return loss;\n    snrt_cluster_hw_barrier();\n}\n\nstatic inline void TrainingStep_baseline(float *biases, float *weights,\n                                         float *W_gradients, float *b_gradients,\n                                         float learning_rate) {\n    // float b_checksum = 0;\n    // float W_checksum = 0;\n    // float b_grad_checksum = 0;\n    // float W_grad_checksum = 0;\n    for (int i = 0; i &lt; NUM_CLASSES; i++) {\n        biases[i] -= learning_rate * b_gradients[i] / BATCH_SIZE;\n        // b_grad_checksum += b_gradients[i];\n        // b_checksum += biases[i];\n        for (int j = 0; j &lt; IN_CH; j++) {\n            weights[i * IN_CH + j] -=\n                learning_rate * W_gradients[i * IN_CH + j] / BATCH_SIZE;\n            // W_checksum += weights[i * IN_CH + j];\n            // W_grad_checksum += W_gradients[i * IN_CH + j];\n        }\n    }\n\n    // printf(\"b_checksum = %f\\n\", b_checksum);\n    // printf(\"W_checksum = %f\\n\", W_checksum);\n    // printf(\"b_grad_checksum = %f\\n\", b_grad_checksum);\n    // printf(\"W_grad_checksum = %f\\n\", W_grad_checksum);\n\n    snrt_cluster_hw_barrier();\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/omp_8h/","title":"snRuntime/src/omp/omp.h","text":""},{"location":"runtime/Files/omp_8h/#classes","title":"Classes","text":"Name struct omp_team_t struct omp_t struct omp_prof_t"},{"location":"runtime/Files/omp_8h/#functions","title":"Functions","text":"Name void omp_init(void ) unsigned snrt_omp_bootstrap(uint32_t core_idx) void partialParallelRegion(int32_t argc, void * data, void()(void , uint32_t) fn, int num_threads) void omp_print_prof(void ) omp_t * omp_getData() omp_team_t * omp_get_team(omp_t * _this) unsigned omp_get_thread_num(void ) void parallelRegion(int32_t argc, void * data, void()(void , uint32_t) fn, int num_threads)"},{"location":"runtime/Files/omp_8h/#attributes","title":"Attributes","text":"Name omp_prof_t * omp_prof __thread omp_t volatile * omp_p"},{"location":"runtime/Files/omp_8h/#defines","title":"Defines","text":"Name OPENMP_PROFILE OMP_PROF(X) OMP_PRINTF(d, ...) _OMP_T _OMP_TEAM_T __snrt_omp_bootstrap(core_idx) Bootstrap macro for openmp applications. __snrt_omp_destroy(core_idx) Destroy an OpenMP session so all cores exit cleanly."},{"location":"runtime/Files/omp_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/omp_8h/#function-omp_init","title":"function omp_init","text":"<pre><code>void omp_init(\n    void \n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-snrt_omp_bootstrap","title":"function snrt_omp_bootstrap","text":"<pre><code>unsigned snrt_omp_bootstrap(\n    uint32_t core_idx\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-partialparallelregion","title":"function partialParallelRegion","text":"<pre><code>void partialParallelRegion(\n    int32_t argc,\n    void * data,\n    void(*)(void *, uint32_t) fn,\n    int num_threads\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_print_prof","title":"function omp_print_prof","text":"<pre><code>void omp_print_prof(\n    void \n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_getdata","title":"function omp_getData","text":"<pre><code>static inline omp_t * omp_getData()\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_get_team","title":"function omp_get_team","text":"<pre><code>static inline omp_team_t * omp_get_team(\n    omp_t * _this\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_get_thread_num","title":"function omp_get_thread_num","text":"<pre><code>static inline unsigned omp_get_thread_num(\n    void \n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-parallelregion","title":"function parallelRegion","text":"<pre><code>static inline void parallelRegion(\n    int32_t argc,\n    void * data,\n    void(*)(void *, uint32_t) fn,\n    int num_threads\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/omp_8h/#variable-omp_prof","title":"variable omp_prof","text":"<pre><code>omp_prof_t * omp_prof;\n</code></pre>"},{"location":"runtime/Files/omp_8h/#variable-omp_p","title":"variable omp_p","text":"<pre><code>__thread omp_t volatile * omp_p;\n</code></pre>"},{"location":"runtime/Files/omp_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/omp_8h/#define-openmp_profile","title":"define OPENMP_PROFILE","text":"<pre><code>#define OPENMP_PROFILE \n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-omp_prof","title":"define OMP_PROF","text":"<pre><code>#define OMP_PROF(\n    X\n)\n    do {            \\\n        { X; }      \\\n    } while (0)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-omp_printf","title":"define OMP_PRINTF","text":"<pre><code>#define OMP_PRINTF(\n    d,\n    ...\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-_omp_t","title":"define _OMP_T","text":"<pre><code>#define _OMP_T omp_t\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-_omp_team_t","title":"define _OMP_TEAM_T","text":"<pre><code>#define _OMP_TEAM_T omp_team_t\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-__snrt_omp_bootstrap","title":"define __snrt_omp_bootstrap","text":"<pre><code>#define __snrt_omp_bootstrap(\n    core_idx\n)\n    if (snrt_omp_bootstrap(core_idx)) do { \\\n            snrt_cluster_hw_barrier();     \\\n            return 0;                      \\\n    } while (0)\n</code></pre> <p>Bootstrap macro for openmp applications. </p>"},{"location":"runtime/Files/omp_8h/#define-__snrt_omp_destroy","title":"define __snrt_omp_destroy","text":"<pre><code>#define __snrt_omp_destroy(\n    core_idx\n)\neu_exit(core_idx);               \\\n    dm_exit();                       \\\n    snrt_cluster_hw_barrier();\n</code></pre> <p>Destroy an OpenMP session so all cores exit cleanly. </p>"},{"location":"runtime/Files/omp_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\n#include \"eu.h\"\n#include \"kmp.h\"\n\n//================================================================================\n// debug\n//================================================================================\n#define OPENMP_PROFILE\n\n#ifdef OPENMP_PROFILE\n#define OMP_PROF(X) \\\n    do {            \\\n        { X; }      \\\n    } while (0)\n#else\n#define OMP_PROF(X) \\\n    do {            \\\n    } while (0)\n#endif\n\n#ifdef OMP_DEBUG_LEVEL\n#include \"encoding.h\"\n#include \"printf.h\"\n#define _OMP_PRINTF(...)             \\\n    if (1) {                         \\\n        printf(\"[omp] \"__VA_ARGS__); \\\n    }\n#define OMP_PRINTF(d, ...)        \\\n    if (OMP_DEBUG_LEVEL &gt;= d) {   \\\n        _OMP_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define OMP_PRINTF(d, ...)\n#endif\n\n//================================================================================\n// Macros\n//================================================================================\n#ifdef OMPSTATIC_NUMTHREADS\n#define _OMP_T const omp_t\n#define _OMP_TEAM_T const omp_team_t\n#else\n#define _OMP_T omp_t\n#define _OMP_TEAM_T omp_team_t\n#endif\n\n#define __snrt_omp_bootstrap(core_idx)     \\\n    if (snrt_omp_bootstrap(core_idx)) do { \\\n            snrt_cluster_hw_barrier();     \\\n            return 0;                      \\\n    } while (0)\n\n#define __snrt_omp_destroy(core_idx) \\\n    eu_exit(core_idx);               \\\n    dm_exit();                       \\\n    snrt_cluster_hw_barrier();\n\n//================================================================================\n// types\n//================================================================================\n\ntypedef struct {\n    char nbThreads;\n#ifndef OMPSTATIC_NUMTHREADS\n    int loop_epoch;\n    int loop_start;\n    int loop_end;\n    int loop_incr;\n    int loop_chunk;\n    int loop_is_setup;\n    int core_epoch[16];  // for dynamic scheduling\n#endif\n} omp_team_t;\n\ntypedef struct {\n#ifndef OMPSTATIC_NUMTHREADS\n    omp_team_t plainTeam;\n    int numThreads;\n    int maxThreads;\n#else\n    const omp_team_t plainTeam;\n    const int numThreads;\n    const int maxThreads;\n#endif\n    snrt_barrier_t *kmpc_barrier;\n    _kmp_ptr32 *kmpc_args;\n} omp_t;\n\n#ifdef OPENMP_PROFILE\ntypedef struct {\n    uint32_t fork_oh;\n} omp_prof_t;\nextern omp_prof_t *omp_prof;\n#endif\n\n#ifndef OMPSTATIC_NUMTHREADS\nextern __thread omp_t volatile *omp_p;\n#else\nextern omp_t omp_p;\n#endif\n\n//================================================================================\n// exported\n//================================================================================\n\nvoid omp_init(void);\nunsigned snrt_omp_bootstrap(uint32_t core_idx);\nvoid partialParallelRegion(int32_t argc, void *data,\n                           void (*fn)(void *, uint32_t), int num_threads);\n\nvoid omp_print_prof(void);\n#ifdef OPENMP_PROFILE\nextern omp_prof_t *omp_prof;\n#endif\n\n//================================================================================\n// inlines\n//================================================================================\n\n#ifndef OMPSTATIC_NUMTHREADS\nstatic inline omp_t *omp_getData() { return (omp_t *)omp_p; }\nstatic inline omp_team_t *omp_get_team(omp_t *_this) {\n    return &amp;_this-&gt;plainTeam;\n}\n#else\nstatic inline const omp_t *omp_getData() { return &amp;omp_p; }\nstatic inline const omp_team_t *omp_get_team(const omp_t *_this) {\n    return &amp;_this-&gt;plainTeam;\n}\n#endif\n\nstatic inline unsigned omp_get_thread_num(void) {\n    return snrt_cluster_core_idx();\n}\n\nstatic inline void parallelRegion(int32_t argc, void *data,\n                                  void (*fn)(void *, uint32_t),\n                                  int num_threads) {\n#ifndef OMPSTATIC_NUMTHREADS\n    omp_p-&gt;plainTeam.nbThreads = num_threads;\n#endif\n\n    OMP_PRINTF(10, \"num_threads=%d nbThreads=%d omp_p-&gt;numThreads=%d\\n\",\n               num_threads, omp_p-&gt;plainTeam.nbThreads, omp_p-&gt;numThreads);\n\n    // Now that the team is ready, wake up slaves\n    (void)eu_dispatch_push(fn, argc, data, num_threads);\n\n    eu_run_empty(snrt_cluster_core_idx());\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/perf__cnt_8h/","title":"snRuntime/src/perf_cnt.h","text":""},{"location":"runtime/Files/perf__cnt_8h/#classes","title":"Classes","text":"Name union perf_reg32_t struct perf_regs_t"},{"location":"runtime/Files/perf__cnt_8h/#types","title":"Types","text":"Name enum snrt_perf_cnt { SNRT_PERF_CNT0, SNRT_PERF_CNT1, SNRT_PERF_CNT2, SNRT_PERF_CNT3, SNRT_PERF_CNT4, SNRT_PERF_CNT5, SNRT_PERF_CNT6, SNRT_PERF_CNT7, SNRT_PERF_CNT8, SNRT_PERF_CNT9, SNRT_PERF_CNT10, SNRT_PERF_CNT11, SNRT_PERF_CNT12, SNRT_PERF_CNT13, SNRT_PERF_CNT14, SNRT_PERF_CNT15, SNRT_PERF_N_CNT}Different perf counters. enum snrt_perf_cnt_type { SNRT_PERF_CNT_CYCLES, SNRT_PERF_CNT_TCDM_ACCESSED, SNRT_PERF_CNT_TCDM_CONGESTED, SNRT_PERF_CNT_ISSUE_FPU, SNRT_PERF_CNT_ISSUE_FPU_SEQ, SNRT_PERF_CNT_ISSUE_CORE_TO_FPU, SNRT_PERF_CNT_RETIRED_INSTR, SNRT_PERF_CNT_RETIRED_LOAD, SNRT_PERF_CNT_RETIRED_I, SNRT_PERF_CNT_RETIRED_ACC, SNRT_PERF_CNT_DMA_AW_STALL, SNRT_PERF_CNT_DMA_AR_STALL, SNRT_PERF_CNT_DMA_R_STALL, SNRT_PERF_CNT_DMA_W_STALL, SNRT_PERF_CNT_DMA_BUF_W_STALL, SNRT_PERF_CNT_DMA_BUF_R_STALL, SNRT_PERF_CNT_DMA_AW_DONE, SNRT_PERF_CNT_DMA_AW_BW, SNRT_PERF_CNT_DMA_AR_DONE, SNRT_PERF_CNT_DMA_AR_BW, SNRT_PERF_CNT_DMA_R_DONE, SNRT_PERF_CNT_DMA_R_BW, SNRT_PERF_CNT_DMA_W_DONE, SNRT_PERF_CNT_DMA_W_BW, SNRT_PERF_CNT_DMA_B_DONE, SNRT_PERF_CNT_DMA_BUSY, SNRT_PERF_CNT_ICACHE_MISS, SNRT_PERF_CNT_ICACHE_HIT, SNRT_PERF_CNT_ICACHE_PREFETCH, SNRT_PERF_CNT_ICACHE_DOUBLE_HIT, SNRT_PERF_CNT_ICACHE_STALL}Different types of performance counters."},{"location":"runtime/Files/perf__cnt_8h/#functions","title":"Functions","text":"Name perf_regs_t * snrt_perf_counters() void snrt_start_perf_counter(enum snrt_perf_cnt perf_cnt, enum snrt_perf_cnt_type perf_cnt_type, uint32_t hart_id) void snrt_stop_perf_counter(enum snrt_perf_cnt perf_cnt) void snrt_reset_perf_counter(enum snrt_perf_cnt perf_cnt) uint32_t snrt_get_perf_counter(enum snrt_perf_cnt perf_cnt)"},{"location":"runtime/Files/perf__cnt_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/perf__cnt_8h/#enum-snrt_perf_cnt","title":"enum snrt_perf_cnt","text":"Enumerator Value Description SNRT_PERF_CNT0 SNRT_PERF_CNT1 SNRT_PERF_CNT2 SNRT_PERF_CNT3 SNRT_PERF_CNT4 SNRT_PERF_CNT5 SNRT_PERF_CNT6 SNRT_PERF_CNT7 SNRT_PERF_CNT8 SNRT_PERF_CNT9 SNRT_PERF_CNT10 SNRT_PERF_CNT11 SNRT_PERF_CNT12 SNRT_PERF_CNT13 SNRT_PERF_CNT14 SNRT_PERF_CNT15 SNRT_PERF_N_CNT <p>Different perf counters. </p>"},{"location":"runtime/Files/perf__cnt_8h/#enum-snrt_perf_cnt_type","title":"enum snrt_perf_cnt_type","text":"Enumerator Value Description SNRT_PERF_CNT_CYCLES SNRT_PERF_CNT_TCDM_ACCESSED SNRT_PERF_CNT_TCDM_CONGESTED SNRT_PERF_CNT_ISSUE_FPU SNRT_PERF_CNT_ISSUE_FPU_SEQ SNRT_PERF_CNT_ISSUE_CORE_TO_FPU SNRT_PERF_CNT_RETIRED_INSTR SNRT_PERF_CNT_RETIRED_LOAD SNRT_PERF_CNT_RETIRED_I SNRT_PERF_CNT_RETIRED_ACC SNRT_PERF_CNT_DMA_AW_STALL SNRT_PERF_CNT_DMA_AR_STALL SNRT_PERF_CNT_DMA_R_STALL SNRT_PERF_CNT_DMA_W_STALL SNRT_PERF_CNT_DMA_BUF_W_STALL SNRT_PERF_CNT_DMA_BUF_R_STALL SNRT_PERF_CNT_DMA_AW_DONE SNRT_PERF_CNT_DMA_AW_BW SNRT_PERF_CNT_DMA_AR_DONE SNRT_PERF_CNT_DMA_AR_BW SNRT_PERF_CNT_DMA_R_DONE SNRT_PERF_CNT_DMA_R_BW SNRT_PERF_CNT_DMA_W_DONE SNRT_PERF_CNT_DMA_W_BW SNRT_PERF_CNT_DMA_B_DONE SNRT_PERF_CNT_DMA_BUSY SNRT_PERF_CNT_ICACHE_MISS SNRT_PERF_CNT_ICACHE_HIT SNRT_PERF_CNT_ICACHE_PREFETCH SNRT_PERF_CNT_ICACHE_DOUBLE_HIT SNRT_PERF_CNT_ICACHE_STALL <p>Different types of performance counters. </p>"},{"location":"runtime/Files/perf__cnt_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_perf_counters","title":"function snrt_perf_counters","text":"<pre><code>inline perf_regs_t * snrt_perf_counters()\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_start_perf_counter","title":"function snrt_start_perf_counter","text":"<pre><code>inline void snrt_start_perf_counter(\n    enum snrt_perf_cnt perf_cnt,\n    enum snrt_perf_cnt_type perf_cnt_type,\n    uint32_t hart_id\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_stop_perf_counter","title":"function snrt_stop_perf_counter","text":"<pre><code>inline void snrt_stop_perf_counter(\n    enum snrt_perf_cnt perf_cnt\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_reset_perf_counter","title":"function snrt_reset_perf_counter","text":"<pre><code>inline void snrt_reset_perf_counter(\n    enum snrt_perf_cnt perf_cnt\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_get_perf_counter","title":"function snrt_get_perf_counter","text":"<pre><code>inline uint32_t snrt_get_perf_counter(\n    enum snrt_perf_cnt perf_cnt\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n// Must match with `snitch_cluster_peripheral`\nenum snrt_perf_cnt {\n    SNRT_PERF_CNT0,\n    SNRT_PERF_CNT1,\n    SNRT_PERF_CNT2,\n    SNRT_PERF_CNT3,\n    SNRT_PERF_CNT4,\n    SNRT_PERF_CNT5,\n    SNRT_PERF_CNT6,\n    SNRT_PERF_CNT7,\n    SNRT_PERF_CNT8,\n    SNRT_PERF_CNT9,\n    SNRT_PERF_CNT10,\n    SNRT_PERF_CNT11,\n    SNRT_PERF_CNT12,\n    SNRT_PERF_CNT13,\n    SNRT_PERF_CNT14,\n    SNRT_PERF_CNT15,\n    SNRT_PERF_N_CNT,\n};\n\nenum snrt_perf_cnt_type {\n    SNRT_PERF_CNT_CYCLES,\n    SNRT_PERF_CNT_TCDM_ACCESSED,\n    SNRT_PERF_CNT_TCDM_CONGESTED,\n    SNRT_PERF_CNT_ISSUE_FPU,\n    SNRT_PERF_CNT_ISSUE_FPU_SEQ,\n    SNRT_PERF_CNT_ISSUE_CORE_TO_FPU,\n    SNRT_PERF_CNT_RETIRED_INSTR,\n    SNRT_PERF_CNT_RETIRED_LOAD,\n    SNRT_PERF_CNT_RETIRED_I,\n    SNRT_PERF_CNT_RETIRED_ACC,\n    SNRT_PERF_CNT_DMA_AW_STALL,\n    SNRT_PERF_CNT_DMA_AR_STALL,\n    SNRT_PERF_CNT_DMA_R_STALL,\n    SNRT_PERF_CNT_DMA_W_STALL,\n    SNRT_PERF_CNT_DMA_BUF_W_STALL,\n    SNRT_PERF_CNT_DMA_BUF_R_STALL,\n    SNRT_PERF_CNT_DMA_AW_DONE,\n    SNRT_PERF_CNT_DMA_AW_BW,\n    SNRT_PERF_CNT_DMA_AR_DONE,\n    SNRT_PERF_CNT_DMA_AR_BW,\n    SNRT_PERF_CNT_DMA_R_DONE,\n    SNRT_PERF_CNT_DMA_R_BW,\n    SNRT_PERF_CNT_DMA_W_DONE,\n    SNRT_PERF_CNT_DMA_W_BW,\n    SNRT_PERF_CNT_DMA_B_DONE,\n    SNRT_PERF_CNT_DMA_BUSY,\n    SNRT_PERF_CNT_ICACHE_MISS,\n    SNRT_PERF_CNT_ICACHE_HIT,\n    SNRT_PERF_CNT_ICACHE_PREFETCH,\n    SNRT_PERF_CNT_ICACHE_DOUBLE_HIT,\n    SNRT_PERF_CNT_ICACHE_STALL,\n};\n\ntypedef union {\n    uint32_t value __attribute__((aligned(8)));\n} perf_reg32_t;\n\ntypedef struct {\n    volatile perf_reg32_t enable[SNRT_PERF_N_CNT];\n    volatile perf_reg32_t hart_select[SNRT_PERF_N_CNT];\n    volatile perf_reg32_t perf_counter[SNRT_PERF_N_CNT];\n} perf_regs_t;\n\ninline perf_regs_t* snrt_perf_counters() {\n    return (perf_regs_t*)snrt_cluster_perf_counters_addr();\n}\n\n// Enable a specific perf_counter\ninline void snrt_start_perf_counter(enum snrt_perf_cnt perf_cnt,\n                                    enum snrt_perf_cnt_type perf_cnt_type,\n                                    uint32_t hart_id) {\n    snrt_perf_counters()-&gt;hart_select[perf_cnt].value |= hart_id;\n    snrt_perf_counters()-&gt;enable[perf_cnt].value = (0x1 &lt;&lt; perf_cnt_type);\n}\n\n// Stops the counter but does not reset it\ninline void snrt_stop_perf_counter(enum snrt_perf_cnt perf_cnt) {\n    snrt_perf_counters()-&gt;enable[perf_cnt].value = 0x0;\n}\n\n// Resets the counter completely\ninline void snrt_reset_perf_counter(enum snrt_perf_cnt perf_cnt) {\n    snrt_perf_counters()-&gt;enable[perf_cnt].value = 0x0;\n    snrt_perf_counters()-&gt;hart_select[perf_cnt].value = 0x0;\n    snrt_perf_counters()-&gt;perf_counter[perf_cnt].value = 0x0;\n}\n\n// Get counter of specified perf_counter\ninline uint32_t snrt_get_perf_counter(enum snrt_perf_cnt perf_cnt) {\n    return (uint32_t)(snrt_perf_counters()-&gt;perf_counter[perf_cnt].value);\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/riscv_8h/","title":"snRuntime/src/riscv.h","text":""},{"location":"runtime/Files/riscv_8h/#functions","title":"Functions","text":"Name void snrt_wfi()Put the hart into wait for interrupt state. uint32_t mcycle() void snrt_interrupt_enable(uint32_t irq)Enable interrupt source irq. void snrt_interrupt_disable(uint32_t irq)Disable interrupt source. void snrt_interrupt_global_enable(void )Globally enable M-mode interrupts. void snrt_interrupt_global_disable(void )Globally disable interrupts."},{"location":"runtime/Files/riscv_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/riscv_8h/#function-snrt_wfi","title":"function snrt_wfi","text":"<pre><code>static inline void snrt_wfi()\n</code></pre> <p>Put the hart into wait for interrupt state. </p>"},{"location":"runtime/Files/riscv_8h/#function-mcycle","title":"function mcycle","text":"<pre><code>static inline uint32_t mcycle()\n</code></pre>"},{"location":"runtime/Files/riscv_8h/#function-snrt_interrupt_enable","title":"function snrt_interrupt_enable","text":"<pre><code>inline void snrt_interrupt_enable(\n    uint32_t irq\n)\n</code></pre> <p>Enable interrupt source irq. </p> <p>Parameters: </p> <ul> <li>irq one of IRQ_[S/H/M]_[SOFT/TIMER/EXT] interrupts </li> </ul> <p>Enable interrupt, either wakes from wfi or if global interrupts are enabled, jumps to the IRQ handler</p>"},{"location":"runtime/Files/riscv_8h/#function-snrt_interrupt_disable","title":"function snrt_interrupt_disable","text":"<pre><code>inline void snrt_interrupt_disable(\n    uint32_t irq\n)\n</code></pre> <p>Disable interrupt source. </p> <p>Parameters: </p> <ul> <li>irq one of IRQ_[S/H/M]_[SOFT/TIMER/EXT] </li> </ul> <p>See snrt_interrupt_enable</p>"},{"location":"runtime/Files/riscv_8h/#function-snrt_interrupt_global_enable","title":"function snrt_interrupt_global_enable","text":"<pre><code>inline void snrt_interrupt_global_enable(\n    void \n)\n</code></pre> <p>Globally enable M-mode interrupts. </p> <p>On an interrupt event the core will jump to __snrt_crt0_interrupt_handler service the interrupt and continue normal execution. Enable interrupt sources with snrt_interrupt_enable </p>"},{"location":"runtime/Files/riscv_8h/#function-snrt_interrupt_global_disable","title":"function snrt_interrupt_global_disable","text":"<pre><code>inline void snrt_interrupt_global_disable(\n    void \n)\n</code></pre> <p>Globally disable interrupts. </p>"},{"location":"runtime/Files/riscv_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"riscv_decls.h\"\n\nstatic inline void snrt_wfi() { asm volatile(\"wfi\"); }\n\nstatic inline uint32_t mcycle() {\n    uint32_t register r;\n    asm volatile(\"csrr %0, mcycle\" : \"=r\"(r) : : \"memory\");\n    return r;\n}\n\ninline void snrt_interrupt_enable(uint32_t irq) { set_csr(mie, 1 &lt;&lt; irq); }\n\ninline void snrt_interrupt_disable(uint32_t irq) { clear_csr(mie, 1 &lt;&lt; irq); }\n\ninline void snrt_interrupt_global_enable(void) {\n    set_csr(mstatus, MSTATUS_MIE);  // set M global interrupt enable\n}\ninline void snrt_interrupt_global_disable(void) {\n    clear_csr(mstatus, MSTATUS_MIE);\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/riscv__decls_8h/","title":"snRuntime/api/riscv_decls.h","text":""},{"location":"runtime/Files/riscv__decls_8h/#functions","title":"Functions","text":"Name void snrt_wfi() uint32_t mcycle() void snrt_interrupt_enable(uint32_t irq)Enable interrupt source irq. void snrt_interrupt_disable(uint32_t irq)Disable interrupt source. void snrt_interrupt_global_enable(void )Globally enable M-mode interrupts. void snrt_interrupt_global_disable(void )Globally disable interrupts."},{"location":"runtime/Files/riscv__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/riscv__decls_8h/#function-snrt_wfi","title":"function snrt_wfi","text":"<pre><code>static inline void snrt_wfi()\n</code></pre>"},{"location":"runtime/Files/riscv__decls_8h/#function-mcycle","title":"function mcycle","text":"<pre><code>static inline uint32_t mcycle()\n</code></pre>"},{"location":"runtime/Files/riscv__decls_8h/#function-snrt_interrupt_enable","title":"function snrt_interrupt_enable","text":"<pre><code>inline void snrt_interrupt_enable(\n    uint32_t irq\n)\n</code></pre> <p>Enable interrupt source irq. </p> <p>Parameters: </p> <ul> <li>irq one of IRQ_[S/H/M]_[SOFT/TIMER/EXT] interrupts </li> </ul> <p>Enable interrupt, either wakes from wfi or if global interrupts are enabled, jumps to the IRQ handler</p>"},{"location":"runtime/Files/riscv__decls_8h/#function-snrt_interrupt_disable","title":"function snrt_interrupt_disable","text":"<pre><code>inline void snrt_interrupt_disable(\n    uint32_t irq\n)\n</code></pre> <p>Disable interrupt source. </p> <p>Parameters: </p> <ul> <li>irq one of IRQ_[S/H/M]_[SOFT/TIMER/EXT] </li> </ul> <p>See snrt_interrupt_enable</p>"},{"location":"runtime/Files/riscv__decls_8h/#function-snrt_interrupt_global_enable","title":"function snrt_interrupt_global_enable","text":"<pre><code>inline void snrt_interrupt_global_enable(\n    void \n)\n</code></pre> <p>Globally enable M-mode interrupts. </p> <p>On an interrupt event the core will jump to __snrt_crt0_interrupt_handler service the interrupt and continue normal execution. Enable interrupt sources with snrt_interrupt_enable </p>"},{"location":"runtime/Files/riscv__decls_8h/#function-snrt_interrupt_global_disable","title":"function snrt_interrupt_global_disable","text":"<pre><code>inline void snrt_interrupt_global_disable(\n    void \n)\n</code></pre> <p>Globally disable interrupts. </p>"},{"location":"runtime/Files/riscv__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"encoding.h\"\n\nstatic inline void snrt_wfi();\n\nstatic inline uint32_t mcycle();\n\ninline void snrt_interrupt_enable(uint32_t irq);\n\ninline void snrt_interrupt_disable(uint32_t irq);\n\ninline void snrt_interrupt_global_enable(void);\n\ninline void snrt_interrupt_global_disable(void);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/src_2printf_8h/","title":"snRuntime/src/printf.h","text":""},{"location":"runtime/Files/src_2printf_8h/#functions","title":"Functions","text":"Name void snrt_putchar(char character)"},{"location":"runtime/Files/src_2printf_8h/#defines","title":"Defines","text":"Name _putchar"},{"location":"runtime/Files/src_2printf_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/src_2printf_8h/#function-snrt_putchar","title":"function snrt_putchar","text":"<pre><code>void snrt_putchar(\n    char character\n)\n</code></pre>"},{"location":"runtime/Files/src_2printf_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/src_2printf_8h/#define-_putchar","title":"define _putchar","text":"<pre><code>#define _putchar snrt_putchar\n</code></pre>"},{"location":"runtime/Files/src_2printf_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n// Use snrt_putchar for printf\n#define _putchar snrt_putchar\n\nextern void snrt_putchar(char character);\n\n#include \"../vendor/printf/printf.h\"\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/ssr_8h/","title":"snRuntime/src/ssr.h","text":""},{"location":"runtime/Files/ssr_8h/#types","title":"Types","text":"Name enum snrt_ssr_dm { SNRT_SSR_DM0 = 0, SNRT_SSR_DM1 = 1, SNRT_SSR_DM2 = 2, SNRT_SSR_DM_ALL = 31}The different SSR data movers. enum snrt_ssr_dim { SNRT_SSR_1D = 0, SNRT_SSR_2D = 1, SNRT_SSR_3D = 2, SNRT_SSR_4D = 3}The different dimensions. enum @1 { REG_STATUS = 0, REG_REPEAT = 1, REG_BOUNDS = 2, REG_STRIDES = 6, REG_RPTR = 24, REG_WPTR = 28}The SSR configuration registers."},{"location":"runtime/Files/ssr_8h/#functions","title":"Functions","text":"Name void snrt_fpu_fence()Synchronize the integer and float pipelines. void snrt_ssr_enable()Enable SSR. void snrt_ssr_disable()Disable SSR. uint32_t read_ssr_cfg(uint32_t reg, uint32_t dm) void write_ssr_cfg(uint32_t reg, uint32_t dm, uint32_t value) void snrt_ssr_loop_1d(enum snrt_ssr_dm dm, size_t b0, size_t s0) void snrt_ssr_loop_2d(enum snrt_ssr_dm dm, size_t b0, size_t b1, size_t s0, size_t s1) void snrt_ssr_loop_3d(enum snrt_ssr_dm dm, size_t b0, size_t b1, size_t b2, size_t s0, size_t s1, size_t s2) void snrt_ssr_loop_4d(enum snrt_ssr_dm dm, size_t b0, size_t b1, size_t b2, size_t b3, size_t s0, size_t s1, size_t s2, size_t s3) void snrt_ssr_repeat(enum snrt_ssr_dm dm, size_t count)Configure the repetition count for a stream. void snrt_ssr_read(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim, volatile void * ptr)Start a streaming read. void snrt_ssr_write(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim, volatile void * ptr)Start a streaming write."},{"location":"runtime/Files/ssr_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/ssr_8h/#enum-snrt_ssr_dm","title":"enum snrt_ssr_dm","text":"Enumerator Value Description SNRT_SSR_DM0 0 SNRT_SSR_DM1 1 SNRT_SSR_DM2 2 SNRT_SSR_DM_ALL 31 <p>The different SSR data movers. </p>"},{"location":"runtime/Files/ssr_8h/#enum-snrt_ssr_dim","title":"enum snrt_ssr_dim","text":"Enumerator Value Description SNRT_SSR_1D 0 SNRT_SSR_2D 1 SNRT_SSR_3D 2 SNRT_SSR_4D 3 <p>The different dimensions. </p>"},{"location":"runtime/Files/ssr_8h/#enum-1","title":"enum @1","text":"Enumerator Value Description REG_STATUS 0 REG_REPEAT 1 REG_BOUNDS 2 REG_STRIDES 6 REG_RPTR 24 REG_WPTR 28 <p>The SSR configuration registers. </p>"},{"location":"runtime/Files/ssr_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/ssr_8h/#function-snrt_fpu_fence","title":"function snrt_fpu_fence","text":"<pre><code>inline void snrt_fpu_fence()\n</code></pre> <p>Synchronize the integer and float pipelines. </p>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_enable","title":"function snrt_ssr_enable","text":"<pre><code>inline void snrt_ssr_enable()\n</code></pre> <p>Enable SSR. </p>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_disable","title":"function snrt_ssr_disable","text":"<pre><code>inline void snrt_ssr_disable()\n</code></pre> <p>Disable SSR. </p>"},{"location":"runtime/Files/ssr_8h/#function-read_ssr_cfg","title":"function read_ssr_cfg","text":"<pre><code>inline uint32_t read_ssr_cfg(\n    uint32_t reg,\n    uint32_t dm\n)\n</code></pre>"},{"location":"runtime/Files/ssr_8h/#function-write_ssr_cfg","title":"function write_ssr_cfg","text":"<pre><code>inline void write_ssr_cfg(\n    uint32_t reg,\n    uint32_t dm,\n    uint32_t value\n)\n</code></pre>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_loop_1d","title":"function snrt_ssr_loop_1d","text":"<pre><code>inline void snrt_ssr_loop_1d(\n    enum snrt_ssr_dm dm,\n    size_t b0,\n    size_t s0\n)\n</code></pre>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_loop_2d","title":"function snrt_ssr_loop_2d","text":"<pre><code>inline void snrt_ssr_loop_2d(\n    enum snrt_ssr_dm dm,\n    size_t b0,\n    size_t b1,\n    size_t s0,\n    size_t s1\n)\n</code></pre>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_loop_3d","title":"function snrt_ssr_loop_3d","text":"<pre><code>inline void snrt_ssr_loop_3d(\n    enum snrt_ssr_dm dm,\n    size_t b0,\n    size_t b1,\n    size_t b2,\n    size_t s0,\n    size_t s1,\n    size_t s2\n)\n</code></pre>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_loop_4d","title":"function snrt_ssr_loop_4d","text":"<pre><code>inline void snrt_ssr_loop_4d(\n    enum snrt_ssr_dm dm,\n    size_t b0,\n    size_t b1,\n    size_t b2,\n    size_t b3,\n    size_t s0,\n    size_t s1,\n    size_t s2,\n    size_t s3\n)\n</code></pre>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_repeat","title":"function snrt_ssr_repeat","text":"<pre><code>inline void snrt_ssr_repeat(\n    enum snrt_ssr_dm dm,\n    size_t count\n)\n</code></pre> <p>Configure the repetition count for a stream. </p>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_read","title":"function snrt_ssr_read","text":"<pre><code>inline void snrt_ssr_read(\n    enum snrt_ssr_dm dm,\n    enum snrt_ssr_dim dim,\n    volatile void * ptr\n)\n</code></pre> <p>Start a streaming read. </p>"},{"location":"runtime/Files/ssr_8h/#function-snrt_ssr_write","title":"function snrt_ssr_write","text":"<pre><code>inline void snrt_ssr_write(\n    enum snrt_ssr_dm dm,\n    enum snrt_ssr_dim dim,\n    volatile void * ptr\n)\n</code></pre> <p>Start a streaming write. </p>"},{"location":"runtime/Files/ssr_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline void snrt_fpu_fence() {\n    unsigned tmp;\n    asm volatile(\n        \"fmv.x.w %0, fa0\\n\"\n        \"mv      %0, %0\\n\"\n        : \"+r\"(tmp)::\"memory\");\n}\n\nenum snrt_ssr_dm {\n    SNRT_SSR_DM0 = 0,\n    SNRT_SSR_DM1 = 1,\n    SNRT_SSR_DM2 = 2,\n    // To write to all SSRs, use index 31\n    SNRT_SSR_DM_ALL = 31,\n};\n\nenum snrt_ssr_dim {\n    SNRT_SSR_1D = 0,\n    SNRT_SSR_2D = 1,\n    SNRT_SSR_3D = 2,\n    SNRT_SSR_4D = 3,\n};\n\nenum {\n    REG_STATUS = 0,\n    REG_REPEAT = 1,\n    REG_BOUNDS = 2,   // + loop index\n    REG_STRIDES = 6,  // + loop index\n    REG_RPTR = 24,    // + snrt_ssr_dim\n    REG_WPTR = 28,    // + snrt_ssr_dim\n};\n\ninline void snrt_ssr_enable() {\n#ifdef __TOOLCHAIN_LLVM__\n    __builtin_ssr_enable();\n#else\n    asm volatile(\"csrsi 0x7C0, 1\\n\");\n#endif\n}\n\ninline void snrt_ssr_disable() {\n#ifdef __TOOLCHAIN_LLVM__\n    __builtin_ssr_disable();\n#else\n    asm volatile(\"csrci 0x7C0, 1\\n\");\n#endif\n}\n\ninline uint32_t read_ssr_cfg(uint32_t reg, uint32_t dm) {\n    uint32_t value;\n    asm volatile(\"scfgri %[value], %[dm] | %[reg]&lt;&lt;5\\n\"\n                 : [ value ] \"=r\"(value)\n                 : [ dm ] \"i\"(dm), [ reg ] \"i\"(reg));\n    return value;\n}\n\ninline void write_ssr_cfg(uint32_t reg, uint32_t dm, uint32_t value) {\n    asm volatile(\"scfgwi %[value], %[dm] | %[reg]&lt;&lt;5\\n\" ::[value] \"r\"(value),\n                 [ dm ] \"i\"(dm), [ reg ] \"i\"(reg));\n}\n\n// Configure an SSR data mover for a 1D loop nest.\ninline void snrt_ssr_loop_1d(enum snrt_ssr_dm dm, size_t b0, size_t s0) {\n    --b0;\n    write_ssr_cfg(REG_BOUNDS + 0, dm, b0);\n    size_t a = 0;\n    write_ssr_cfg(REG_STRIDES + 0, dm, s0 - a);\n    a += s0 * b0;\n}\n\n// Configure an SSR data mover for a 2D loop nest.\ninline void snrt_ssr_loop_2d(enum snrt_ssr_dm dm, size_t b0, size_t b1,\n                             size_t s0, size_t s1) {\n    --b0;\n    --b1;\n    write_ssr_cfg(REG_BOUNDS + 0, dm, b0);\n    write_ssr_cfg(REG_BOUNDS + 1, dm, b1);\n    size_t a = 0;\n    write_ssr_cfg(REG_STRIDES + 0, dm, s0 - a);\n    a += s0 * b0;\n    write_ssr_cfg(REG_STRIDES + 1, dm, s1 - a);\n    a += s1 * b1;\n}\n\n// Configure an SSR data mover for a 3D loop nest.\ninline void snrt_ssr_loop_3d(enum snrt_ssr_dm dm, size_t b0, size_t b1,\n                             size_t b2, size_t s0, size_t s1, size_t s2) {\n    --b0;\n    --b1;\n    --b2;\n    write_ssr_cfg(REG_BOUNDS + 0, dm, b0);\n    write_ssr_cfg(REG_BOUNDS + 1, dm, b1);\n    write_ssr_cfg(REG_BOUNDS + 2, dm, b2);\n    size_t a = 0;\n    write_ssr_cfg(REG_STRIDES + 0, dm, s0 - a);\n    a += s0 * b0;\n    write_ssr_cfg(REG_STRIDES + 1, dm, s1 - a);\n    a += s1 * b1;\n    write_ssr_cfg(REG_STRIDES + 2, dm, s2 - a);\n    a += s2 * b2;\n}\n\n// Configure an SSR data mover for a 4D loop nest.\n// b0: Inner-most bound (limit of loop)\n// b3: Outer-most bound (limit of loop)\n// s0: increment size of inner-most loop\ninline void snrt_ssr_loop_4d(enum snrt_ssr_dm dm, size_t b0, size_t b1,\n                             size_t b2, size_t b3, size_t s0, size_t s1,\n                             size_t s2, size_t s3) {\n    --b0;\n    --b1;\n    --b2;\n    --b3;\n    write_ssr_cfg(REG_BOUNDS + 0, dm, b0);\n    write_ssr_cfg(REG_BOUNDS + 1, dm, b1);\n    write_ssr_cfg(REG_BOUNDS + 2, dm, b2);\n    write_ssr_cfg(REG_BOUNDS + 3, dm, b3);\n    size_t a = 0;\n    write_ssr_cfg(REG_STRIDES + 0, dm, s0 - a);\n    a += s0 * b0;\n    write_ssr_cfg(REG_STRIDES + 1, dm, s1 - a);\n    a += s1 * b1;\n    write_ssr_cfg(REG_STRIDES + 2, dm, s2 - a);\n    a += s2 * b2;\n    write_ssr_cfg(REG_STRIDES + 3, dm, s3 - a);\n    a += s3 * b3;\n}\n\ninline void snrt_ssr_repeat(enum snrt_ssr_dm dm, size_t count) {\n    write_ssr_cfg(REG_REPEAT, dm, count - 1);\n}\n\ninline void snrt_ssr_read(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim,\n                          volatile void *ptr) {\n    write_ssr_cfg(REG_RPTR + dim, dm, (uintptr_t)ptr);\n}\n\ninline void snrt_ssr_write(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim,\n                           volatile void *ptr) {\n    write_ssr_cfg(REG_WPTR + dim, dm, (uintptr_t)ptr);\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/start__decls_8h/","title":"snRuntime/api/start_decls.h","text":""},{"location":"runtime/Files/start__decls_8h/#functions","title":"Functions","text":"Name void snrt_exit(int exit_code)"},{"location":"runtime/Files/start__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/start__decls_8h/#function-snrt_exit","title":"function snrt_exit","text":"<pre><code>static inline void snrt_exit(\n    int exit_code\n)\n</code></pre>"},{"location":"runtime/Files/start__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\nstatic inline void snrt_exit(int exit_code);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/sync_8h/","title":"snRuntime/src/sync.h","text":""},{"location":"runtime/Files/sync_8h/#functions","title":"Functions","text":"Name volatile uint32_t * snrt_mutex() void snrt_mutex_acquire(volatile uint32_t * pmtx)lock a mutex, blocking void snrt_mutex_ttas_acquire(volatile uint32_t * pmtx)lock a mutex, blocking void snrt_mutex_release(volatile uint32_t * pmtx)Release the mutex. void snrt_cluster_hw_barrier()Synchronize cores in a cluster with a hardware barrier. void snrt_global_barrier()Synchronize clusters globally with a global software barrier. void snrt_partial_barrier(snrt_barrier_t * barr, uint32_t n)Generic barrier."},{"location":"runtime/Files/sync_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/sync_8h/#function-snrt_mutex","title":"function snrt_mutex","text":"<pre><code>inline volatile uint32_t * snrt_mutex()\n</code></pre>"},{"location":"runtime/Files/sync_8h/#function-snrt_mutex_acquire","title":"function snrt_mutex_acquire","text":"<pre><code>inline void snrt_mutex_acquire(\n    volatile uint32_t * pmtx\n)\n</code></pre> <p>lock a mutex, blocking </p> <p>declare mutex with <code>static volatile uint32_t mtx = 0;</code></p>"},{"location":"runtime/Files/sync_8h/#function-snrt_mutex_ttas_acquire","title":"function snrt_mutex_ttas_acquire","text":"<pre><code>inline void snrt_mutex_ttas_acquire(\n    volatile uint32_t * pmtx\n)\n</code></pre> <p>lock a mutex, blocking </p> <p>test and test-and-set (ttas) implementation of a lock. Declare mutex with <code>static volatile uint32_t mtx = 0;</code></p>"},{"location":"runtime/Files/sync_8h/#function-snrt_mutex_release","title":"function snrt_mutex_release","text":"<pre><code>inline void snrt_mutex_release(\n    volatile uint32_t * pmtx\n)\n</code></pre> <p>Release the mutex. </p>"},{"location":"runtime/Files/sync_8h/#function-snrt_cluster_hw_barrier","title":"function snrt_cluster_hw_barrier","text":"<pre><code>inline void snrt_cluster_hw_barrier()\n</code></pre> <p>Synchronize cores in a cluster with a hardware barrier. </p>"},{"location":"runtime/Files/sync_8h/#function-snrt_global_barrier","title":"function snrt_global_barrier","text":"<pre><code>inline void snrt_global_barrier()\n</code></pre> <p>Synchronize clusters globally with a global software barrier. </p>"},{"location":"runtime/Files/sync_8h/#function-snrt_partial_barrier","title":"function snrt_partial_barrier","text":"<pre><code>inline void snrt_partial_barrier(\n    snrt_barrier_t * barr,\n    uint32_t n\n)\n</code></pre> <p>Generic barrier. </p> <p>Parameters: </p> <ul> <li>barr pointer to a barrier </li> <li>n number of harts that have to enter before released </li> </ul>"},{"location":"runtime/Files/sync_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n//================================================================================\n// Mutex functions\n//================================================================================\n\ninline volatile uint32_t *snrt_mutex() { return &amp;_snrt_mutex; }\n\ninline void snrt_mutex_acquire(volatile uint32_t *pmtx) {\n    asm volatile(\n        \"li            t0,1          # t0 = 1\\n\"\n        \"1:\\n\"\n        \"  amoswap.w.aq  t0,t0,(%0)   # t0 = oldlock &amp; lock = 1\\n\"\n        \"  bnez          t0,1b      # Retry if previously set)\\n\"\n        : \"+r\"(pmtx)\n        :\n        : \"t0\");\n}\n\ninline void snrt_mutex_ttas_acquire(volatile uint32_t *pmtx) {\n    asm volatile(\n        \"1:\\n\"\n        \"  lw t0, 0(%0)\\n\"\n        \"  bnez t0, 1b\\n\"\n        \"  li t0,1          # t0 = 1\\n\"\n        \"2:\\n\"\n        \"  amoswap.w.aq  t0,t0,(%0)   # t0 = oldlock &amp; lock = 1\\n\"\n        \"  bnez          t0,2b      # Retry if previously set)\\n\"\n        : \"+r\"(pmtx)\n        :\n        : \"t0\");\n}\n\ninline void snrt_mutex_release(volatile uint32_t *pmtx) {\n    asm volatile(\"amoswap.w.rl  x0,x0,(%0)   # Release lock by storing 0\\n\"\n                 : \"+r\"(pmtx));\n}\n\n//================================================================================\n// Barrier functions\n//================================================================================\n\ninline void snrt_cluster_hw_barrier() {\n    uint32_t register r;\n\n    asm volatile(\"lw %0, 0(%1)\"\n                 : \"=r\"(r)\n                 : \"r\"((uint32_t)snrt_cluster_hw_barrier_addr())\n                 : \"memory\");\n}\n\ninline void snrt_global_barrier() {\n    // Synchronize all DM cores in software\n    if (snrt_is_dm_core()) {\n        // Remember previous iteration\n        uint32_t prev_barrier_iteration = _snrt_barrier.iteration;\n        uint32_t cnt =\n            __atomic_add_fetch(&amp;(_snrt_barrier.cnt), 1, __ATOMIC_RELAXED);\n\n        // Increment the barrier counter\n        if (cnt == snrt_cluster_num()) {\n            _snrt_barrier.cnt = 0;\n            __atomic_add_fetch(&amp;(_snrt_barrier.iteration), 1, __ATOMIC_RELAXED);\n        } else {\n            while (prev_barrier_iteration == _snrt_barrier.iteration)\n                ;\n        }\n    }\n    // Synchronize cores in a cluster with the HW barrier\n    snrt_cluster_hw_barrier();\n}\n\ninline void snrt_partial_barrier(snrt_barrier_t *barr, uint32_t n) {\n    // Remember previous iteration\n    uint32_t prev_it = barr-&gt;iteration;\n    uint32_t cnt = __atomic_add_fetch(&amp;barr-&gt;cnt, 1, __ATOMIC_RELAXED);\n\n    // Increment the barrier counter\n    if (cnt == n) {\n        barr-&gt;cnt = 0;\n        __atomic_add_fetch(&amp;barr-&gt;iteration, 1, __ATOMIC_RELAXED);\n    } else {\n        // Some threads have not reached the barrier --&gt; Let's wait\n        while (prev_it == barr-&gt;iteration)\n            ;\n    }\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/sync__decls_8h/","title":"snRuntime/api/sync_decls.h","text":""},{"location":"runtime/Files/sync__decls_8h/#classes","title":"Classes","text":"Name struct snrt_barrier_t"},{"location":"runtime/Files/sync__decls_8h/#functions","title":"Functions","text":"Name volatile uint32_t * snrt_mutex() void snrt_mutex_acquire(volatile uint32_t * pmtx)lock a mutex, blocking void snrt_mutex_ttas_acquire(volatile uint32_t * pmtx)lock a mutex, blocking void snrt_mutex_release(volatile uint32_t * pmtx)Release the mutex. void snrt_cluster_hw_barrier()Synchronize cores in a cluster with a hardware barrier. void snrt_global_barrier()Synchronize clusters globally with a global software barrier."},{"location":"runtime/Files/sync__decls_8h/#attributes","title":"Attributes","text":"Name volatile uint32_t _snrt_mutex volatile snrt_barrier_t _snrt_barrier"},{"location":"runtime/Files/sync__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/sync__decls_8h/#function-snrt_mutex","title":"function snrt_mutex","text":"<pre><code>inline volatile uint32_t * snrt_mutex()\n</code></pre>"},{"location":"runtime/Files/sync__decls_8h/#function-snrt_mutex_acquire","title":"function snrt_mutex_acquire","text":"<pre><code>inline void snrt_mutex_acquire(\n    volatile uint32_t * pmtx\n)\n</code></pre> <p>lock a mutex, blocking </p> <p>declare mutex with <code>static volatile uint32_t mtx = 0;</code></p>"},{"location":"runtime/Files/sync__decls_8h/#function-snrt_mutex_ttas_acquire","title":"function snrt_mutex_ttas_acquire","text":"<pre><code>inline void snrt_mutex_ttas_acquire(\n    volatile uint32_t * pmtx\n)\n</code></pre> <p>lock a mutex, blocking </p> <p>test and test-and-set (ttas) implementation of a lock. Declare mutex with <code>static volatile uint32_t mtx = 0;</code></p>"},{"location":"runtime/Files/sync__decls_8h/#function-snrt_mutex_release","title":"function snrt_mutex_release","text":"<pre><code>inline void snrt_mutex_release(\n    volatile uint32_t * pmtx\n)\n</code></pre> <p>Release the mutex. </p>"},{"location":"runtime/Files/sync__decls_8h/#function-snrt_cluster_hw_barrier","title":"function snrt_cluster_hw_barrier","text":"<pre><code>inline void snrt_cluster_hw_barrier()\n</code></pre> <p>Synchronize cores in a cluster with a hardware barrier. </p>"},{"location":"runtime/Files/sync__decls_8h/#function-snrt_global_barrier","title":"function snrt_global_barrier","text":"<pre><code>inline void snrt_global_barrier()\n</code></pre> <p>Synchronize clusters globally with a global software barrier. </p>"},{"location":"runtime/Files/sync__decls_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/sync__decls_8h/#variable-_snrt_mutex","title":"variable _snrt_mutex","text":"<pre><code>volatile uint32_t _snrt_mutex;\n</code></pre>"},{"location":"runtime/Files/sync__decls_8h/#variable-_snrt_barrier","title":"variable _snrt_barrier","text":"<pre><code>volatile snrt_barrier_t _snrt_barrier;\n</code></pre>"},{"location":"runtime/Files/sync__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ntypedef struct {\n    uint32_t volatile cnt;\n    uint32_t volatile iteration;\n} snrt_barrier_t;\n\nextern volatile uint32_t _snrt_mutex;\nextern volatile snrt_barrier_t _snrt_barrier;\n\ninline volatile uint32_t *snrt_mutex();\n\ninline void snrt_mutex_acquire(volatile uint32_t *pmtx);\n\ninline void snrt_mutex_ttas_acquire(volatile uint32_t *pmtx);\n\ninline void snrt_mutex_release(volatile uint32_t *pmtx);\n\ninline void snrt_cluster_hw_barrier();\n\ninline void snrt_global_barrier();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/team_8h/","title":"snRuntime/src/team.h","text":""},{"location":"runtime/Files/team_8h/#functions","title":"Functions","text":"Name uint32_t attribute((const) )"},{"location":"runtime/Files/team_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/team_8h/#function-attribute","title":"function attribute","text":"<pre><code>inline uint32_t __attribute__(\n    (const) \n)\n</code></pre>"},{"location":"runtime/Files/team_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline uint32_t __attribute__((const)) snrt_hartid() {\n    uint32_t hartid;\n    asm(\"csrr %0, mhartid\" : \"=r\"(hartid));\n    return hartid;\n}\n\ninline uint32_t __attribute__((const)) snrt_cluster_num() {\n    return SNRT_CLUSTER_NUM;\n}\n\ninline uint32_t __attribute__((const)) snrt_cluster_core_num() {\n    return SNRT_CLUSTER_CORE_NUM;\n}\n\ninline uint32_t __attribute__((const)) snrt_global_core_base_hartid() {\n    return SNRT_BASE_HARTID;\n}\n\ninline uint32_t __attribute__((const)) snrt_global_core_num() {\n    return snrt_cluster_num() * snrt_cluster_core_num();\n}\n\ninline uint32_t __attribute__((const)) snrt_global_core_idx() {\n    return snrt_hartid() - snrt_global_core_base_hartid();\n}\n\ninline uint32_t __attribute__((const)) snrt_cluster_idx() {\n    return snrt_global_core_idx() / snrt_cluster_core_num();\n}\n\ninline uint32_t __attribute__((const)) snrt_cluster_core_idx() {\n    return snrt_global_core_idx() % snrt_cluster_core_num();\n}\n\ninline uint32_t __attribute__((const)) snrt_cluster_dm_core_num() {\n    return SNRT_CLUSTER_DM_CORE_NUM;\n}\n\ninline uint32_t __attribute__((const)) snrt_cluster_compute_core_num() {\n    return snrt_cluster_core_num() - snrt_cluster_dm_core_num();\n}\n\ninline int __attribute__((const)) snrt_is_compute_core() {\n    return snrt_cluster_core_idx() &lt; snrt_cluster_compute_core_num();\n}\n\ninline int __attribute__((const)) snrt_is_dm_core() {\n    return !snrt_is_compute_core();\n}\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/team__decls_8h/","title":"snRuntime/api/team_decls.h","text":""},{"location":"runtime/Files/team__decls_8h/#functions","title":"Functions","text":"Name uint32_t attribute((const) )"},{"location":"runtime/Files/team__decls_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/team__decls_8h/#function-attribute","title":"function attribute","text":"<pre><code>inline uint32_t __attribute__(\n    (const) \n)\n</code></pre>"},{"location":"runtime/Files/team__decls_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2023 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\ninline uint32_t __attribute__((const)) snrt_hartid();\ninline uint32_t __attribute__((const)) snrt_cluster_num();\ninline uint32_t __attribute__((const)) snrt_cluster_core_num();\ninline uint32_t __attribute__((const)) snrt_global_core_base_hartid();\ninline uint32_t __attribute__((const)) snrt_global_core_num();\ninline uint32_t __attribute__((const)) snrt_global_core_idx();\ninline uint32_t __attribute__((const)) snrt_cluster_idx();\ninline uint32_t __attribute__((const)) snrt_cluster_core_idx();\ninline uint32_t __attribute__((const)) snrt_cluster_dm_core_num();\ninline uint32_t __attribute__((const)) snrt_cluster_compute_core_num();\ninline int __attribute__((const)) snrt_is_compute_core();\ninline int __attribute__((const)) snrt_is_dm_core();\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/utils_8h/","title":"applications/src/utils/utils.h","text":""},{"location":"runtime/Files/utils_8h/#functions","title":"Functions","text":"Name uint32_t benchmark_get_cycle()returns cycle number and injects marker to track performance void snrt_dma_start_tracking()start tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed void snrt_dma_stop_tracking()stop tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed uint32_t check_layer(const conv_layer * l, double * checksum)checks correctness of feature map void dma_memset(void * ptr, uint8_t value, uint32_t len)fast memset function performed by DMA"},{"location":"runtime/Files/utils_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/utils_8h/#function-benchmark_get_cycle","title":"function benchmark_get_cycle","text":"<pre><code>uint32_t benchmark_get_cycle()\n</code></pre> <p>returns cycle number and injects marker to track performance </p> <p>Return: uint32_t </p>"},{"location":"runtime/Files/utils_8h/#function-snrt_dma_start_tracking","title":"function snrt_dma_start_tracking","text":"<pre><code>void snrt_dma_start_tracking()\n</code></pre> <p>start tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed </p>"},{"location":"runtime/Files/utils_8h/#function-snrt_dma_stop_tracking","title":"function snrt_dma_stop_tracking","text":"<pre><code>void snrt_dma_stop_tracking()\n</code></pre> <p>stop tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed </p>"},{"location":"runtime/Files/utils_8h/#function-check_layer","title":"function check_layer","text":"<pre><code>uint32_t check_layer(\n    const conv_layer * l,\n    double * checksum\n)\n</code></pre> <p>checks correctness of feature map </p> <p>Parameters: </p> <ul> <li>l layer struct (Conv2d, BatchNorm, Maxpool) </li> <li>checksum checksum to compare against, reduced over input channels </li> </ul> <p>Return: uint32_t </p>"},{"location":"runtime/Files/utils_8h/#function-dma_memset","title":"function dma_memset","text":"<pre><code>void dma_memset(\n    void * ptr,\n    uint8_t value,\n    uint32_t len\n)\n</code></pre> <p>fast memset function performed by DMA </p> <p>Parameters: </p> <ul> <li>ptr pointer to the start of the region </li> <li>value value to set </li> <li>len number of bytes, must be multiple of DMA bus-width </li> </ul>"},{"location":"runtime/Files/utils_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n#include \"snrt.h\"\n\nuint32_t benchmark_get_cycle();\n\nvoid snrt_dma_start_tracking();\n\nvoid snrt_dma_stop_tracking();\n\nuint32_t check_layer(const conv_layer* l, double* checksum);\n\nvoid dma_memset(void* ptr, uint8_t value, uint32_t len);\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/","title":"snRuntime/vendor/printf/printf.h","text":""},{"location":"runtime/Files/vendor_2printf_2printf_8h/#functions","title":"Functions","text":"Name void _putchar(char character) int printf_(const char * format, ... ) int sprintf_(char * buffer, const char * format, ... ) int snprintf_(char * buffer, size_t count, const char * format, ... ) int vsnprintf_(char * buffer, size_t count, const char * format, va_list va) int vprintf_(const char * format, va_list va) int fctprintf(void()(char character, void arg) out, void * arg, const char * format, ... )"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#defines","title":"Defines","text":"Name printf sprintf snprintf vsnprintf vprintf"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-_putchar","title":"function _putchar","text":"<pre><code>void _putchar(\n    char character\n)\n</code></pre> <p>Parameters: </p> <ul> <li>character Character to output </li> </ul> <p>Output a character to a custom device like UART, used by the printf() function This function is declared here only. You have to write your custom implementation somewhere </p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-printf_","title":"function printf_","text":"<pre><code>int printf_(\n    const char * format,\n    ... \n)\n</code></pre>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-sprintf_","title":"function sprintf_","text":"<pre><code>int sprintf_(\n    char * buffer,\n    const char * format,\n    ... \n)\n</code></pre>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-snprintf_","title":"function snprintf_","text":"<pre><code>int snprintf_(\n    char * buffer,\n    size_t count,\n    const char * format,\n    ... \n)\n</code></pre>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-vsnprintf_","title":"function vsnprintf_","text":"<pre><code>int vsnprintf_(\n    char * buffer,\n    size_t count,\n    const char * format,\n    va_list va\n)\n</code></pre>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-vprintf_","title":"function vprintf_","text":"<pre><code>int vprintf_(\n    const char * format,\n    va_list va\n)\n</code></pre>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#function-fctprintf","title":"function fctprintf","text":"<pre><code>int fctprintf(\n    void(*)(char character, void *arg) out,\n    void * arg,\n    const char * format,\n    ... \n)\n</code></pre> <p>Parameters: </p> <ul> <li>out An output function which takes one character and an argument pointer </li> <li>arg An argument pointer for user data passed to output function </li> <li>format A string that specifies the format of the output </li> </ul> <p>Return: The number of characters that are sent to the output function, not counting the terminating null character </p> <p>printf with output function You may use this as dynamic alternative to printf() with its fixed _putchar() output </p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/vendor_2printf_2printf_8h/#define-printf","title":"define printf","text":"<pre><code>#define printf printf_\n</code></pre> <p>Parameters: </p> <ul> <li>format A string that specifies the format of the output </li> </ul> <p>Return: The number of characters that are written into the array, not counting the terminating null character </p> <p>Tiny printf implementation You have to implement putchar if you use printf() To avoid conflicts with the regular printf() API it is overridden by macro defines and internal underscore-appended functions like printf() are used </p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#define-sprintf","title":"define sprintf","text":"<pre><code>#define sprintf sprintf_\n</code></pre> <p>Parameters: </p> <ul> <li>buffer A pointer to the buffer where to store the formatted string. MUST be big enough to store the output! </li> <li>format A string that specifies the format of the output </li> </ul> <p>Return: The number of characters that are WRITTEN into the buffer, not counting the terminating null character </p> <p>Tiny sprintf implementation Due to security reasons (buffer overflow) YOU SHOULD CONSIDER USING (V)SNPRINTF INSTEAD! </p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#define-snprintf","title":"define snprintf","text":"<pre><code>#define snprintf snprintf_\n</code></pre> <p>Parameters: </p> <ul> <li>buffer A pointer to the buffer where to store the formatted string </li> <li>count The maximum number of characters to store in the buffer, including a terminating null character </li> <li>format A string that specifies the format of the output </li> <li>va A value identifying a variable arguments list </li> </ul> <p>Return: The number of characters that COULD have been written into the buffer, not counting the terminating null character. A value equal or larger than count indicates truncation. Only when the returned value is non-negative and less than count, the string has been completely written. </p> <p>Tiny snprintf/vsnprintf implementation </p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#define-vsnprintf","title":"define vsnprintf","text":"<pre><code>#define vsnprintf vsnprintf_\n</code></pre>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#define-vprintf","title":"define vprintf","text":"<pre><code>#define vprintf vprintf_\n</code></pre> <p>Parameters: </p> <ul> <li>format A string that specifies the format of the output </li> <li>va A value identifying a variable arguments list </li> </ul> <p>Return: The number of characters that are WRITTEN into the buffer, not counting the terminating null character </p> <p>Tiny vprintf implementation </p>"},{"location":"runtime/Files/vendor_2printf_2printf_8h/#source-code","title":"Source code","text":"<pre><code>// \\author (c) Marco Paland (info@paland.com)\n//             2014-2019, PALANDesign Hannover, Germany\n//\n// \\license The MIT License (MIT)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n// \\brief Tiny printf, sprintf and snprintf implementation, optimized for speed on\n//        embedded systems with a very limited resources.\n//        Use this instead of bloated standard/newlib printf.\n//        These routines are thread safe and reentrant.\n//\n\n#ifndef _PRINTF_H_\n#define _PRINTF_H_\n\n#include &lt;stdarg.h&gt;\n#include &lt;stddef.h&gt;\n\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\nvoid _putchar(char character);\n\n\n#define printf printf_\nint printf_(const char* format, ...);\n\n\n#define sprintf sprintf_\nint sprintf_(char* buffer, const char* format, ...);\n\n\n#define snprintf  snprintf_\n#define vsnprintf vsnprintf_\nint  snprintf_(char* buffer, size_t count, const char* format, ...);\nint vsnprintf_(char* buffer, size_t count, const char* format, va_list va);\n\n\n#define vprintf vprintf_\nint vprintf_(const char* format, va_list va);\n\n\nint fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...);\n\n\n#ifdef __cplusplus\n}\n#endif\n\n\n#endif  // _PRINTF_H_\n</code></pre> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Modules/","title":"Modules","text":"<p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Namespaces/","title":"Namespaces","text":"<p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Pages/","title":"Pages","text":"<ul> <li>page Applications </li> </ul> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"runtime/Pages/md_applications_README/","title":"Applications","text":"<p>This subdirectory contains some applications or benchmarks specifically implemented and optimized for Snitch.</p>"},{"location":"runtime/Pages/md_applications_README/#contents","title":"Contents","text":"<ul> <li>Data generation:<ul> <li><code>data_gen.py</code>: script to generate data and expected results for various benchmarks</li> <li><code>data</code>: output folder of <code>data_gen.py</code> which also contains the configuration to generate the data</li> </ul> </li> <li><code>src</code>:<ul> <li><code>kernels</code>: basic kernels, currently contains <code>GEMM</code>, <code>BatchNorm</code>, <code>Maxpool</code>, <code>Fusedconv</code></li> <li><code>layers</code>: wraps the kernel to form a DNN layer. Manages data-movement, synchronization, double buffering etc.</li> <li><code>utils</code>: some helpful functions for benchmarking, verification, fast <code>memset</code></li> <li><code>net_layer.c</code>: various ready tests to run layers.</li> </ul> </li> <li><code>include</code>: includes <code>layer</code> struct.</li> </ul>"},{"location":"runtime/Pages/md_applications_README/#sw-testbenches","title":"SW Testbenches","text":"<p>There are currently a few tests for various layer types. Some additional information about these tests is given below:</p> <ul> <li><code>net_maxpool.c</code>: Naive implementation of a maxpooling layer, not optimized in any way due to memory-boundness</li> <li><code>net-batchnorm.c</code>: Implementation of a batchnorm layer with SSR streams (both read and write)</li> <li><code>net-conv2d.c</code>: Implementation and tiling of a 2D convolution that can be distributed to multiple clusters. The convolution is implemented as an <code>im2col</code> transformation (performed by 2D DMA transfers) + optimized GEMM. The memory layout of input and output feature map is Height x Width x Channels. The convolution is globally parallelized over output channels. Inside a cluster, the output pixels are distributed among the cores. There is an option to load the feature map from a different cluster instead of the main memory by setting <code>cluster2cluster</code> in the layer struct to <code>1</code>. Currently only <code>fp64</code> is implemented, but the data movement for <code>fp32</code> or lower precision SIMD should be analogously.</li> <li><code>net-gemm.c</code>: Testbench to benchmark the optimized GEMM implementation for different memory layouts, dimensions and precisions.</li> <li><code>net-fusedconv.c</code>: Implementation of a fused kernel with Conv2d + BatchNorm + ReLU. The interface of the kernel is compatible with DORY. Parameters of a tile can be specified in <code>data/fusedconv_param.hjson</code>. Supported paramters are input/output dimension, padding, kernel dimension &amp; stride, flags for BatchNorm and ReLU. Further there are two additional specialized kernels 1) a CHW kernel for input layers with very few input channels, the output of this kernel is in the HWC layout again 2) A depthwise kernel</li> </ul>"},{"location":"runtime/Pages/md_applications_README/#usage","title":"Usage","text":"<p>To run a specific benchmark, first configure the dimensions and the desired precision <code>data/app_params.hjson</code>. </p> <pre><code>{\n    kernel: \"GEMM\"\n    M: 16,\n    N: 16,\n    K: 16,\n    alpha: 0,\n    transpose_A: false,\n    transpose_B: true,\n    prec: 16\n}\n</code></pre> <p>The file will be automatically generated with a <code>cmake</code> macro and is stored in <code>data/data_app.h</code>. The result will also be checked. Reference is a golden model written in <code>python</code> with help of the <code>torch</code>.</p> <p>The applications are compiled into a folder which can be enabled by adding <code>add_subdirectory(${SNITCH_SOFTWARE_DIR}/applications</code> to <code>CMakeLists.txt</code> in the specific <code>sw</code> folder.</p>"},{"location":"runtime/Pages/md_applications_README/#requirements","title":"Requirements","text":"<ul> <li><code>torch</code></li> </ul> <p>Updated on 2023-11-24 at 10:44:26 +0000</p>"},{"location":"schema-doc/address_range-properties-address/","title":"Untitled integer in Address Range Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/address_range.schema.json#/properties/address\n</code></pre> <p>Base address of range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none address_range.schema.json*"},{"location":"schema-doc/address_range-properties-address/#address-type","title":"address Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range-properties-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/address_range-properties-length/","title":"Untitled integer in Address Range Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/address_range.schema.json#/properties/length\n</code></pre> <p>Size in bytes of range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none address_range.schema.json*"},{"location":"schema-doc/address_range-properties-length/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range-properties-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/address_range/","title":"Address Range Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/address_range.schema.json\n</code></pre> <p>Description of a generic address range</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none address_range.schema.json"},{"location":"schema-doc/address_range/#address-range-schema-type","title":"Address Range Schema Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/address_range/#address-range-schema-properties","title":"Address Range Schema Properties","text":"Property Type Required Nullable Defined by address <code>integer</code> Required cannot be null Address Range Schema length <code>integer</code> Required cannot be null Address Range Schema"},{"location":"schema-doc/address_range/#address","title":"address","text":"<p>Base address of range.</p> <p><code>address</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Address Range Schema</p> </li> </ul>"},{"location":"schema-doc/address_range/#address-type","title":"address Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/address_range/#length","title":"length","text":"<p>Size in bytes of range.</p> <p><code>length</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Address Range Schema</p> </li> </ul>"},{"location":"schema-doc/address_range/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/axi_tlb-properties-l1_cut_ax/","title":"Untitled boolean in AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json#/properties/l1_cut_ax\n</code></pre> <p>Insert spill register on TLB request channels, cutting timing paths.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_tlb.schema.json*"},{"location":"schema-doc/axi_tlb-properties-l1_cut_ax/#l1_cut_ax-type","title":"l1_cut_ax Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/axi_tlb-properties-l1_cut_ax/#l1_cut_ax-default-value","title":"l1_cut_ax Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/axi_tlb-properties-l1_num_entries/","title":"Untitled integer in AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json#/properties/l1_num_entries\n</code></pre> <p>Number of TLB translation entries.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_tlb.schema.json*"},{"location":"schema-doc/axi_tlb-properties-l1_num_entries/#l1_num_entries-type","title":"l1_num_entries Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb-properties-l1_num_entries/#l1_num_entries-default-value","title":"l1_num_entries Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/axi_tlb-properties-max_trans/","title":"Untitled integer in AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json#/properties/max_trans\n</code></pre> <p>Maximum outstanding transactions the TLB can handle.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_tlb.schema.json*"},{"location":"schema-doc/axi_tlb-properties-max_trans/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb-properties-max_trans/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/axi_tlb/","title":"AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json\n</code></pre> <p>AXI TLB Properties</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none axi_tlb.schema.json"},{"location":"schema-doc/axi_tlb/#axi-tlb-schema-type","title":"AXI TLB Schema Type","text":"<p><code>object</code> (AXI TLB Schema)</p>"},{"location":"schema-doc/axi_tlb/#axi-tlb-schema-properties","title":"AXI TLB Schema Properties","text":"Property Type Required Nullable Defined by max_trans <code>integer</code> Optional cannot be null AXI TLB Schema l1_num_entries <code>integer</code> Optional cannot be null AXI TLB Schema l1_cut_ax <code>boolean</code> Optional cannot be null AXI TLB Schema"},{"location":"schema-doc/axi_tlb/#max_trans","title":"max_trans","text":"<p>Maximum outstanding transactions the TLB can handle.</p> <p><code>max_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI TLB Schema</p> </li> </ul>"},{"location":"schema-doc/axi_tlb/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/axi_tlb/#l1_num_entries","title":"l1_num_entries","text":"<p>Number of TLB translation entries.</p> <p><code>l1_num_entries</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI TLB Schema</p> </li> </ul>"},{"location":"schema-doc/axi_tlb/#l1_num_entries-type","title":"l1_num_entries Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb/#l1_num_entries-default-value","title":"l1_num_entries Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/axi_tlb/#l1_cut_ax","title":"l1_cut_ax","text":"<p>Insert spill register on TLB request channels, cutting timing paths.</p> <p><code>l1_cut_ax</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI TLB Schema</p> </li> </ul>"},{"location":"schema-doc/axi_tlb/#l1_cut_ax-type","title":"l1_cut_ax Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/axi_tlb/#l1_cut_ax-default-value","title":"l1_cut_ax Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/axi_xbar-properties-fall_through/","title":"Untitled boolean in AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json#/properties/fall_through\n</code></pre> <p>Configure crossbar to be fall-through (zero latency).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_xbar.schema.json*"},{"location":"schema-doc/axi_xbar-properties-fall_through/#fall_through-type","title":"fall_through Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/axi_xbar-properties-max_mst_trans/","title":"Untitled integer in AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json#/properties/max_mst_trans\n</code></pre> <p>Maximum outstanding transaction on the master port.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_xbar.schema.json*"},{"location":"schema-doc/axi_xbar-properties-max_mst_trans/#max_mst_trans-type","title":"max_mst_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar-properties-max_mst_trans/#max_mst_trans-default-value","title":"max_mst_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar-properties-max_slv_trans/","title":"Untitled integer in AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json#/properties/max_slv_trans\n</code></pre> <p>Maximum outstanding transaction on the slave port.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_xbar.schema.json*"},{"location":"schema-doc/axi_xbar-properties-max_slv_trans/#max_slv_trans-type","title":"max_slv_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar-properties-max_slv_trans/#max_slv_trans-default-value","title":"max_slv_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar/","title":"AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json\n</code></pre> <p>AXI Crossbar Properties</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none axi_xbar.schema.json"},{"location":"schema-doc/axi_xbar/#axi-crossbar-schema-type","title":"AXI Crossbar Schema Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/axi_xbar/#axi-crossbar-schema-properties","title":"AXI Crossbar Schema Properties","text":"Property Type Required Nullable Defined by max_slv_trans <code>integer</code> Optional cannot be null AXI Crossbar Schema max_mst_trans <code>integer</code> Optional cannot be null AXI Crossbar Schema fall_through <code>boolean</code> Optional cannot be null AXI Crossbar Schema"},{"location":"schema-doc/axi_xbar/#max_slv_trans","title":"max_slv_trans","text":"<p>Maximum outstanding transaction on the slave port.</p> <p><code>max_slv_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI Crossbar Schema</p> </li> </ul>"},{"location":"schema-doc/axi_xbar/#max_slv_trans-type","title":"max_slv_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar/#max_slv_trans-default-value","title":"max_slv_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar/#max_mst_trans","title":"max_mst_trans","text":"<p>Maximum outstanding transaction on the master port.</p> <p><code>max_mst_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI Crossbar Schema</p> </li> </ul>"},{"location":"schema-doc/axi_xbar/#max_mst_trans-type","title":"max_mst_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar/#max_mst_trans-default-value","title":"max_mst_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar/#fall_through","title":"fall_through","text":"<p>Configure crossbar to be fall-through (zero latency).</p> <p><code>fall_through</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI Crossbar Schema</p> </li> </ul>"},{"location":"schema-doc/axi_xbar/#fall_through-type","title":"fall_through Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_1/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/address_1\n</code></pre> <p>Start of HBM address region 1.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_1/#address_1-type","title":"address_1 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_1/#address_1-constraints","title":"address_1 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_2/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/address_2\n</code></pre> <p>Start of HBM address region 1.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_2/#address_2-type","title":"address_2 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_2/#address_2-constraints","title":"address_2 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/","title":"Untitled undefined type in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/cfg_regions\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#cfg_regions-type","title":"cfg_regions Type","text":"<p>unknown</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by top <code>object</code> Optional cannot be null Occamy System Schema phy <code>object</code> Optional cannot be null Occamy System Schema seq <code>object</code> Optional cannot be null Occamy System Schema ctrl <code>object</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#top","title":"top","text":"<p>Description of a generic address range</p> <p><code>top</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#top-type","title":"top Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#phy","title":"phy","text":"<p>Description of a generic address range</p> <p><code>phy</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#phy-type","title":"phy Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#seq","title":"seq","text":"<p>Description of a generic address range</p> <p><code>seq</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#seq-type","title":"seq Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#ctrl","title":"ctrl","text":"<p>Description of a generic address range</p> <p><code>ctrl</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#ctrl-type","title":"ctrl Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-channel_size/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/channel_size\n</code></pre> <p>Size of single HBM channel region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-channel_size/#channel_size-type","title":"channel_size Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-channel_size/#channel_size-constraints","title":"channel_size Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_address_0/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/nr_channels_address_0\n</code></pre> <p>Number of lower HBM channels accessible over address region 1</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_address_0/#nr_channels_address_0-type","title":"nr_channels_address_0 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_address_0/#nr_channels_address_0-constraints","title":"nr_channels_address_0 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_total/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/nr_channels_total\n</code></pre> <p>Total number of HBM channels.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_total/#nr_channels_total-type","title":"nr_channels_total Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_total/#nr_channels_total-constraints","title":"nr_channels_total Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/","title":"Configuration of external HBM interface Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#hbm-type","title":"hbm Type","text":"<p><code>object</code> (Configuration of external HBM interface)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#configuration-of-external-hbm-interface-properties","title":"Configuration of external HBM interface Properties","text":"Property Type Required Nullable Defined by address_1 <code>integer</code> Optional cannot be null Occamy System Schema address_2 <code>integer</code> Optional cannot be null Occamy System Schema channel_size <code>integer</code> Optional cannot be null Occamy System Schema nr_channels_total <code>integer</code> Optional cannot be null Occamy System Schema nr_channels_address_0 <code>integer</code> Optional cannot be null Occamy System Schema cfg_regions Not specified Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_1","title":"address_1","text":"<p>Start of HBM address region 1.</p> <p><code>address_1</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_1-type","title":"address_1 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_1-constraints","title":"address_1 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_2","title":"address_2","text":"<p>Start of HBM address region 1.</p> <p><code>address_2</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_2-type","title":"address_2 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_2-constraints","title":"address_2 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#channel_size","title":"channel_size","text":"<p>Size of single HBM channel region.</p> <p><code>channel_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#channel_size-type","title":"channel_size Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#channel_size-constraints","title":"channel_size Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_total","title":"nr_channels_total","text":"<p>Total number of HBM channels.</p> <p><code>nr_channels_total</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_total-type","title":"nr_channels_total Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_total-constraints","title":"nr_channels_total Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_address_0","title":"nr_channels_address_0","text":"<p>Number of lower HBM channels accessible over address region 1</p> <p><code>nr_channels_address_0</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_address_0-type","title":"nr_channels_address_0 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_address_0-constraints","title":"nr_channels_address_0 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#cfg_regions","title":"cfg_regions","text":"<p><code>cfg_regions</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#cfg_regions-type","title":"cfg_regions Type","text":"<p>unknown</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_io/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie/properties/address_io\n</code></pre> <p>Base address of PCIe IO range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_io/#address_io-type","title":"address_io Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_io/#address_io-constraints","title":"address_io Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_mm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie/properties/address_mm\n</code></pre> <p>Base address of PCIe memory-mapped range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_mm/#address_mm-type","title":"address_mm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_mm/#address_mm-constraints","title":"address_mm Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-length/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie/properties/length\n</code></pre> <p>Size in bytes of all PCIe ranges.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-length/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/","title":"Configuration of external PCIe port Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#pcie-type","title":"pcie Type","text":"<p><code>object</code> (Configuration of external PCIe port)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#configuration-of-external-pcie-port-properties","title":"Configuration of external PCIe port Properties","text":"Property Type Required Nullable Defined by address_io <code>integer</code> Optional cannot be null Occamy System Schema address_mm <code>integer</code> Optional cannot be null Occamy System Schema length <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_io","title":"address_io","text":"<p>Base address of PCIe IO range.</p> <p><code>address_io</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_io-type","title":"address_io Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_io-constraints","title":"address_io Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_mm","title":"address_mm","text":"<p>Base address of PCIe memory-mapped range.</p> <p><code>address_mm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_mm-type","title":"address_mm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_mm-constraints","title":"address_mm Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#length","title":"length","text":"<p>Size in bytes of all PCIe ranges.</p> <p><code>length</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-is_remote_quadrant/","title":"Untitled boolean in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/is_remote_quadrant\n</code></pre> <p>Set if this is a remote quadrant. Only quadrant ant remote interconnect is generated</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-is_remote_quadrant/#is_remote_quadrant-type","title":"is_remote_quadrant Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-narrow_xbar_slv_id_width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/narrow_xbar_slv_id_width\n</code></pre> <p>ID width of narrow crossbar slave ports.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/atomic_adapter_narrow\n</code></pre> <p>narrow spm atomic adapter internal cuts</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow/#atomic_adapter_narrow-type","title":"atomic_adapter_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow/#atomic_adapter_narrow-default-value","title":"atomic_adapter_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/atomic_adapter_narrow_wide\n</code></pre> <p>narrow_to_wide atomic adapter internal cuts</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow_wide/#atomic_adapter_narrow_wide-type","title":"atomic_adapter_narrow_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow_wide/#atomic_adapter_narrow_wide-default-value","title":"atomic_adapter_narrow_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-hbmx_to_hbm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/hbmx_to_hbm\n</code></pre> <p>hbmx -&gt; hbm</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-hbmx_to_hbm/#hbmx_to_hbm-type","title":"hbmx_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-hbmx_to_hbm/#hbmx_to_hbm-default-value","title":"hbmx_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-inter_to_quad/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/inter_to_quad\n</code></pre> <p>inter xbar -&gt; quad</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-inter_to_quad/#inter_to_quad-type","title":"inter_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-inter_to_quad/#inter_to_quad-default-value","title":"inter_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_hbi/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_and_hbi\n</code></pre> <p>hbi &lt;-&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_hbi/#narrow_and_hbi-type","title":"narrow_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_hbi/#narrow_and_hbi-default-value","title":"narrow_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_pcie/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_and_pcie\n</code></pre> <p>PCIe in and out</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_pcie/#narrow_and_pcie-type","title":"narrow_and_pcie Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_pcie/#narrow_and_pcie-default-value","title":"narrow_and_pcie Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_and_wide\n</code></pre> <p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_wide/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_conv_to_spm_narrow\n</code></pre> <p>narrow -&gt; SPM post atomic adapter</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow/#narrow_conv_to_spm_narrow-type","title":"narrow_conv_to_spm_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow/#narrow_conv_to_spm_narrow-default-value","title":"narrow_conv_to_spm_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow_pre/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_conv_to_spm_narrow_pre\n</code></pre> <p>narrow -&gt; SPM pre atomic adapter</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow_pre/#narrow_conv_to_spm_narrow_pre-type","title":"narrow_conv_to_spm_narrow_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow_pre/#narrow_conv_to_spm_narrow_pre-default-value","title":"narrow_conv_to_spm_narrow_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_cva6/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_to_cva6\n</code></pre> <p>narrow -&gt; cva6</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_cva6/#narrow_to_cva6-type","title":"narrow_to_cva6 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_cva6/#narrow_to_cva6-default-value","title":"narrow_to_cva6 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_quad/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_to_quad\n</code></pre> <p>narrow xbar -&gt; quad</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_quad/#narrow_to_quad-type","title":"narrow_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_quad/#narrow_to_quad-default-value","title":"narrow_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite\n</code></pre> <p>soc narrow -&gt; periph axilite</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite/#periph_axi_lite-type","title":"periph_axi_lite Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite/#periph_axi_lite-default-value","title":"periph_axi_lite Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow\n</code></pre> <p>soc narrow -&gt; periph regbus</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow/#periph_axi_lite_narrow-type","title":"periph_axi_lite_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow/#periph_axi_lite_narrow-default-value","title":"periph_axi_lite_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_bootrom_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_bootrom_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for bootrom_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_bootrom_cfg/#periph_axi_lite_narrow_bootrom_cfg-type","title":"periph_axi_lite_narrow_bootrom_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_bootrom_cfg/#periph_axi_lite_narrow_bootrom_cfg-default-value","title":"periph_axi_lite_narrow_bootrom_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_chip_ctrl_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_chip_ctrl_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for chip_ctrl_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_chip_ctrl_cfg/#periph_axi_lite_narrow_chip_ctrl_cfg-type","title":"periph_axi_lite_narrow_chip_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_chip_ctrl_cfg/#periph_axi_lite_narrow_chip_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_chip_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_clint_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_clint_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for clint_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_clint_cfg/#periph_axi_lite_narrow_clint_cfg-type","title":"periph_axi_lite_narrow_clint_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_clint_cfg/#periph_axi_lite_narrow_clint_cfg-default-value","title":"periph_axi_lite_narrow_clint_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_hbm2e_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_fll_hbm2e_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for fll_hbm2e_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_hbm2e_cfg/#periph_axi_lite_narrow_fll_hbm2e_cfg-type","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_hbm2e_cfg/#periph_axi_lite_narrow_fll_hbm2e_cfg-default-value","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_periph_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_fll_periph_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for fll_periph_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_periph_cfg/#periph_axi_lite_narrow_fll_periph_cfg-type","title":"periph_axi_lite_narrow_fll_periph_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_periph_cfg/#periph_axi_lite_narrow_fll_periph_cfg-default-value","title":"periph_axi_lite_narrow_fll_periph_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_system_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_fll_system_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for fll_system_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_system_cfg/#periph_axi_lite_narrow_fll_system_cfg-type","title":"periph_axi_lite_narrow_fll_system_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_system_cfg/#periph_axi_lite_narrow_fll_system_cfg-default-value","title":"periph_axi_lite_narrow_fll_system_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_gpio_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_gpio_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for gpio_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_gpio_cfg/#periph_axi_lite_narrow_gpio_cfg-type","title":"periph_axi_lite_narrow_gpio_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_gpio_cfg/#periph_axi_lite_narrow_gpio_cfg-default-value","title":"periph_axi_lite_narrow_gpio_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_narrow_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbi_narrow_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbi_narrow_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_narrow_cfg/#periph_axi_lite_narrow_hbi_narrow_cfg-type","title":"periph_axi_lite_narrow_hbi_narrow_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_narrow_cfg/#periph_axi_lite_narrow_hbi_narrow_cfg-default-value","title":"periph_axi_lite_narrow_hbi_narrow_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_wide_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbi_wide_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbi_wide_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_wide_cfg/#periph_axi_lite_narrow_hbi_wide_cfg-type","title":"periph_axi_lite_narrow_hbi_wide_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_wide_cfg/#periph_axi_lite_narrow_hbi_wide_cfg-default-value","title":"periph_axi_lite_narrow_hbi_wide_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbm_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbm_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_cfg/#periph_axi_lite_narrow_hbm_cfg-type","title":"periph_axi_lite_narrow_hbm_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_cfg/#periph_axi_lite_narrow_hbm_cfg-default-value","title":"periph_axi_lite_narrow_hbm_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_xbar_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbm_xbar_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbm_xbar_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_xbar_cfg/#periph_axi_lite_narrow_hbm_xbar_cfg-type","title":"periph_axi_lite_narrow_hbm_xbar_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_xbar_cfg/#periph_axi_lite_narrow_hbm_xbar_cfg-default-value","title":"periph_axi_lite_narrow_hbm_xbar_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_i2c_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_i2c_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for i2c_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_i2c_cfg/#periph_axi_lite_narrow_i2c_cfg-type","title":"periph_axi_lite_narrow_i2c_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_i2c_cfg/#periph_axi_lite_narrow_i2c_cfg-default-value","title":"periph_axi_lite_narrow_i2c_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_pcie_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_pcie_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for pcie_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_pcie_cfg/#periph_axi_lite_narrow_pcie_cfg-type","title":"periph_axi_lite_narrow_pcie_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_pcie_cfg/#periph_axi_lite_narrow_pcie_cfg-default-value","title":"periph_axi_lite_narrow_pcie_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_plic_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_plic_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for plic_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_plic_cfg/#periph_axi_lite_narrow_plic_cfg-type","title":"periph_axi_lite_narrow_plic_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_plic_cfg/#periph_axi_lite_narrow_plic_cfg-default-value","title":"periph_axi_lite_narrow_plic_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_soc_ctrl_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_soc_ctrl_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for soc_ctrl_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_soc_ctrl_cfg/#periph_axi_lite_narrow_soc_ctrl_cfg-type","title":"periph_axi_lite_narrow_soc_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_soc_ctrl_cfg/#periph_axi_lite_narrow_soc_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_soc_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_spim_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_spim_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for spim_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_spim_cfg/#periph_axi_lite_narrow_spim_cfg-type","title":"periph_axi_lite_narrow_spim_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_spim_cfg/#periph_axi_lite_narrow_spim_cfg-default-value","title":"periph_axi_lite_narrow_spim_cfg Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_timer_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_timer_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for timer_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_timer_cfg/#periph_axi_lite_narrow_timer_cfg-type","title":"periph_axi_lite_narrow_timer_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_timer_cfg/#periph_axi_lite_narrow_timer_cfg-default-value","title":"periph_axi_lite_narrow_timer_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_uart_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_uart_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for uart_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_uart_cfg/#periph_axi_lite_narrow_uart_cfg-type","title":"periph_axi_lite_narrow_uart_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_uart_cfg/#periph_axi_lite_narrow_uart_cfg-default-value","title":"periph_axi_lite_narrow_uart_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_hbmx/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/pre_to_hbmx\n</code></pre> <p>pre xbar -&gt; hbm xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_hbmx/#pre_to_hbmx-type","title":"pre_to_hbmx Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_hbmx/#pre_to_hbmx-default-value","title":"pre_to_hbmx Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_inter/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/pre_to_inter\n</code></pre> <p>pre xbar -&gt; inter xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_inter/#pre_to_inter-type","title":"pre_to_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_inter/#pre_to_inter-default-value","title":"pre_to_inter Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/quad_to_narrow\n</code></pre> <p>quad -&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_narrow/#quad_to_narrow-type","title":"quad_to_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_narrow/#quad_to_narrow-default-value","title":"quad_to_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_pre/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/quad_to_pre\n</code></pre> <p>quad -&gt; pre xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_pre/#quad_to_pre-type","title":"quad_to_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_pre/#quad_to_pre-default-value","title":"quad_to_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_hbi/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_and_hbi\n</code></pre> <p>hbi &lt;-&gt; wide xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_hbi/#wide_and_hbi-type","title":"wide_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_hbi/#wide_and_hbi-default-value","title":"wide_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_inter/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_and_inter\n</code></pre> <p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_conv_to_spm_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_conv_to_spm_wide\n</code></pre> <p>wide xbar -&gt; wide spm</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_conv_to_spm_wide/#wide_conv_to_spm_wide-type","title":"wide_conv_to_spm_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_conv_to_spm_wide/#wide_conv_to_spm_wide-default-value","title":"wide_conv_to_spm_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_hbm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_to_hbm\n</code></pre> <p>wide xbar -&gt; hbm xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>6\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_wide_zero_mem/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_to_wide_zero_mem\n</code></pre> <p>wide xbar -&gt; wide zero memory</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_wide_zero_mem/#wide_to_wide_zero_mem-type","title":"wide_to_wide_zero_mem Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/","title":"Number of cuts on the AXI bus Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#cuts-type","title":"cuts Type","text":"<p><code>object</code> (Number of cuts on the AXI bus)</p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#number-of-cuts-on-the-axi-bus-properties","title":"Number of cuts on the AXI bus Properties","text":"Property Type Required Nullable Defined by narrow_to_quad <code>integer</code> Optional cannot be null Occamy System Schema quad_to_narrow <code>integer</code> Optional cannot be null Occamy System Schema quad_to_pre <code>integer</code> Optional cannot be null Occamy System Schema pre_to_inter <code>integer</code> Optional cannot be null Occamy System Schema inter_to_quad <code>integer</code> Optional cannot be null Occamy System Schema narrow_to_cva6 <code>integer</code> Optional cannot be null Occamy System Schema narrow_conv_to_spm_narrow_pre <code>integer</code> Optional cannot be null Occamy System Schema narrow_conv_to_spm_narrow <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_pcie <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_wide <code>integer</code> Optional cannot be null Occamy System Schema wide_conv_to_spm_wide <code>integer</code> Optional cannot be null Occamy System Schema wide_to_wide_zero_mem <code>integer</code> Optional cannot be null Occamy System Schema wide_to_hbm <code>integer</code> Optional cannot be null Occamy System Schema wide_and_inter <code>integer</code> Optional cannot be null Occamy System Schema wide_and_hbi <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_hbi <code>integer</code> Optional cannot be null Occamy System Schema pre_to_hbmx <code>integer</code> Optional cannot be null Occamy System Schema hbmx_to_hbm <code>integer</code> Optional cannot be null Occamy System Schema atomic_adapter_narrow <code>integer</code> Optional cannot be null Occamy System Schema atomic_adapter_narrow_wide <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbm_xbar_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbi_wide_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbi_narrow_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_pcie_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbm_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_clint_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_soc_ctrl_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_chip_ctrl_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_uart_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_bootrom_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_fll_system_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_fll_periph_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_fll_hbm2e_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_plic_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_spim_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_gpio_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_i2c_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_timer_cfg <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_quad","title":"narrow_to_quad","text":"<p>narrow xbar -&gt; quad</p> <p><code>narrow_to_quad</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_quad-type","title":"narrow_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_quad-default-value","title":"narrow_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_narrow","title":"quad_to_narrow","text":"<p>quad -&gt; narrow xbar</p> <p><code>quad_to_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_narrow-type","title":"quad_to_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_narrow-default-value","title":"quad_to_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_pre","title":"quad_to_pre","text":"<p>quad -&gt; pre xbar</p> <p><code>quad_to_pre</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_pre-type","title":"quad_to_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_pre-default-value","title":"quad_to_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_inter","title":"pre_to_inter","text":"<p>pre xbar -&gt; inter xbar</p> <p><code>pre_to_inter</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_inter-type","title":"pre_to_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_inter-default-value","title":"pre_to_inter Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#inter_to_quad","title":"inter_to_quad","text":"<p>inter xbar -&gt; quad</p> <p><code>inter_to_quad</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#inter_to_quad-type","title":"inter_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#inter_to_quad-default-value","title":"inter_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_cva6","title":"narrow_to_cva6","text":"<p>narrow -&gt; cva6</p> <p><code>narrow_to_cva6</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_cva6-type","title":"narrow_to_cva6 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_cva6-default-value","title":"narrow_to_cva6 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow_pre","title":"narrow_conv_to_spm_narrow_pre","text":"<p>narrow -&gt; SPM pre atomic adapter</p> <p><code>narrow_conv_to_spm_narrow_pre</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow_pre-type","title":"narrow_conv_to_spm_narrow_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow_pre-default-value","title":"narrow_conv_to_spm_narrow_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow","title":"narrow_conv_to_spm_narrow","text":"<p>narrow -&gt; SPM post atomic adapter</p> <p><code>narrow_conv_to_spm_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow-type","title":"narrow_conv_to_spm_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow-default-value","title":"narrow_conv_to_spm_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_pcie","title":"narrow_and_pcie","text":"<p>PCIe in and out</p> <p><code>narrow_and_pcie</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_pcie-type","title":"narrow_and_pcie Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_pcie-default-value","title":"narrow_and_pcie Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_wide","title":"narrow_and_wide","text":"<p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> <p><code>narrow_and_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_conv_to_spm_wide","title":"wide_conv_to_spm_wide","text":"<p>wide xbar -&gt; wide spm</p> <p><code>wide_conv_to_spm_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_conv_to_spm_wide-type","title":"wide_conv_to_spm_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_conv_to_spm_wide-default-value","title":"wide_conv_to_spm_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_wide_zero_mem","title":"wide_to_wide_zero_mem","text":"<p>wide xbar -&gt; wide zero memory</p> <p><code>wide_to_wide_zero_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_wide_zero_mem-type","title":"wide_to_wide_zero_mem Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_hbm","title":"wide_to_hbm","text":"<p>wide xbar -&gt; hbm xbar</p> <p><code>wide_to_hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>6\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_inter","title":"wide_and_inter","text":"<p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> <p><code>wide_and_inter</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_hbi","title":"wide_and_hbi","text":"<p>hbi &lt;-&gt; wide xbar</p> <p><code>wide_and_hbi</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_hbi-type","title":"wide_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_hbi-default-value","title":"wide_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_hbi","title":"narrow_and_hbi","text":"<p>hbi &lt;-&gt; narrow xbar</p> <p><code>narrow_and_hbi</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_hbi-type","title":"narrow_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_hbi-default-value","title":"narrow_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_hbmx","title":"pre_to_hbmx","text":"<p>pre xbar -&gt; hbm xbar</p> <p><code>pre_to_hbmx</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_hbmx-type","title":"pre_to_hbmx Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_hbmx-default-value","title":"pre_to_hbmx Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#hbmx_to_hbm","title":"hbmx_to_hbm","text":"<p>hbmx -&gt; hbm</p> <p><code>hbmx_to_hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#hbmx_to_hbm-type","title":"hbmx_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#hbmx_to_hbm-default-value","title":"hbmx_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow","title":"atomic_adapter_narrow","text":"<p>narrow spm atomic adapter internal cuts</p> <p><code>atomic_adapter_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow-type","title":"atomic_adapter_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow-default-value","title":"atomic_adapter_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow_wide","title":"atomic_adapter_narrow_wide","text":"<p>narrow_to_wide atomic adapter internal cuts</p> <p><code>atomic_adapter_narrow_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow_wide-type","title":"atomic_adapter_narrow_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow_wide-default-value","title":"atomic_adapter_narrow_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow","title":"periph_axi_lite_narrow","text":"<p>soc narrow -&gt; periph regbus</p> <p><code>periph_axi_lite_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow-type","title":"periph_axi_lite_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow-default-value","title":"periph_axi_lite_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite","title":"periph_axi_lite","text":"<p>soc narrow -&gt; periph axilite</p> <p><code>periph_axi_lite</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite-type","title":"periph_axi_lite Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite-default-value","title":"periph_axi_lite Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_xbar_cfg","title":"periph_axi_lite_narrow_hbm_xbar_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbm_xbar_cfg</p> <p><code>periph_axi_lite_narrow_hbm_xbar_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_xbar_cfg-type","title":"periph_axi_lite_narrow_hbm_xbar_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_xbar_cfg-default-value","title":"periph_axi_lite_narrow_hbm_xbar_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_wide_cfg","title":"periph_axi_lite_narrow_hbi_wide_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbi_wide_cfg</p> <p><code>periph_axi_lite_narrow_hbi_wide_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_wide_cfg-type","title":"periph_axi_lite_narrow_hbi_wide_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_wide_cfg-default-value","title":"periph_axi_lite_narrow_hbi_wide_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_narrow_cfg","title":"periph_axi_lite_narrow_hbi_narrow_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbi_narrow_cfg</p> <p><code>periph_axi_lite_narrow_hbi_narrow_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_narrow_cfg-type","title":"periph_axi_lite_narrow_hbi_narrow_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_narrow_cfg-default-value","title":"periph_axi_lite_narrow_hbi_narrow_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_pcie_cfg","title":"periph_axi_lite_narrow_pcie_cfg","text":"<p>axi lite narrow cuts before regbus translation for pcie_cfg</p> <p><code>periph_axi_lite_narrow_pcie_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_pcie_cfg-type","title":"periph_axi_lite_narrow_pcie_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_pcie_cfg-default-value","title":"periph_axi_lite_narrow_pcie_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_cfg","title":"periph_axi_lite_narrow_hbm_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbm_cfg</p> <p><code>periph_axi_lite_narrow_hbm_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_cfg-type","title":"periph_axi_lite_narrow_hbm_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_cfg-default-value","title":"periph_axi_lite_narrow_hbm_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_clint_cfg","title":"periph_axi_lite_narrow_clint_cfg","text":"<p>axi lite narrow cuts before regbus translation for clint_cfg</p> <p><code>periph_axi_lite_narrow_clint_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_clint_cfg-type","title":"periph_axi_lite_narrow_clint_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_clint_cfg-default-value","title":"periph_axi_lite_narrow_clint_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_soc_ctrl_cfg","title":"periph_axi_lite_narrow_soc_ctrl_cfg","text":"<p>axi lite narrow cuts before regbus translation for soc_ctrl_cfg</p> <p><code>periph_axi_lite_narrow_soc_ctrl_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_soc_ctrl_cfg-type","title":"periph_axi_lite_narrow_soc_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_soc_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_soc_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_chip_ctrl_cfg","title":"periph_axi_lite_narrow_chip_ctrl_cfg","text":"<p>axi lite narrow cuts before regbus translation for chip_ctrl_cfg</p> <p><code>periph_axi_lite_narrow_chip_ctrl_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_chip_ctrl_cfg-type","title":"periph_axi_lite_narrow_chip_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_chip_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_chip_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_uart_cfg","title":"periph_axi_lite_narrow_uart_cfg","text":"<p>axi lite narrow cuts before regbus translation for uart_cfg</p> <p><code>periph_axi_lite_narrow_uart_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_uart_cfg-type","title":"periph_axi_lite_narrow_uart_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_uart_cfg-default-value","title":"periph_axi_lite_narrow_uart_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_bootrom_cfg","title":"periph_axi_lite_narrow_bootrom_cfg","text":"<p>axi lite narrow cuts before regbus translation for bootrom_cfg</p> <p><code>periph_axi_lite_narrow_bootrom_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_bootrom_cfg-type","title":"periph_axi_lite_narrow_bootrom_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_bootrom_cfg-default-value","title":"periph_axi_lite_narrow_bootrom_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_system_cfg","title":"periph_axi_lite_narrow_fll_system_cfg","text":"<p>axi lite narrow cuts before regbus translation for fll_system_cfg</p> <p><code>periph_axi_lite_narrow_fll_system_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_system_cfg-type","title":"periph_axi_lite_narrow_fll_system_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_system_cfg-default-value","title":"periph_axi_lite_narrow_fll_system_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_periph_cfg","title":"periph_axi_lite_narrow_fll_periph_cfg","text":"<p>axi lite narrow cuts before regbus translation for fll_periph_cfg</p> <p><code>periph_axi_lite_narrow_fll_periph_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_periph_cfg-type","title":"periph_axi_lite_narrow_fll_periph_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_periph_cfg-default-value","title":"periph_axi_lite_narrow_fll_periph_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_hbm2e_cfg","title":"periph_axi_lite_narrow_fll_hbm2e_cfg","text":"<p>axi lite narrow cuts before regbus translation for fll_hbm2e_cfg</p> <p><code>periph_axi_lite_narrow_fll_hbm2e_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_hbm2e_cfg-type","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_hbm2e_cfg-default-value","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_plic_cfg","title":"periph_axi_lite_narrow_plic_cfg","text":"<p>axi lite narrow cuts before regbus translation for plic_cfg</p> <p><code>periph_axi_lite_narrow_plic_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_plic_cfg-type","title":"periph_axi_lite_narrow_plic_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_plic_cfg-default-value","title":"periph_axi_lite_narrow_plic_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_spim_cfg","title":"periph_axi_lite_narrow_spim_cfg","text":"<p>axi lite narrow cuts before regbus translation for spim_cfg</p> <p><code>periph_axi_lite_narrow_spim_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_spim_cfg-type","title":"periph_axi_lite_narrow_spim_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_spim_cfg-default-value","title":"periph_axi_lite_narrow_spim_cfg Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_gpio_cfg","title":"periph_axi_lite_narrow_gpio_cfg","text":"<p>axi lite narrow cuts before regbus translation for gpio_cfg</p> <p><code>periph_axi_lite_narrow_gpio_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_gpio_cfg-type","title":"periph_axi_lite_narrow_gpio_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_gpio_cfg-default-value","title":"periph_axi_lite_narrow_gpio_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_i2c_cfg","title":"periph_axi_lite_narrow_i2c_cfg","text":"<p>axi lite narrow cuts before regbus translation for i2c_cfg</p> <p><code>periph_axi_lite_narrow_i2c_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_i2c_cfg-type","title":"periph_axi_lite_narrow_i2c_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_i2c_cfg-default-value","title":"periph_axi_lite_narrow_i2c_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_timer_cfg","title":"periph_axi_lite_narrow_timer_cfg","text":"<p>axi lite narrow cuts before regbus translation for timer_cfg</p> <p><code>periph_axi_lite_narrow_timer_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_timer_cfg-type","title":"periph_axi_lite_narrow_timer_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_timer_cfg-default-value","title":"periph_axi_lite_narrow_timer_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-narrow_and_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/narrow_and_wide\n</code></pre> <p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-narrow_and_wide/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-narrow_and_wide/#narrow_and_wide-default-value","title":"narrow_and_wide Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-rmq/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/rmq\n</code></pre> <p>Remote Quadrant mux/demux</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-rmq/#rmq-type","title":"rmq Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-rmq/#rmq-default-value","title":"rmq Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_and_inter/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/wide_and_inter\n</code></pre> <p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_to_hbm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/wide_to_hbm\n</code></pre> <p>wide xbar -&gt; hbm xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/","title":"Number of outstanding transactions on the AXI bus Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#txns-type","title":"txns Type","text":"<p><code>object</code> (Number of outstanding transactions on the AXI bus)</p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#number-of-outstanding-transactions-on-the-axi-bus-properties","title":"Number of outstanding transactions on the AXI bus Properties","text":"Property Type Required Nullable Defined by wide_and_inter <code>integer</code> Optional cannot be null Occamy System Schema wide_to_hbm <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_wide <code>integer</code> Optional cannot be null Occamy System Schema rmq <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_and_inter","title":"wide_and_inter","text":"<p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> <p><code>wide_and_inter</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_to_hbm","title":"wide_to_hbm","text":"<p>wide xbar -&gt; hbm xbar</p> <p><code>wide_to_hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#narrow_and_wide","title":"narrow_and_wide","text":"<p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> <p><code>narrow_and_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#narrow_and_wide-default-value","title":"narrow_and_wide Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#rmq","title":"rmq","text":"<p>Remote Quadrant mux/demux</p> <p><code>rmq</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#rmq-type","title":"rmq Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#rmq-default-value","title":"rmq Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-s1-quadrants/","title":"Number of S1 Quadrants Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/nr_s1_quadrant\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-s1-quadrants/#nr_s1_quadrant-type","title":"nr_s1_quadrant Type","text":"<p><code>integer</code> (Number of S1 Quadrants)</p>"},{"location":"schema-doc/occamy-properties-number-of-s1-quadrants/#nr_s1_quadrant-default-value","title":"nr_s1_quadrant Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy-properties-peripherals-schema/","title":"Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/peripherals\n</code></pre> <p>Description of an a peripheral sub-system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-peripherals-schema/#peripherals-type","title":"peripherals Type","text":"<p><code>object</code> (Peripherals Schema)</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#peripherals-schema-properties","title":"Peripherals Schema Properties","text":"Property Type Required Nullable Defined by rom <code>object</code> Optional cannot be null Peripherals Schema clint <code>object</code> Optional cannot be null Peripherals Schema axi_lite_peripherals <code>array</code> Optional cannot be null Peripherals Schema regbus_peripherals <code>array</code> Optional cannot be null Peripherals Schema"},{"location":"schema-doc/occamy-properties-peripherals-schema/#rom","title":"rom","text":"<p>Read-only memory from which all harts of the system start to boot.</p> <p><code>rom</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#rom-type","title":"rom Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#rom-default-value","title":"rom Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"address\": 16777216,\n  \"length\": 131072\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#clint","title":"clint","text":"<p>Core-local Interrupt Controller (CLINT) peripheral.</p> <p><code>clint</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#clint-type","title":"clint Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#clint-default-value","title":"clint Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"address\": 67108864,\n  \"length\": 1048576\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#axi_lite_peripherals","title":"axi_lite_peripherals","text":"<p><code>axi_lite_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#axi_lite_peripherals-type","title":"axi_lite_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#axi_lite_peripherals-constraints","title":"axi_lite_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#regbus_peripherals","title":"regbus_peripherals","text":"<p><code>regbus_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#regbus_peripherals-type","title":"regbus_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#regbus_peripherals-constraints","title":"regbus_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/occamy-properties-pre_xbar_slv_id_width_no_rocache/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pre_xbar_slv_id_width_no_rocache\n</code></pre> <p>ID width of quadrant pre-crossbar slave ports assuming no read-only cache.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-pre_xbar_slv_id_width_no_rocache/#pre_xbar_slv_id_width_no_rocache-type","title":"pre_xbar_slv_id_width_no_rocache Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-pre_xbar_slv_id_width_no_rocache/#pre_xbar_slv_id_width_no_rocache-default-value","title":"pre_xbar_slv_id_width_no_rocache Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_cluster_cores/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants/items/properties/nr_cluster_cores\n</code></pre> <p>Number of cores in a cluster</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_cluster_cores/#nr_cluster_cores-type","title":"nr_cluster_cores Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_cluster_cores/#nr_cluster_cores-default-value","title":"nr_cluster_cores Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_clusters/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants/items/properties/nr_clusters\n</code></pre> <p>Number of clusters in an S1 quadrant.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_clusters/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_clusters/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/","title":"Remote Quadrant Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants/items\n</code></pre> <p>Description of a remote quadrant</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#items-type","title":"items Type","text":"<p><code>object</code> (Remote Quadrant Description)</p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#remote-quadrant-description-properties","title":"Remote Quadrant Description Properties","text":"Property Type Required Nullable Defined by nr_clusters <code>integer</code> Optional cannot be null Occamy System Schema nr_cluster_cores <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_clusters","title":"nr_clusters","text":"<p>Number of clusters in an S1 quadrant.</p> <p><code>nr_clusters</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_cluster_cores","title":"nr_cluster_cores","text":"<p>Number of cores in a cluster</p> <p><code>nr_cluster_cores</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_cluster_cores-type","title":"nr_cluster_cores Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_cluster_cores-default-value","title":"nr_cluster_cores Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants/","title":"Remote Quadrants Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants\n</code></pre> <p>List of attached remote quadrants</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants/#remote_quadrants-type","title":"remote_quadrants Type","text":"<p><code>object[]</code> (Remote Quadrant Description)</p>"},{"location":"schema-doc/occamy-properties-remote-quadrants/#remote_quadrants-constraints","title":"remote_quadrants Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_addr/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/cfg_base_addr\n</code></pre> <p>Base address of the quadrant configuration region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_addr/#cfg_base_addr-type","title":"cfg_base_addr Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_addr/#cfg_base_addr-default-value","title":"cfg_base_addr Default Value","text":"<p>The default value is:</p> <pre><code>184549376\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_offset/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/cfg_base_offset\n</code></pre> <p>Allocated size and offset of each quadrant configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_offset/#cfg_base_offset-type","title":"cfg_base_offset Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_offset/#cfg_base_offset-default-value","title":"cfg_base_offset Default Value","text":"<p>The default value is:</p> <pre><code>65536\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-narrow_xbar_slv_id_width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/narrow_xbar_slv_id_width\n</code></pre> <p>ID width of narrow quadrant crossbar slave ports.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-nr_clusters/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/nr_clusters\n</code></pre> <p>Number of clusters in an S1 quadrant.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-nr_clusters/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-nr_clusters/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-address_regions/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/address_regions\n</code></pre> <p>Number of programmable address regions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-address_regions/#address_regions-type","title":"address_regions Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-address_regions/#address_regions-default-value","title":"address_regions Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-count/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/count\n</code></pre> <p>The number of cache lines per set. Power of two; &gt;= 2.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-count/#count-type","title":"count Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-max_trans/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/max_trans\n</code></pre> <p>Maximum Outstanding Transaction</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-max_trans/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-max_trans/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-sets/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/sets\n</code></pre> <p>The set associativity of the cache. Power of two; &gt;= 1.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-sets/#sets-type","title":"sets Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/width\n</code></pre> <p>Cache Line Width</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-width/#width-type","title":"width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/","title":"Untitled object in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg\n</code></pre> <p>Constant cache configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#ro_cache_cfg-type","title":"ro_cache_cfg Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by max_trans <code>integer</code> Optional cannot be null Occamy System Schema width <code>integer</code> Optional cannot be null Occamy System Schema count <code>integer</code> Optional cannot be null Occamy System Schema sets <code>integer</code> Optional cannot be null Occamy System Schema address_regions <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#max_trans","title":"max_trans","text":"<p>Maximum Outstanding Transaction</p> <p><code>max_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#width","title":"width","text":"<p>Cache Line Width</p> <p><code>width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#width-type","title":"width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#count","title":"count","text":"<p>The number of cache lines per set. Power of two; &gt;= 2.</p> <p><code>count</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#count-type","title":"count Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#sets","title":"sets","text":"<p>The set associativity of the cache. Power of two; &gt;= 1.</p> <p><code>sets</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#sets-type","title":"sets Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#address_regions","title":"address_regions","text":"<p>Number of programmable address regions.</p> <p><code>address_regions</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#address_regions-type","title":"address_regions Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#address_regions-default-value","title":"address_regions Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-wide_xbar_slv_id_width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/wide_xbar_slv_id_width\n</code></pre> <p>ID width of wide quadrant crossbar slave ports.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-wide_xbar_slv_id_width/#wide_xbar_slv_id_width-type","title":"wide_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-wide_xbar_slv_id_width/#wide_xbar_slv_id_width-default-value","title":"wide_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/","title":"S1 Quadrant Properties Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#s1_quadrant-type","title":"s1_quadrant Type","text":"<p><code>object</code> (S1 Quadrant Properties)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#s1-quadrant-properties-properties","title":"S1 Quadrant Properties Properties","text":"Property Type Required Nullable Defined by nr_clusters <code>integer</code> Optional cannot be null Occamy System Schema ro_cache_cfg <code>object</code> Optional cannot be null Occamy System Schema wide_xbar <code>object</code> Optional cannot be null Occamy System Schema wide_xbar_slv_id_width <code>integer</code> Optional cannot be null Occamy System Schema narrow_xbar <code>object</code> Optional cannot be null Occamy System Schema narrow_xbar_slv_id_width <code>integer</code> Optional cannot be null Occamy System Schema cfg_base_addr <code>integer</code> Optional cannot be null Occamy System Schema cfg_base_offset <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#nr_clusters","title":"nr_clusters","text":"<p>Number of clusters in an S1 quadrant.</p> <p><code>nr_clusters</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#ro_cache_cfg","title":"ro_cache_cfg","text":"<p>Constant cache configuration.</p> <p><code>ro_cache_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#ro_cache_cfg-type","title":"ro_cache_cfg Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar","title":"wide_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>wide_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar-type","title":"wide_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar_slv_id_width","title":"wide_xbar_slv_id_width","text":"<p>ID width of wide quadrant crossbar slave ports.</p> <p><code>wide_xbar_slv_id_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar_slv_id_width-type","title":"wide_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar_slv_id_width-default-value","title":"wide_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar","title":"narrow_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>narrow_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar-type","title":"narrow_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar_slv_id_width","title":"narrow_xbar_slv_id_width","text":"<p>ID width of narrow quadrant crossbar slave ports.</p> <p><code>narrow_xbar_slv_id_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_addr","title":"cfg_base_addr","text":"<p>Base address of the quadrant configuration region.</p> <p><code>cfg_base_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_addr-type","title":"cfg_base_addr Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_addr-default-value","title":"cfg_base_addr Default Value","text":"<p>The default value is:</p> <pre><code>184549376\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_offset","title":"cfg_base_offset","text":"<p>Allocated size and offset of each quadrant configuration.</p> <p><code>cfg_base_offset</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_offset-type","title":"cfg_base_offset Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_offset-default-value","title":"cfg_base_offset Default Value","text":"<p>The default value is:</p> <pre><code>65536\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/","title":"Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/cluster\n</code></pre> <p>Base description of a Snitch cluster and its internal structure and configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster-type","title":"cluster Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#snitch-cluster-schema-properties","title":"Snitch Cluster Schema Properties","text":"Property Type Required Nullable Defined by name <code>string</code> Optional cannot be null Snitch Cluster Schema boot_addr <code>number</code> Optional cannot be null Snitch Cluster Schema cluster_base_addr <code>number</code> Optional cannot be null Snitch Cluster Schema tcdm <code>object</code> Optional cannot be null Snitch Cluster Schema cluster_periph_size <code>number</code> Optional cannot be null Snitch Cluster Schema zero_mem_size <code>number</code> Optional cannot be null Snitch Cluster Schema addr_width <code>number</code> Required cannot be null Snitch Cluster Schema data_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_data_width <code>number</code> Optional cannot be null Snitch Cluster Schema narrow_trans <code>number</code> Optional cannot be null Snitch Cluster Schema wide_trans <code>number</code> Optional cannot be null Snitch Cluster Schema id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema dma_id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema user_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_user_width <code>number</code> Optional cannot be null Snitch Cluster Schema hart_base_id <code>number</code> Optional cannot be null Snitch Cluster Schema mode <code>string</code> Optional cannot be null Snitch Cluster Schema vm_support <code>boolean</code> Optional cannot be null Snitch Cluster Schema dma_axi_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema dma_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema enable_debug <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_expose <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_fields <code>object</code> Optional cannot be null Snitch Cluster Schema timing <code>object</code> Optional cannot be null Snitch Cluster Schema hives <code>array</code> Required cannot be null Snitch Cluster Schema"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#name","title":"name","text":"<p>Optional name for the generated wrapper.</p> <p><code>name</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#name-default-value","title":"name Default Value","text":"<p>The default value is:</p> <pre><code>\"snitch_cluster\"\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#boot_addr","title":"boot_addr","text":"<p>Address from which all harts of the cluster start to boot. The default setting is <code>0x8000_0000</code>.</p> <p><code>boot_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#boot_addr-type","title":"boot_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#boot_addr-default-value","title":"boot_addr Default Value","text":"<p>The default value is:</p> <pre><code>2147483648\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_base_addr","title":"cluster_base_addr","text":"<p>Base address of this cluster.</p> <p><code>cluster_base_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_base_addr-type","title":"cluster_base_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#tcdm","title":"tcdm","text":"<p>Configuration of the Tightly Coupled Data Memory of this cluster.</p> <p><code>tcdm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#tcdm-type","title":"tcdm Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#tcdm-default-value","title":"tcdm Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"size\": 128,\n  \"banks\": 32\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_periph_size","title":"cluster_periph_size","text":"<p>Address region size reserved for cluster peripherals in KiByte.</p> <p><code>cluster_periph_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_periph_size-type","title":"cluster_periph_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_periph_size-examples","title":"cluster_periph_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#zero_mem_size","title":"zero_mem_size","text":"<p>Address region size reserved for the Zero-Memory in KiByte.</p> <p><code>zero_mem_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#zero_mem_size-type","title":"zero_mem_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#zero_mem_size-examples","title":"zero_mem_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#addr_width","title":"addr_width","text":"<p>Length of the address, should be greater than 30. If the address is larger than 34 the data bus needs to be 64 bits in size.</p> <p><code>addr_width</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#addr_width-type","title":"addr_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#addr_width-default-value","title":"addr_width Default Value","text":"<p>The default value is:</p> <pre><code>48\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#data_width","title":"data_width","text":"<p>Data bus size of the integer core (everything except the DMA), must be 32 or 64. A double precision FPU requires 64 bit data length.</p> <p><code>data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#data_width-type","title":"data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#data_width-default-value","title":"data_width Default Value","text":"<p>The default value is:</p> <pre><code>64\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_data_width","title":"dma_data_width","text":"<p>Data bus size of DMA. Usually this is larger than the integer core as the DMA is used to efficiently transfer bulk of data.</p> <p><code>dma_data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_data_width-type","title":"dma_data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_data_width-default-value","title":"dma_data_width Default Value","text":"<p>The default value is:</p> <pre><code>512\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#narrow_trans","title":"narrow_trans","text":"<p>Outstanding transactions on the narrow AXI network</p> <p><code>narrow_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#narrow_trans-type","title":"narrow_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#narrow_trans-default-value","title":"narrow_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#wide_trans","title":"wide_trans","text":"<p>Outstanding transactions on the wide AXI network</p> <p><code>wide_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#wide_trans-type","title":"wide_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#wide_trans-default-value","title":"wide_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#id_width_in","title":"id_width_in","text":"<p>Id width of the narrower AXI plug into the cluster.</p> <p><code>id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#id_width_in-type","title":"id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#id_width_in-default-value","title":"id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_id_width_in","title":"dma_id_width_in","text":"<p>Id width of the wide AXI plug into the cluster.</p> <p><code>dma_id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_id_width_in-type","title":"dma_id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_id_width_in-default-value","title":"dma_id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#user_width","title":"user_width","text":"<p>User width of the narrower AXI plug into the cluster.</p> <p><code>user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#user_width-type","title":"user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#user_width-default-value","title":"user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_user_width","title":"dma_user_width","text":"<p>User width of the wide AXI plug into the cluster.</p> <p><code>dma_user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_user_width-type","title":"dma_user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_user_width-default-value","title":"dma_user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hart_base_id","title":"hart_base_id","text":"<p>Base hart id of the cluster. All cores get the respective cluster id plus their cluster position as the final <code>hart_id</code>.</p> <p><code>hart_base_id</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hart_base_id-type","title":"hart_base_id Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#mode","title":"mode","text":"<p>Supported mode by the processor, can be msu.</p> <p>Currently ignored.</p> <p><code>mode</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#mode-type","title":"mode Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#vm_support","title":"vm_support","text":"<p>Whether to provide virtual memory support (Sv32).</p> <p><code>vm_support</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#vm_support-type","title":"vm_support Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#vm_support-default-value","title":"vm_support Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_axi_req_fifo_depth","title":"dma_axi_req_fifo_depth","text":"<p>Number of AXI FIFO entries of the DMA engine.</p> <p><code>dma_axi_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_axi_req_fifo_depth-type","title":"dma_axi_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_axi_req_fifo_depth-default-value","title":"dma_axi_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_req_fifo_depth","title":"dma_req_fifo_depth","text":"<p>Number of request entries the DMA can keep</p> <p><code>dma_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_req_fifo_depth-type","title":"dma_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_req_fifo_depth-default-value","title":"dma_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#enable_debug","title":"enable_debug","text":"<p>Whether to provide a debug request input and external debug features</p> <p><code>enable_debug</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#enable_debug-type","title":"enable_debug Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#enable_debug-default-value","title":"enable_debug Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_expose","title":"sram_cfg_expose","text":"<p>Whether to expose memory cut configuration inputs for implementation</p> <p><code>sram_cfg_expose</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_expose-type","title":"sram_cfg_expose Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields","title":"sram_cfg_fields","text":"<p>The names and widths of memory cut configuration inputs needed for implementation</p> <p><code>sram_cfg_fields</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields-type","title":"sram_cfg_fields Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields-constraints","title":"sram_cfg_fields Constraints","text":"<p>minimum number of properties: the minimum number of properties for this object is: <code>1</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields-default-value","title":"sram_cfg_fields Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"reserved\": 1\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#timing","title":"timing","text":"<p><code>timing</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Timing and Latency Tuning Parameter)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#timing-type","title":"timing Type","text":"<p><code>object</code> (Timing and Latency Tuning Parameter)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hives","title":"hives","text":"<p>Cores in a hive share an instruction cache and other shared infrastructure such as the PTW or the multiply/divide unit.</p> <p><code>hives</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object[]</code> (Hive Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hives-type","title":"hives Type","text":"<p><code>object[]</code> (Hive Description)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hives-constraints","title":"hives Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/occamy/","title":"Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json\n</code></pre> <p>Description of an Occamy-based system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json"},{"location":"schema-doc/occamy/#occamy-system-schema-type","title":"Occamy System Schema Type","text":"<p><code>object</code> (Occamy System Schema)</p>"},{"location":"schema-doc/occamy/#occamy-system-schema-properties","title":"Occamy System Schema Properties","text":"Property Type Required Nullable Defined by cluster <code>object</code> Required cannot be null Occamy System Schema quadrant_pre_xbar <code>object</code> Optional cannot be null Occamy System Schema pre_xbar_slv_id_width_no_rocache <code>integer</code> Optional cannot be null Occamy System Schema wide_xbar <code>object</code> Optional cannot be null Occamy System Schema quadrant_inter_xbar <code>object</code> Optional cannot be null Occamy System Schema hbm_xbar <code>object</code> Optional cannot be null Occamy System Schema narrow_xbar <code>object</code> Optional cannot be null Occamy System Schema narrow_xbar_slv_id_width <code>integer</code> Optional cannot be null Occamy System Schema nr_s1_quadrant <code>integer</code> Optional cannot be null Occamy System Schema narrow_tlb_cfg <code>object</code> Optional cannot be null Occamy System Schema wide_tlb_cfg <code>object</code> Optional cannot be null Occamy System Schema cuts <code>object</code> Optional cannot be null Occamy System Schema txns <code>object</code> Optional cannot be null Occamy System Schema is_remote_quadrant <code>boolean</code> Optional cannot be null Occamy System Schema remote_quadrants <code>array</code> Optional cannot be null Occamy System Schema s1_quadrant <code>object</code> Optional cannot be null Occamy System Schema spm_narrow <code>object</code> Optional cannot be null Occamy System Schema spm_wide <code>object</code> Optional cannot be null Occamy System Schema wide_zero_mem <code>object</code> Optional cannot be null Occamy System Schema pcie <code>object</code> Optional cannot be null Occamy System Schema hbi <code>object</code> Optional cannot be null Occamy System Schema hbm <code>object</code> Optional cannot be null Occamy System Schema peripherals <code>object</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy/#cluster","title":"cluster","text":"<p>Base description of a Snitch cluster and its internal structure and configuration.</p> <p><code>cluster</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object</code> (Snitch Cluster Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#cluster-type","title":"cluster Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/occamy/#quadrant_pre_xbar","title":"quadrant_pre_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>quadrant_pre_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#quadrant_pre_xbar-type","title":"quadrant_pre_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#pre_xbar_slv_id_width_no_rocache","title":"pre_xbar_slv_id_width_no_rocache","text":"<p>ID width of quadrant pre-crossbar slave ports assuming no read-only cache.</p> <p><code>pre_xbar_slv_id_width_no_rocache</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#pre_xbar_slv_id_width_no_rocache-type","title":"pre_xbar_slv_id_width_no_rocache Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy/#pre_xbar_slv_id_width_no_rocache-default-value","title":"pre_xbar_slv_id_width_no_rocache Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy/#wide_xbar","title":"wide_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>wide_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#wide_xbar-type","title":"wide_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#quadrant_inter_xbar","title":"quadrant_inter_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>quadrant_inter_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#quadrant_inter_xbar-type","title":"quadrant_inter_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#hbm_xbar","title":"hbm_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>hbm_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#hbm_xbar-type","title":"hbm_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#narrow_xbar","title":"narrow_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>narrow_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#narrow_xbar-type","title":"narrow_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#narrow_xbar_slv_id_width","title":"narrow_xbar_slv_id_width","text":"<p>ID width of narrow crossbar slave ports.</p> <p><code>narrow_xbar_slv_id_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy/#nr_s1_quadrant","title":"nr_s1_quadrant","text":"<p><code>nr_s1_quadrant</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code> (Number of S1 Quadrants)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#nr_s1_quadrant-type","title":"nr_s1_quadrant Type","text":"<p><code>integer</code> (Number of S1 Quadrants)</p>"},{"location":"schema-doc/occamy/#nr_s1_quadrant-default-value","title":"nr_s1_quadrant Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy/#narrow_tlb_cfg","title":"narrow_tlb_cfg","text":"<p>AXI TLB Properties</p> <p><code>narrow_tlb_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI TLB Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#narrow_tlb_cfg-type","title":"narrow_tlb_cfg Type","text":"<p><code>object</code> (AXI TLB Schema)</p>"},{"location":"schema-doc/occamy/#wide_tlb_cfg","title":"wide_tlb_cfg","text":"<p>AXI TLB Properties</p> <p><code>wide_tlb_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI TLB Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#wide_tlb_cfg-type","title":"wide_tlb_cfg Type","text":"<p><code>object</code> (AXI TLB Schema)</p>"},{"location":"schema-doc/occamy/#cuts","title":"cuts","text":"<p><code>cuts</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Number of cuts on the AXI bus)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#cuts-type","title":"cuts Type","text":"<p><code>object</code> (Number of cuts on the AXI bus)</p>"},{"location":"schema-doc/occamy/#txns","title":"txns","text":"<p><code>txns</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Number of outstanding transactions on the AXI bus)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#txns-type","title":"txns Type","text":"<p><code>object</code> (Number of outstanding transactions on the AXI bus)</p>"},{"location":"schema-doc/occamy/#is_remote_quadrant","title":"is_remote_quadrant","text":"<p>Set if this is a remote quadrant. Only quadrant ant remote interconnect is generated</p> <p><code>is_remote_quadrant</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#is_remote_quadrant-type","title":"is_remote_quadrant Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy/#remote_quadrants","title":"remote_quadrants","text":"<p>List of attached remote quadrants</p> <p><code>remote_quadrants</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object[]</code> (Remote Quadrant Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#remote_quadrants-type","title":"remote_quadrants Type","text":"<p><code>object[]</code> (Remote Quadrant Description)</p>"},{"location":"schema-doc/occamy/#remote_quadrants-constraints","title":"remote_quadrants Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/occamy/#s1_quadrant","title":"s1_quadrant","text":"<p><code>s1_quadrant</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (S1 Quadrant Properties)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#s1_quadrant-type","title":"s1_quadrant Type","text":"<p><code>object</code> (S1 Quadrant Properties)</p>"},{"location":"schema-doc/occamy/#spm_narrow","title":"spm_narrow","text":"<p>Description of a generic address range</p> <p><code>spm_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#spm_narrow-type","title":"spm_narrow Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#spm_wide","title":"spm_wide","text":"<p>Description of a generic address range</p> <p><code>spm_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#spm_wide-type","title":"spm_wide Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#wide_zero_mem","title":"wide_zero_mem","text":"<p>Description of a generic address range</p> <p><code>wide_zero_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#wide_zero_mem-type","title":"wide_zero_mem Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#pcie","title":"pcie","text":"<p><code>pcie</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Configuration of external PCIe port)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#pcie-type","title":"pcie Type","text":"<p><code>object</code> (Configuration of external PCIe port)</p>"},{"location":"schema-doc/occamy/#hbi","title":"hbi","text":"<p>Description of a generic address range</p> <p><code>hbi</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#hbi-type","title":"hbi Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#hbm","title":"hbm","text":"<p><code>hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Configuration of external HBM interface)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#hbm-type","title":"hbm Type","text":"<p><code>object</code> (Configuration of external HBM interface)</p>"},{"location":"schema-doc/occamy/#peripherals","title":"peripherals","text":"<p>Description of an a peripheral sub-system.</p> <p><code>peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Peripherals Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#peripherals-type","title":"peripherals Type","text":"<p><code>object</code> (Peripherals Schema)</p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items/address\n</code></pre> <p>Start address of the peripheral address region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items/length\n</code></pre> <p>Total size of the peripheral address region in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-name/","title":"Untitled string in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items/name\n</code></pre> <p>Name of the peripheral connected to the AXI-lite crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-name/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items/#items-type","title":"items Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals/","title":"Untitled array in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals/#axi_lite_peripherals-type","title":"axi_lite_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals/#axi_lite_peripherals-constraints","title":"axi_lite_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/peripherals-properties-clint-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint/address\n</code></pre> <p>Start address of CLINT address region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-clint-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-clint-default/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-clint-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint/length\n</code></pre> <p>Total size of CLINT address region in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-clint-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-clint/","title":"Untitled object in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint\n</code></pre> <p>Core-local Interrupt Controller (CLINT) peripheral.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint/#clint-type","title":"clint Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals-properties-clint/#clint-default-value","title":"clint Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"address\": 67108864,\n  \"length\": 1048576\n}\n</code></pre>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items/address\n</code></pre> <p>Start address of the peripheral address region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items/length\n</code></pre> <p>Total size of the peripheral address region in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-name/","title":"Untitled string in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items/name\n</code></pre> <p>Name of the peripheral connected to the Register Bus crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-name/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items/#items-type","title":"items Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals/","title":"Untitled array in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals/#regbus_peripherals-type","title":"regbus_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals/#regbus_peripherals-constraints","title":"regbus_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/peripherals-properties-rom-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom/address\n</code></pre> <p>Start address of ROM.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-rom-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-rom-default/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-rom-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom/length\n</code></pre> <p>Total size of ROM in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-rom-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-rom/","title":"Untitled object in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom\n</code></pre> <p>Read-only memory from which all harts of the system start to boot.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom/#rom-type","title":"rom Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals-properties-rom/#rom-default-value","title":"rom Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"address\": 16777216,\n  \"length\": 131072\n}\n</code></pre>"},{"location":"schema-doc/peripherals/","title":"Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json\n</code></pre> <p>Description of an a peripheral sub-system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none peripherals.schema.json"},{"location":"schema-doc/peripherals/#peripherals-schema-type","title":"Peripherals Schema Type","text":"<p><code>object</code> (Peripherals Schema)</p>"},{"location":"schema-doc/peripherals/#peripherals-schema-properties","title":"Peripherals Schema Properties","text":"Property Type Required Nullable Defined by rom <code>object</code> Optional cannot be null Peripherals Schema clint <code>object</code> Optional cannot be null Peripherals Schema axi_lite_peripherals <code>array</code> Optional cannot be null Peripherals Schema regbus_peripherals <code>array</code> Optional cannot be null Peripherals Schema"},{"location":"schema-doc/peripherals/#rom","title":"rom","text":"<p>Read-only memory from which all harts of the system start to boot.</p> <p><code>rom</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#rom-type","title":"rom Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals/#rom-default-value","title":"rom Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"address\": 16777216,\n  \"length\": 131072\n}\n</code></pre>"},{"location":"schema-doc/peripherals/#clint","title":"clint","text":"<p>Core-local Interrupt Controller (CLINT) peripheral.</p> <p><code>clint</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#clint-type","title":"clint Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals/#clint-default-value","title":"clint Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"address\": 67108864,\n  \"length\": 1048576\n}\n</code></pre>"},{"location":"schema-doc/peripherals/#axi_lite_peripherals","title":"axi_lite_peripherals","text":"<p><code>axi_lite_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#axi_lite_peripherals-type","title":"axi_lite_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals/#axi_lite_peripherals-constraints","title":"axi_lite_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/peripherals/#regbus_peripherals","title":"regbus_peripherals","text":"<p><code>regbus_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#regbus_peripherals-type","title":"regbus_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals/#regbus_peripherals-constraints","title":"regbus_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/snitch_cluster-properties-addr_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/addr_width\n</code></pre> <p>Length of the address, should be greater than 30. If the address is larger than 34 the data bus needs to be 64 bits in size.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-addr_width/#addr_width-type","title":"addr_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-addr_width/#addr_width-default-value","title":"addr_width Default Value","text":"<p>The default value is:</p> <pre><code>48\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-boot_addr/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/boot_addr\n</code></pre> <p>Address from which all harts of the cluster start to boot. The default setting is <code>0x8000_0000</code>.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-boot_addr/#boot_addr-type","title":"boot_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-boot_addr/#boot_addr-default-value","title":"boot_addr Default Value","text":"<p>The default value is:</p> <pre><code>2147483648\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-cluster_base_addr/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/cluster_base_addr\n</code></pre> <p>Base address of this cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-cluster_base_addr/#cluster_base_addr-type","title":"cluster_base_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-cluster_periph_size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/cluster_periph_size\n</code></pre> <p>Address region size reserved for cluster peripherals in KiByte.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-cluster_periph_size/#cluster_periph_size-type","title":"cluster_periph_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-cluster_periph_size/#cluster_periph_size-examples","title":"cluster_periph_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-data_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/data_width\n</code></pre> <p>Data bus size of the integer core (everything except the DMA), must be 32 or 64. A double precision FPU requires 64 bit data length.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-data_width/#data_width-type","title":"data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-data_width/#data_width-default-value","title":"data_width Default Value","text":"<p>The default value is:</p> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_axi_req_fifo_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_axi_req_fifo_depth\n</code></pre> <p>Number of AXI FIFO entries of the DMA engine.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_axi_req_fifo_depth/#dma_axi_req_fifo_depth-type","title":"dma_axi_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_axi_req_fifo_depth/#dma_axi_req_fifo_depth-default-value","title":"dma_axi_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_data_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_data_width\n</code></pre> <p>Data bus size of DMA. Usually this is larger than the integer core as the DMA is used to efficiently transfer bulk of data.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_data_width/#dma_data_width-type","title":"dma_data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_data_width/#dma_data_width-default-value","title":"dma_data_width Default Value","text":"<p>The default value is:</p> <pre><code>512\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_id_width_in/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_id_width_in\n</code></pre> <p>Id width of the wide AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_id_width_in/#dma_id_width_in-type","title":"dma_id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_id_width_in/#dma_id_width_in-default-value","title":"dma_id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_req_fifo_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_req_fifo_depth\n</code></pre> <p>Number of request entries the DMA can keep</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_req_fifo_depth/#dma_req_fifo_depth-type","title":"dma_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_req_fifo_depth/#dma_req_fifo_depth-default-value","title":"dma_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_user_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_user_width\n</code></pre> <p>User width of the wide AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_user_width/#dma_user_width-type","title":"dma_user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_user_width/#dma_user_width-default-value","title":"dma_user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-enable_debug/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/enable_debug\n</code></pre> <p>Whether to provide a debug request input and external debug features</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-enable_debug/#enable_debug-type","title":"enable_debug Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-enable_debug/#enable_debug-default-value","title":"enable_debug Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hart_base_id/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hart_base_id\n</code></pre> <p>Base hart id of the cluster. All cores get the respective cluster id plus their cluster position as the final <code>hart_id</code>.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hart_base_id/#hart_base_id-type","title":"hart_base_id Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xfrep-extension/","title":"Enable Xfrep Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xfrep\n</code></pre> <p>Floating-point repetition buffer (Xfrep) custom extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xfrep-extension/#xfrep-type","title":"xfrep Type","text":"<p><code>boolean</code> (Enable Xfrep Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xfrep-extension/#xfrep-default-value","title":"xfrep Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xssr-extension/","title":"Enable Xssr Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xssr\n</code></pre> <p>Stream Semantic Registers (Xssr) custom extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xssr-extension/#xssr-type","title":"xssr Type","text":"<p><code>boolean</code> (Enable Xssr Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xssr-extension/#xssr-default-value","title":"xssr Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/","title":"ISA String containing RISC-V standard extensions. Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/isa\n</code></pre> <p>ISA string as defined by the RISC-V standard. Only contain the standardized ISA extensions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/#isa-type","title":"isa Type","text":"<p><code>string</code> (ISA String containing RISC-V standard extensions.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/#isa-default-value","title":"isa Default Value","text":"<p>The default value is:</p> <pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/#isa-examples","title":"isa Examples","text":"<pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_dtlb_entries/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_dtlb_entries\n</code></pre> <p>Number of DTLB entries. Determines the core's size.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_dtlb_entries/#num_dtlb_entries-type","title":"num_dtlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_dtlb_entries/#num_dtlb_entries-default-value","title":"num_dtlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_loads/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_fp_outstanding_loads\n</code></pre> <p>Number of outstanding floating-point loads. Determines the buffer size in the FPU's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_loads/#num_fp_outstanding_loads-type","title":"num_fp_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_loads/#num_fp_outstanding_loads-default-value","title":"num_fp_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_mem/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_fp_outstanding_mem\n</code></pre> <p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_mem/#num_fp_outstanding_mem-type","title":"num_fp_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_mem/#num_fp_outstanding_mem-default-value","title":"num_fp_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_loads/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_int_outstanding_loads\n</code></pre> <p>Number of outstanding integer loads. Determines the buffer size in the core's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_loads/#num_int_outstanding_loads-type","title":"num_int_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_loads/#num_int_outstanding_loads-default-value","title":"num_int_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_mem/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_int_outstanding_mem\n</code></pre> <p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_mem/#num_int_outstanding_mem-type","title":"num_int_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_mem/#num_int_outstanding_mem-default-value","title":"num_int_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_itlb_entries/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_itlb_entries\n</code></pre> <p>Number of ITLB entries. Determines the core's size.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_itlb_entries/#num_itlb_entries-type","title":"num_itlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_itlb_entries/#num_itlb_entries-default-value","title":"num_itlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_sequencer_instructions/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_sequencer_instructions\n</code></pre> <p>Amount of floating-point instruction the floating-point sequence buffer can hold.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_sequencer_instructions/#num_sequencer_instructions-type","title":"num_sequencer_instructions Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_sequencer_instructions/#num_sequencer_instructions-default-value","title":"num_sequencer_instructions Default Value","text":"<p>The default value is:</p> <pre><code>16\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-feature/","title":"SSR Intersection Feature Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_intersection\n</code></pre> <p>Enable intersection between 3 SSRs for sparse-sparse processing.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-feature/#ssr_intersection-type","title":"ssr_intersection Type","text":"<p><code>boolean</code> (SSR Intersection Feature)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple-items/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_intersection_triple/items\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple-items/#items-type","title":"items Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/","title":"SSR Intersection Triple Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_intersection_triple\n</code></pre> <p>Indices of the SSRs forming an SSR intersection triple.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/#ssr_intersection_triple-type","title":"ssr_intersection_triple Type","text":"<p><code>number[]</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/#ssr_intersection_triple-constraints","title":"ssr_intersection_triple Constraints","text":"<p>maximum number of items: the maximum number of items for this array is: <code>3</code></p> <p>minimum number of items: the minimum number of items for this array is: <code>3</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/#ssr_intersection_triple-default-value","title":"ssr_intersection_triple Default Value","text":"<p>The default value is:</p> <pre><code>[\n  0,\n  1,\n  2\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr_mux_resp_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_mux_resp_depth\n</code></pre> <p>Depth of response buffer in the TCDM multiplexer arbitrating between core and SSR 0.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr_mux_resp_depth/#ssr_mux_resp_depth-type","title":"ssr_mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr_mux_resp_depth/#ssr_mux_resp_depth-default-value","title":"ssr_mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-0/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/default/0\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-0/#0-type","title":"0 Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-1/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/default/1\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-1/#1-type","title":"1 Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-2/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/default/2\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-2/#2-type","title":"2 Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/data_credits\n</code></pre> <p>Number of credits and buffer depth of the data word FIFO.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/#data_credits-type","title":"data_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/#data_credits-constraints","title":"data_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/#data_credits-default-value","title":"data_credits Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/index_credits\n</code></pre> <p>Number of credits and buffer depth of the index word FIFO.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/#index_credits-type","title":"index_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/#index_credits-constraints","title":"index_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/#index_credits-default-value","title":"index_credits Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_width/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/index_width\n</code></pre> <p>Internal bitwidth of indices in address generator; default covers full TCDM in a unit-stride 1D loop.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_width/#index_width-type","title":"index_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_width/#index_width-constraints","title":"index_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indir_out_spill/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/indir_out_spill\n</code></pre> <p>Whether to cut timing paths with a spill register at the address generator output; added only if indirection extension enabled.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indir_out_spill/#indir_out_spill-type","title":"indir_out_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indir_out_spill/#indir_out_spill-default-value","title":"indir_out_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indirection/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/indirection\n</code></pre> <p>Enable indirection extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indirection/#indirection-type","title":"indirection Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/isect_slave_credits\n</code></pre> <p>Number of elements by which intersected indices may outrun corresponding data; added only if this SSR is an intersection slave.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/#isect_slave_credits-type","title":"isect_slave_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/#isect_slave_credits-constraints","title":"isect_slave_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>2</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/#isect_slave_credits-default-value","title":"isect_slave_credits Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_spill/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/isect_slave_spill\n</code></pre> <p>Whether to cut timing paths with a spill register at the intersector index output; added only if this SSR is an intersection slave.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_spill/#isect_slave_spill-type","title":"isect_slave_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_spill/#isect_slave_spill-default-value","title":"isect_slave_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/mux_resp_depth\n</code></pre> <p>Depth of response buffer in the TCDM multiplexer arbitrating between data and indices.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/#mux_resp_depth-type","title":"mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/#mux_resp_depth-constraints","title":"mux_resp_depth Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/#mux_resp_depth-default-value","title":"mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/num_loops\n</code></pre> <p>Number of nested hardware loops in address generator.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/#num_loops-type","title":"num_loops Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/#num_loops-constraints","title":"num_loops Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>4</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/#num_loops-default-value","title":"num_loops Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-pointer_width/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/pointer_width\n</code></pre> <p>Internal bitwidth of pointers in address generator; default covers full TCDM</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-pointer_width/#pointer_width-type","title":"pointer_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-pointer_width/#pointer_width-constraints","title":"pointer_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-reg_idx/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/reg_idx\n</code></pre> <p>The floating-point register index this SSR is assigned to. If not assigned, the next available index counting from 0 is chosen.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-reg_idx/#reg_idx-type","title":"reg_idx Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-reg_idx/#reg_idx-constraints","title":"reg_idx Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>31</code></p> <p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/rpt_width\n</code></pre> <p>Internal bitwidth of repetition counter for read streams.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/#rpt_width-type","title":"rpt_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/#rpt_width-constraints","title":"rpt_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/#rpt_width-default-value","title":"rpt_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/shift_width\n</code></pre> <p>Internal bitwidth of additional left shift amount for indirect indices.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/#shift_width-type","title":"shift_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/#shift_width-constraints","title":"shift_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/#shift_width-default-value","title":"shift_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/","title":"SSR Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items\n</code></pre> <p>Description of a single Stream Semantic Register.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#items-type","title":"items Type","text":"<p><code>object</code> (SSR Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#ssr-description-properties","title":"SSR Description Properties","text":"Property Type Required Nullable Defined by reg_idx <code>number</code> Optional can be null Snitch Cluster Schema indirection <code>boolean</code> Optional cannot be null Snitch Cluster Schema indir_out_spill <code>boolean</code> Optional cannot be null Snitch Cluster Schema isect_slave_spill <code>boolean</code> Optional cannot be null Snitch Cluster Schema isect_slave_credits <code>number</code> Optional cannot be null Snitch Cluster Schema num_loops <code>number</code> Optional cannot be null Snitch Cluster Schema index_credits <code>number</code> Optional cannot be null Snitch Cluster Schema data_credits <code>number</code> Optional cannot be null Snitch Cluster Schema mux_resp_depth <code>number</code> Optional cannot be null Snitch Cluster Schema index_width <code>number</code> Optional can be null Snitch Cluster Schema pointer_width <code>number</code> Optional can be null Snitch Cluster Schema shift_width <code>number</code> Optional cannot be null Snitch Cluster Schema rpt_width <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#reg_idx","title":"reg_idx","text":"<p>The floating-point register index this SSR is assigned to. If not assigned, the next available index counting from 0 is chosen.</p> <p><code>reg_idx</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>can be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#reg_idx-type","title":"reg_idx Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#reg_idx-constraints","title":"reg_idx Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>31</code></p> <p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indirection","title":"indirection","text":"<p>Enable indirection extension.</p> <p><code>indirection</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indirection-type","title":"indirection Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indir_out_spill","title":"indir_out_spill","text":"<p>Whether to cut timing paths with a spill register at the address generator output; added only if indirection extension enabled.</p> <p><code>indir_out_spill</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indir_out_spill-type","title":"indir_out_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indir_out_spill-default-value","title":"indir_out_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_spill","title":"isect_slave_spill","text":"<p>Whether to cut timing paths with a spill register at the intersector index output; added only if this SSR is an intersection slave.</p> <p><code>isect_slave_spill</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_spill-type","title":"isect_slave_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_spill-default-value","title":"isect_slave_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits","title":"isect_slave_credits","text":"<p>Number of elements by which intersected indices may outrun corresponding data; added only if this SSR is an intersection slave.</p> <p><code>isect_slave_credits</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits-type","title":"isect_slave_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits-constraints","title":"isect_slave_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>2</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits-default-value","title":"isect_slave_credits Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops","title":"num_loops","text":"<p>Number of nested hardware loops in address generator.</p> <p><code>num_loops</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops-type","title":"num_loops Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops-constraints","title":"num_loops Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>4</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops-default-value","title":"num_loops Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits","title":"index_credits","text":"<p>Number of credits and buffer depth of the index word FIFO.</p> <p><code>index_credits</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits-type","title":"index_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits-constraints","title":"index_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits-default-value","title":"index_credits Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits","title":"data_credits","text":"<p>Number of credits and buffer depth of the data word FIFO.</p> <p><code>data_credits</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits-type","title":"data_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits-constraints","title":"data_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits-default-value","title":"data_credits Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth","title":"mux_resp_depth","text":"<p>Depth of response buffer in the TCDM multiplexer arbitrating between data and indices.</p> <p><code>mux_resp_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth-type","title":"mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth-constraints","title":"mux_resp_depth Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth-default-value","title":"mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_width","title":"index_width","text":"<p>Internal bitwidth of indices in address generator; default covers full TCDM in a unit-stride 1D loop.</p> <p><code>index_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>can be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_width-type","title":"index_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_width-constraints","title":"index_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#pointer_width","title":"pointer_width","text":"<p>Internal bitwidth of pointers in address generator; default covers full TCDM</p> <p><code>pointer_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>can be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#pointer_width-type","title":"pointer_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#pointer_width-constraints","title":"pointer_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width","title":"shift_width","text":"<p>Internal bitwidth of additional left shift amount for indirect indices.</p> <p><code>shift_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width-type","title":"shift_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width-constraints","title":"shift_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width-default-value","title":"shift_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width","title":"rpt_width","text":"<p>Internal bitwidth of repetition counter for read streams.</p> <p><code>rpt_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width-type","title":"rpt_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width-constraints","title":"rpt_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width-default-value","title":"rpt_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/","title":"SSRs Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs\n</code></pre> <p>List of all SSRs in the respective core.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/#ssrs-type","title":"ssrs Type","text":"<p><code>object[]</code> (SSR Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/#ssrs-constraints","title":"ssrs Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/#ssrs-default-value","title":"ssrs Default Value","text":"<p>The default value is:</p> <pre><code>[\n  {},\n  {},\n  {}\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdiv_sqrt/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/Xdiv_sqrt\n</code></pre> <p>Enable hardware support for floating-point division and square-root. The iterative floating-point unit is known to produce some rounding inaccuracies so it is disabled by default.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdiv_sqrt/#xdiv_sqrt-type","title":"Xdiv_sqrt Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdma-extension/","title":"Xdma Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xdma\n</code></pre> <p>Direct memory access (Xdma) custom extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdma-extension/#xdma-type","title":"xdma Type","text":"<p><code>boolean</code> (Xdma Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16-16-bit-float-extension/","title":"Xf16 16-bit Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf16\n</code></pre> <p>Enable Smallfloat Xf16 extension (IEEE 16-bit float).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16-16-bit-float-extension/#xf16-type","title":"xf16 Type","text":"<p><code>boolean</code> (Xf16 16-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16alt-16-bit-brain-float-extension/","title":"Xf16alt 16-bit Brain-Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf16alt\n</code></pre> <p>Enable Smallfloat Xf16alt extension, also known as brain-float.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16alt-16-bit-brain-float-extension/#xf16alt-type","title":"xf16alt Type","text":"<p><code>boolean</code> (Xf16alt 16-bit Brain-Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension-1/","title":"Xf8 8-bit Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf8alt\n</code></pre> <p>Enable Smallfloat Xf8alt extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension-1/#xf8alt-type","title":"xf8alt Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension/","title":"Xf8 8-bit Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf8\n</code></pre> <p>Enable Smallfloat Xf8 extension (IEEE 8-bit float).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension/#xf8-type","title":"xf8 Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfdotp-extension/","title":"Xfdotp Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xfdotp\n</code></pre> <p>Enable DOTP extensions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfdotp-extension/#xfdotp-type","title":"xfdotp Type","text":"<p><code>boolean</code> (Xfdotp Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfvec-extension/","title":"Xfvec Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xfvec\n</code></pre> <p>Enable Smallfloat vector extension (SIMD).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfvec-extension/#xfvec-type","title":"xfvec Type","text":"<p><code>boolean</code> (Xfvec Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/","title":"Core Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items\n</code></pre> <p>Description of a single core.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#items-type","title":"items Type","text":"<p><code>object</code> (Core Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#core-description-properties","title":"Core Description Properties","text":"Property Type Required Nullable Defined by isa <code>string</code> Optional cannot be null Snitch Cluster Schema Xdiv_sqrt <code>boolean</code> Optional cannot be null Snitch Cluster Schema xssr <code>boolean</code> Optional cannot be null Snitch Cluster Schema xfrep <code>boolean</code> Optional cannot be null Snitch Cluster Schema xdma <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf8 <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf8alt <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf16 <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf16alt <code>boolean</code> Optional cannot be null Snitch Cluster Schema xfdotp <code>boolean</code> Optional cannot be null Snitch Cluster Schema xfvec <code>boolean</code> Optional cannot be null Snitch Cluster Schema num_int_outstanding_loads <code>number</code> Optional cannot be null Snitch Cluster Schema num_int_outstanding_mem <code>number</code> Optional cannot be null Snitch Cluster Schema num_fp_outstanding_loads <code>number</code> Optional cannot be null Snitch Cluster Schema num_fp_outstanding_mem <code>number</code> Optional cannot be null Snitch Cluster Schema num_sequencer_instructions <code>number</code> Optional cannot be null Snitch Cluster Schema num_itlb_entries <code>number</code> Optional cannot be null Snitch Cluster Schema num_dtlb_entries <code>number</code> Optional cannot be null Snitch Cluster Schema ssr_intersection <code>boolean</code> Optional cannot be null Snitch Cluster Schema ssr_intersection_triple <code>array</code> Optional cannot be null Snitch Cluster Schema ssr_mux_resp_depth <code>number</code> Optional cannot be null Snitch Cluster Schema ssrs <code>array</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa","title":"isa","text":"<p>ISA string as defined by the RISC-V standard. Only contain the standardized ISA extensions.</p> <p><code>isa</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code> (ISA String containing RISC-V standard extensions.)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa-type","title":"isa Type","text":"<p><code>string</code> (ISA String containing RISC-V standard extensions.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa-default-value","title":"isa Default Value","text":"<p>The default value is:</p> <pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa-examples","title":"isa Examples","text":"<pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdiv_sqrt","title":"Xdiv_sqrt","text":"<p>Enable hardware support for floating-point division and square-root. The iterative floating-point unit is known to produce some rounding inaccuracies so it is disabled by default.</p> <p><code>Xdiv_sqrt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdiv_sqrt-type","title":"Xdiv_sqrt Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xssr","title":"xssr","text":"<p>Stream Semantic Registers (Xssr) custom extension.</p> <p><code>xssr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Enable Xssr Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xssr-type","title":"xssr Type","text":"<p><code>boolean</code> (Enable Xssr Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xssr-default-value","title":"xssr Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfrep","title":"xfrep","text":"<p>Floating-point repetition buffer (Xfrep) custom extension.</p> <p><code>xfrep</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Enable Xfrep Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfrep-type","title":"xfrep Type","text":"<p><code>boolean</code> (Enable Xfrep Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfrep-default-value","title":"xfrep Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdma","title":"xdma","text":"<p>Direct memory access (Xdma) custom extension.</p> <p><code>xdma</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xdma Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdma-type","title":"xdma Type","text":"<p><code>boolean</code> (Xdma Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8","title":"xf8","text":"<p>Enable Smallfloat Xf8 extension (IEEE 8-bit float).</p> <p><code>xf8</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf8 8-bit Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8-type","title":"xf8 Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8alt","title":"xf8alt","text":"<p>Enable Smallfloat Xf8alt extension.</p> <p><code>xf8alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf8 8-bit Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8alt-type","title":"xf8alt Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16","title":"xf16","text":"<p>Enable Smallfloat Xf16 extension (IEEE 16-bit float).</p> <p><code>xf16</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf16 16-bit Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16-type","title":"xf16 Type","text":"<p><code>boolean</code> (Xf16 16-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16alt","title":"xf16alt","text":"<p>Enable Smallfloat Xf16alt extension, also known as brain-float.</p> <p><code>xf16alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf16alt 16-bit Brain-Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16alt-type","title":"xf16alt Type","text":"<p><code>boolean</code> (Xf16alt 16-bit Brain-Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfdotp","title":"xfdotp","text":"<p>Enable DOTP extensions.</p> <p><code>xfdotp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xfdotp Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfdotp-type","title":"xfdotp Type","text":"<p><code>boolean</code> (Xfdotp Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfvec","title":"xfvec","text":"<p>Enable Smallfloat vector extension (SIMD).</p> <p><code>xfvec</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xfvec Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfvec-type","title":"xfvec Type","text":"<p><code>boolean</code> (Xfvec Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_loads","title":"num_int_outstanding_loads","text":"<p>Number of outstanding integer loads. Determines the buffer size in the core's load/store unit.</p> <p><code>num_int_outstanding_loads</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_loads-type","title":"num_int_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_loads-default-value","title":"num_int_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_mem","title":"num_int_outstanding_mem","text":"<p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> <p><code>num_int_outstanding_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_mem-type","title":"num_int_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_mem-default-value","title":"num_int_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_loads","title":"num_fp_outstanding_loads","text":"<p>Number of outstanding floating-point loads. Determines the buffer size in the FPU's load/store unit.</p> <p><code>num_fp_outstanding_loads</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_loads-type","title":"num_fp_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_loads-default-value","title":"num_fp_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_mem","title":"num_fp_outstanding_mem","text":"<p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> <p><code>num_fp_outstanding_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_mem-type","title":"num_fp_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_mem-default-value","title":"num_fp_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_sequencer_instructions","title":"num_sequencer_instructions","text":"<p>Amount of floating-point instruction the floating-point sequence buffer can hold.</p> <p><code>num_sequencer_instructions</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_sequencer_instructions-type","title":"num_sequencer_instructions Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_sequencer_instructions-default-value","title":"num_sequencer_instructions Default Value","text":"<p>The default value is:</p> <pre><code>16\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_itlb_entries","title":"num_itlb_entries","text":"<p>Number of ITLB entries. Determines the core's size.</p> <p><code>num_itlb_entries</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_itlb_entries-type","title":"num_itlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_itlb_entries-default-value","title":"num_itlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_dtlb_entries","title":"num_dtlb_entries","text":"<p>Number of DTLB entries. Determines the core's size.</p> <p><code>num_dtlb_entries</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_dtlb_entries-type","title":"num_dtlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_dtlb_entries-default-value","title":"num_dtlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection","title":"ssr_intersection","text":"<p>Enable intersection between 3 SSRs for sparse-sparse processing.</p> <p><code>ssr_intersection</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (SSR Intersection Feature)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection-type","title":"ssr_intersection Type","text":"<p><code>boolean</code> (SSR Intersection Feature)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple","title":"ssr_intersection_triple","text":"<p>Indices of the SSRs forming an SSR intersection triple.</p> <p><code>ssr_intersection_triple</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number[]</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple-type","title":"ssr_intersection_triple Type","text":"<p><code>number[]</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple-constraints","title":"ssr_intersection_triple Constraints","text":"<p>maximum number of items: the maximum number of items for this array is: <code>3</code></p> <p>minimum number of items: the minimum number of items for this array is: <code>3</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple-default-value","title":"ssr_intersection_triple Default Value","text":"<p>The default value is:</p> <pre><code>[\n  0,\n  1,\n  2\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_mux_resp_depth","title":"ssr_mux_resp_depth","text":"<p>Depth of response buffer in the TCDM multiplexer arbitrating between core and SSR 0.</p> <p><code>ssr_mux_resp_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_mux_resp_depth-type","title":"ssr_mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_mux_resp_depth-default-value","title":"ssr_mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs","title":"ssrs","text":"<p>List of all SSRs in the respective core.</p> <p><code>ssrs</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object[]</code> (SSR Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs-type","title":"ssrs Type","text":"<p><code>object[]</code> (SSR Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs-constraints","title":"ssrs Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs-default-value","title":"ssrs Default Value","text":"<p>The default value is:</p> <pre><code>[\n  {},\n  {},\n  {}\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores/","title":"Cores Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores\n</code></pre> <p>List of all cores in the respective hive.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores/#cores-type","title":"cores Type","text":"<p><code>object[]</code> (Core Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores/#cores-constraints","title":"cores Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-default/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-cacheline/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/properties/cacheline\n</code></pre> <p>Cacheline/Word size in bits.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-cacheline/#cacheline-type","title":"cacheline Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-sets/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/properties/sets\n</code></pre> <p>Number of ways.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-sets/#sets-type","title":"sets Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/properties/size\n</code></pre> <p>Total instruction cache size in KiByte.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-size/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/","title":"Hive's instruction cache configuration. Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache\n</code></pre> <p>Detailed configuration of the current Hive's instruction cache.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#icache-type","title":"icache Type","text":"<p><code>object</code> (Hive's instruction cache configuration.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#icache-default-value","title":"icache Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"size\": 8,\n  \"sets\": 2,\n  \"cacheline\": 128\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#hives-instruction-cache-configuration-properties","title":"Hive's instruction cache configuration. Properties","text":"Property Type Required Nullable Defined by size <code>number</code> Optional cannot be null Snitch Cluster Schema sets <code>number</code> Optional cannot be null Snitch Cluster Schema cacheline <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#size","title":"size","text":"<p>Total instruction cache size in KiByte.</p> <p><code>size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#sets","title":"sets","text":"<p>Number of ways.</p> <p><code>sets</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#sets-type","title":"sets Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#cacheline","title":"cacheline","text":"<p>Cacheline/Word size in bits.</p> <p><code>cacheline</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#cacheline-type","title":"cacheline Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/","title":"Hive Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items\n</code></pre> <p>Configuration of a Hive</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#items-type","title":"items Type","text":"<p><code>object</code> (Hive Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#hive-description-properties","title":"Hive Description Properties","text":"Property Type Required Nullable Defined by icache <code>object</code> Optional cannot be null Snitch Cluster Schema cores <code>array</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#icache","title":"icache","text":"<p>Detailed configuration of the current Hive's instruction cache.</p> <p><code>icache</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Hive's instruction cache configuration.)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#icache-type","title":"icache Type","text":"<p><code>object</code> (Hive's instruction cache configuration.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#icache-default-value","title":"icache Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"size\": 8,\n  \"sets\": 2,\n  \"cacheline\": 128\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#cores","title":"cores","text":"<p>List of all cores in the respective hive.</p> <p><code>cores</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object[]</code> (Core Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#cores-type","title":"cores Type","text":"<p><code>object[]</code> (Core Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#cores-constraints","title":"cores Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives/","title":"Hives Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives\n</code></pre> <p>Cores in a hive share an instruction cache and other shared infrastructure such as the PTW or the multiply/divide unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives/#hives-type","title":"hives Type","text":"<p><code>object[]</code> (Hive Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives/#hives-constraints","title":"hives Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-id_width_in/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/id_width_in\n</code></pre> <p>Id width of the narrower AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-id_width_in/#id_width_in-type","title":"id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-id_width_in/#id_width_in-default-value","title":"id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-mode/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/mode\n</code></pre> <p>Supported mode by the processor, can be msu.</p> <p>Currently ignored.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-mode/#mode-type","title":"mode Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-name/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/name\n</code></pre> <p>Optional name for the generated wrapper.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-name/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-name/#name-default-value","title":"name Default Value","text":"<p>The default value is:</p> <pre><code>\"snitch_cluster\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-narrow_trans/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/narrow_trans\n</code></pre> <p>Outstanding transactions on the narrow AXI network</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-narrow_trans/#narrow_trans-type","title":"narrow_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-narrow_trans/#narrow_trans-default-value","title":"narrow_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_expose/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_expose\n</code></pre> <p>Whether to expose memory cut configuration inputs for implementation</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_expose/#sram_cfg_expose-type","title":"sram_cfg_expose Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-additionalproperties/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields/additionalProperties\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-additionalproperties/#additionalproperties-type","title":"additionalProperties Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-additionalproperties/#additionalproperties-constraints","title":"additionalProperties Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-default/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-propertynames/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields/propertyNames\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-propertynames/#propertynames-type","title":"propertyNames Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-propertynames/#propertynames-constraints","title":"propertyNames Constraints","text":"<p>pattern: the string must match the following regular expression: </p> <pre><code>^[A-Za-z_][A-Za-z0-9_]*$\n</code></pre> <p>try pattern</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/","title":"Untitled object in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields\n</code></pre> <p>The names and widths of memory cut configuration inputs needed for implementation</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#sram_cfg_fields-type","title":"sram_cfg_fields Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#sram_cfg_fields-constraints","title":"sram_cfg_fields Constraints","text":"<p>minimum number of properties: the minimum number of properties for this object is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#sram_cfg_fields-default-value","title":"sram_cfg_fields Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"reserved\": 1\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by Additional Properties <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#additional-properties","title":"Additional Properties","text":"<p>Additional properties are allowed, as long as they follow this schema:</p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#additionalproperties-type","title":"additionalProperties Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#additionalproperties-constraints","title":"additionalProperties Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-default/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-banks/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm/properties/banks\n</code></pre> <p>Number of banks.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-banks/#banks-type","title":"banks Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-banks/#banks-examples","title":"banks Examples","text":"<pre><code>16\n</code></pre> <pre><code>32\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm/properties/size\n</code></pre> <p>Size of TCDM in KiByte. Divided in <code>n</code> banks. The total size must be divisible by the number of banks.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-size/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-size/#size-examples","title":"size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/","title":"Untitled object in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm\n</code></pre> <p>Configuration of the Tightly Coupled Data Memory of this cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#tcdm-type","title":"tcdm Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#tcdm-default-value","title":"tcdm Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"size\": 128,\n  \"banks\": 32\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by size <code>number</code> Optional cannot be null Snitch Cluster Schema banks <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#size","title":"size","text":"<p>Size of TCDM in KiByte. Divided in <code>n</code> banks. The total size must be divisible by the number of banks.</p> <p><code>size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#size-examples","title":"size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#banks","title":"banks","text":"<p>Number of banks.</p> <p><code>banks</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#banks-type","title":"banks Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#banks-examples","title":"banks Examples","text":"<pre><code>16\n</code></pre> <pre><code>32\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/fpu_pipe_config\n</code></pre> <p>Pipeline configuration (i.e., position of the registers) of the FPU.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/#fpu_pipe_config-type","title":"fpu_pipe_config Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/#fpu_pipe_config-constraints","title":"fpu_pipe_config Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"BEFORE\"</code> <code>\"AFTER\"</code> <code>\"INSIDE\"</code> <code>\"DISTRIBUTED\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/#fpu_pipe_config-default-value","title":"fpu_pipe_config Default Value","text":"<p>The default value is:</p> <pre><code>\"BEFORE\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-iso_crossings/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/iso_crossings\n</code></pre> <p>Enable isochronous crossings, this clocks the integer core at half the speed of the rest of the system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-iso_crossings/#iso_crossings-type","title":"iso_crossings Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp16\n</code></pre> <p>Latency setting (number of pipeline stages) for FP16.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16/#lat_comp_fp16-type","title":"lat_comp_fp16 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16/#lat_comp_fp16-default-value","title":"lat_comp_fp16 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16_alt/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp16_alt\n</code></pre> <p>Latency setting (number of pipeline stages) for FP16alt (brainfloat).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16_alt/#lat_comp_fp16_alt-type","title":"lat_comp_fp16_alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16_alt/#lat_comp_fp16_alt-default-value","title":"lat_comp_fp16_alt Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp32/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp32\n</code></pre> <p>Latency setting (number of pipeline stages) for FP32.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp32/#lat_comp_fp32-type","title":"lat_comp_fp32 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp32/#lat_comp_fp32-default-value","title":"lat_comp_fp32 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp64/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp64\n</code></pre> <p>Latency setting (number of pipeline stages) for FP64.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp64/#lat_comp_fp64-type","title":"lat_comp_fp64 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp64/#lat_comp_fp64-default-value","title":"lat_comp_fp64 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp8\n</code></pre> <p>Latency setting (number of pipeline stages) for FP8.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8/#lat_comp_fp8-type","title":"lat_comp_fp8 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8/#lat_comp_fp8-default-value","title":"lat_comp_fp8 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8alt/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp8alt\n</code></pre> <p>Latency setting (number of pipeline stages) for FP8alt.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8alt/#lat_comp_fp8alt-type","title":"lat_comp_fp8alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8alt/#lat_comp_fp8alt-default-value","title":"lat_comp_fp8alt Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_conv/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_conv\n</code></pre> <p>Latency setting (number of pipeline stages) for floating-point conversion instructions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_conv/#lat_conv-type","title":"lat_conv Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_conv/#lat_conv-default-value","title":"lat_conv Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_noncomp/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_noncomp\n</code></pre> <p>Latency setting (number of pipeline stages) for floating-point non-computational instructions (except conversions), i.e., <code>classify</code>, etc.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_noncomp/#lat_noncomp-type","title":"lat_noncomp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_noncomp/#lat_noncomp-default-value","title":"lat_noncomp Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_sdotp/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_sdotp\n</code></pre> <p>Latency setting (number of pipeline stages) for floating-point expanding dot product with accumulation.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_sdotp/#lat_sdotp-type","title":"lat_sdotp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_sdotp/#lat_sdotp-default-value","title":"lat_sdotp Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/narrow_xbar_latency\n</code></pre> <p>Latency mode of the cluster crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/#narrow_xbar_latency-type","title":"narrow_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/#narrow_xbar_latency-constraints","title":"narrow_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/#narrow_xbar_latency-default-value","title":"narrow_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_req/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_core_req\n</code></pre> <p>Insert Pipeline registers into data memory request path.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_req/#register_core_req-type","title":"register_core_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_rsp/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_core_rsp\n</code></pre> <p>Insert Pipeline registers into data memory response path.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_rsp/#register_core_rsp-type","title":"register_core_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_narrow/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_ext_narrow\n</code></pre> <p>Decouple narrow external AXI plug.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_narrow/#register_ext_narrow-type","title":"register_ext_narrow Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_wide/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_ext_wide\n</code></pre> <p>Decouple wide external AXI plug.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_wide/#register_ext_wide-type","title":"register_ext_wide Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_in/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_fpu_in\n</code></pre> <p>Insert Pipeline registers immediately before FPU datapath</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_in/#register_fpu_in-type","title":"register_fpu_in Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_out/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_fpu_out\n</code></pre> <p>Insert Pipeline registers immediately after FPU datapath</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_out/#register_fpu_out-type","title":"register_fpu_out Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_req/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_fpu_req\n</code></pre> <p>Insert Pipeline register into the FPU request data path</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_req/#register_fpu_req-type","title":"register_fpu_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_req/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_offload_req\n</code></pre> <p>Insert Pipeline registers into off-loading path (request).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_req/#register_offload_req-type","title":"register_offload_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_rsp/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_offload_rsp\n</code></pre> <p>Insert Pipeline registers into off-loading path (response).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_rsp/#register_offload_rsp-type","title":"register_offload_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_sequencer/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_sequencer\n</code></pre> <p>Insert Pipeline registers after sequencer.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_sequencer/#register_sequencer-type","title":"register_sequencer Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_tcdm_cuts/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_tcdm_cuts\n</code></pre> <p>Insert Pipeline registers after each memory cut.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_tcdm_cuts/#register_tcdm_cuts-type","title":"register_tcdm_cuts Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/wide_xbar_latency\n</code></pre> <p>Latency mode of the DMA crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/#wide_xbar_latency-type","title":"wide_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/#wide_xbar_latency-constraints","title":"wide_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/#wide_xbar_latency-default-value","title":"wide_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/","title":"Timing and Latency Tuning Parameter Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#timing-type","title":"timing Type","text":"<p><code>object</code> (Timing and Latency Tuning Parameter)</p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#timing-and-latency-tuning-parameter-properties","title":"Timing and Latency Tuning Parameter Properties","text":"Property Type Required Nullable Defined by iso_crossings <code>boolean</code> Optional cannot be null Snitch Cluster Schema narrow_xbar_latency <code>string</code> Optional cannot be null Snitch Cluster Schema wide_xbar_latency <code>string</code> Optional cannot be null Snitch Cluster Schema register_offload_req <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_offload_rsp <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_core_req <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_core_rsp <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_fpu_req <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_fpu_in <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_fpu_out <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_tcdm_cuts <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_ext_wide <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_ext_narrow <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_sequencer <code>boolean</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp32 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp64 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp16 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp16_alt <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp8 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp8alt <code>number</code> Optional cannot be null Snitch Cluster Schema lat_noncomp <code>number</code> Optional cannot be null Snitch Cluster Schema lat_conv <code>number</code> Optional cannot be null Snitch Cluster Schema lat_sdotp <code>number</code> Optional cannot be null Snitch Cluster Schema fpu_pipe_config <code>string</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#iso_crossings","title":"iso_crossings","text":"<p>Enable isochronous crossings, this clocks the integer core at half the speed of the rest of the system.</p> <p><code>iso_crossings</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#iso_crossings-type","title":"iso_crossings Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency","title":"narrow_xbar_latency","text":"<p>Latency mode of the cluster crossbar.</p> <p><code>narrow_xbar_latency</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency-type","title":"narrow_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency-constraints","title":"narrow_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency-default-value","title":"narrow_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency","title":"wide_xbar_latency","text":"<p>Latency mode of the DMA crossbar.</p> <p><code>wide_xbar_latency</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency-type","title":"wide_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency-constraints","title":"wide_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency-default-value","title":"wide_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_req","title":"register_offload_req","text":"<p>Insert Pipeline registers into off-loading path (request).</p> <p><code>register_offload_req</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_req-type","title":"register_offload_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_rsp","title":"register_offload_rsp","text":"<p>Insert Pipeline registers into off-loading path (response).</p> <p><code>register_offload_rsp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_rsp-type","title":"register_offload_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_req","title":"register_core_req","text":"<p>Insert Pipeline registers into data memory request path.</p> <p><code>register_core_req</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_req-type","title":"register_core_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_rsp","title":"register_core_rsp","text":"<p>Insert Pipeline registers into data memory response path.</p> <p><code>register_core_rsp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_rsp-type","title":"register_core_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_req","title":"register_fpu_req","text":"<p>Insert Pipeline register into the FPU request data path</p> <p><code>register_fpu_req</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_req-type","title":"register_fpu_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_in","title":"register_fpu_in","text":"<p>Insert Pipeline registers immediately before FPU datapath</p> <p><code>register_fpu_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_in-type","title":"register_fpu_in Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_out","title":"register_fpu_out","text":"<p>Insert Pipeline registers immediately after FPU datapath</p> <p><code>register_fpu_out</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_out-type","title":"register_fpu_out Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_tcdm_cuts","title":"register_tcdm_cuts","text":"<p>Insert Pipeline registers after each memory cut.</p> <p><code>register_tcdm_cuts</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_tcdm_cuts-type","title":"register_tcdm_cuts Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_wide","title":"register_ext_wide","text":"<p>Decouple wide external AXI plug.</p> <p><code>register_ext_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_wide-type","title":"register_ext_wide Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_narrow","title":"register_ext_narrow","text":"<p>Decouple narrow external AXI plug.</p> <p><code>register_ext_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_narrow-type","title":"register_ext_narrow Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_sequencer","title":"register_sequencer","text":"<p>Insert Pipeline registers after sequencer.</p> <p><code>register_sequencer</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_sequencer-type","title":"register_sequencer Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp32","title":"lat_comp_fp32","text":"<p>Latency setting (number of pipeline stages) for FP32.</p> <p><code>lat_comp_fp32</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp32-type","title":"lat_comp_fp32 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp32-default-value","title":"lat_comp_fp32 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp64","title":"lat_comp_fp64","text":"<p>Latency setting (number of pipeline stages) for FP64.</p> <p><code>lat_comp_fp64</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp64-type","title":"lat_comp_fp64 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp64-default-value","title":"lat_comp_fp64 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16","title":"lat_comp_fp16","text":"<p>Latency setting (number of pipeline stages) for FP16.</p> <p><code>lat_comp_fp16</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16-type","title":"lat_comp_fp16 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16-default-value","title":"lat_comp_fp16 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16_alt","title":"lat_comp_fp16_alt","text":"<p>Latency setting (number of pipeline stages) for FP16alt (brainfloat).</p> <p><code>lat_comp_fp16_alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16_alt-type","title":"lat_comp_fp16_alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16_alt-default-value","title":"lat_comp_fp16_alt Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8","title":"lat_comp_fp8","text":"<p>Latency setting (number of pipeline stages) for FP8.</p> <p><code>lat_comp_fp8</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8-type","title":"lat_comp_fp8 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8-default-value","title":"lat_comp_fp8 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8alt","title":"lat_comp_fp8alt","text":"<p>Latency setting (number of pipeline stages) for FP8alt.</p> <p><code>lat_comp_fp8alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8alt-type","title":"lat_comp_fp8alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8alt-default-value","title":"lat_comp_fp8alt Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_noncomp","title":"lat_noncomp","text":"<p>Latency setting (number of pipeline stages) for floating-point non-computational instructions (except conversions), i.e., <code>classify</code>, etc.</p> <p><code>lat_noncomp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_noncomp-type","title":"lat_noncomp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_noncomp-default-value","title":"lat_noncomp Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_conv","title":"lat_conv","text":"<p>Latency setting (number of pipeline stages) for floating-point conversion instructions.</p> <p><code>lat_conv</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_conv-type","title":"lat_conv Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_conv-default-value","title":"lat_conv Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_sdotp","title":"lat_sdotp","text":"<p>Latency setting (number of pipeline stages) for floating-point expanding dot product with accumulation.</p> <p><code>lat_sdotp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_sdotp-type","title":"lat_sdotp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_sdotp-default-value","title":"lat_sdotp Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config","title":"fpu_pipe_config","text":"<p>Pipeline configuration (i.e., position of the registers) of the FPU.</p> <p><code>fpu_pipe_config</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config-type","title":"fpu_pipe_config Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config-constraints","title":"fpu_pipe_config Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"BEFORE\"</code> <code>\"AFTER\"</code> <code>\"INSIDE\"</code> <code>\"DISTRIBUTED\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config-default-value","title":"fpu_pipe_config Default Value","text":"<p>The default value is:</p> <pre><code>\"BEFORE\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-user_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/user_width\n</code></pre> <p>User width of the narrower AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-user_width/#user_width-type","title":"user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-user_width/#user_width-default-value","title":"user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-vm_support/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/vm_support\n</code></pre> <p>Whether to provide virtual memory support (Sv32).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-vm_support/#vm_support-type","title":"vm_support Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-vm_support/#vm_support-default-value","title":"vm_support Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-wide_trans/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/wide_trans\n</code></pre> <p>Outstanding transactions on the wide AXI network</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-wide_trans/#wide_trans-type","title":"wide_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-wide_trans/#wide_trans-default-value","title":"wide_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-zero_mem_size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/zero_mem_size\n</code></pre> <p>Address region size reserved for the Zero-Memory in KiByte.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-zero_mem_size/#zero_mem_size-type","title":"zero_mem_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-zero_mem_size/#zero_mem_size-examples","title":"zero_mem_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/","title":"Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json\n</code></pre> <p>Base description of a Snitch cluster and its internal structure and configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json"},{"location":"schema-doc/snitch_cluster/#snitch-cluster-schema-type","title":"Snitch Cluster Schema Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/snitch_cluster/#snitch-cluster-schema-properties","title":"Snitch Cluster Schema Properties","text":"Property Type Required Nullable Defined by name <code>string</code> Optional cannot be null Snitch Cluster Schema boot_addr <code>number</code> Optional cannot be null Snitch Cluster Schema cluster_base_addr <code>number</code> Optional cannot be null Snitch Cluster Schema tcdm <code>object</code> Optional cannot be null Snitch Cluster Schema cluster_periph_size <code>number</code> Optional cannot be null Snitch Cluster Schema zero_mem_size <code>number</code> Optional cannot be null Snitch Cluster Schema addr_width <code>number</code> Required cannot be null Snitch Cluster Schema data_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_data_width <code>number</code> Optional cannot be null Snitch Cluster Schema narrow_trans <code>number</code> Optional cannot be null Snitch Cluster Schema wide_trans <code>number</code> Optional cannot be null Snitch Cluster Schema id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema dma_id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema user_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_user_width <code>number</code> Optional cannot be null Snitch Cluster Schema hart_base_id <code>number</code> Optional cannot be null Snitch Cluster Schema mode <code>string</code> Optional cannot be null Snitch Cluster Schema vm_support <code>boolean</code> Optional cannot be null Snitch Cluster Schema dma_axi_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema dma_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema enable_debug <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_expose <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_fields <code>object</code> Optional cannot be null Snitch Cluster Schema timing <code>object</code> Optional cannot be null Snitch Cluster Schema hives <code>array</code> Required cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster/#name","title":"name","text":"<p>Optional name for the generated wrapper.</p> <p><code>name</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster/#name-default-value","title":"name Default Value","text":"<p>The default value is:</p> <pre><code>\"snitch_cluster\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#boot_addr","title":"boot_addr","text":"<p>Address from which all harts of the cluster start to boot. The default setting is <code>0x8000_0000</code>.</p> <p><code>boot_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#boot_addr-type","title":"boot_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#boot_addr-default-value","title":"boot_addr Default Value","text":"<p>The default value is:</p> <pre><code>2147483648\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#cluster_base_addr","title":"cluster_base_addr","text":"<p>Base address of this cluster.</p> <p><code>cluster_base_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#cluster_base_addr-type","title":"cluster_base_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#tcdm","title":"tcdm","text":"<p>Configuration of the Tightly Coupled Data Memory of this cluster.</p> <p><code>tcdm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#tcdm-type","title":"tcdm Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster/#tcdm-default-value","title":"tcdm Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"size\": 128,\n  \"banks\": 32\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#cluster_periph_size","title":"cluster_periph_size","text":"<p>Address region size reserved for cluster peripherals in KiByte.</p> <p><code>cluster_periph_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#cluster_periph_size-type","title":"cluster_periph_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#cluster_periph_size-examples","title":"cluster_periph_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#zero_mem_size","title":"zero_mem_size","text":"<p>Address region size reserved for the Zero-Memory in KiByte.</p> <p><code>zero_mem_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#zero_mem_size-type","title":"zero_mem_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#zero_mem_size-examples","title":"zero_mem_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#addr_width","title":"addr_width","text":"<p>Length of the address, should be greater than 30. If the address is larger than 34 the data bus needs to be 64 bits in size.</p> <p><code>addr_width</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#addr_width-type","title":"addr_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#addr_width-default-value","title":"addr_width Default Value","text":"<p>The default value is:</p> <pre><code>48\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#data_width","title":"data_width","text":"<p>Data bus size of the integer core (everything except the DMA), must be 32 or 64. A double precision FPU requires 64 bit data length.</p> <p><code>data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#data_width-type","title":"data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#data_width-default-value","title":"data_width Default Value","text":"<p>The default value is:</p> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_data_width","title":"dma_data_width","text":"<p>Data bus size of DMA. Usually this is larger than the integer core as the DMA is used to efficiently transfer bulk of data.</p> <p><code>dma_data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_data_width-type","title":"dma_data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_data_width-default-value","title":"dma_data_width Default Value","text":"<p>The default value is:</p> <pre><code>512\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#narrow_trans","title":"narrow_trans","text":"<p>Outstanding transactions on the narrow AXI network</p> <p><code>narrow_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#narrow_trans-type","title":"narrow_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#narrow_trans-default-value","title":"narrow_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#wide_trans","title":"wide_trans","text":"<p>Outstanding transactions on the wide AXI network</p> <p><code>wide_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#wide_trans-type","title":"wide_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#wide_trans-default-value","title":"wide_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#id_width_in","title":"id_width_in","text":"<p>Id width of the narrower AXI plug into the cluster.</p> <p><code>id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#id_width_in-type","title":"id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#id_width_in-default-value","title":"id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_id_width_in","title":"dma_id_width_in","text":"<p>Id width of the wide AXI plug into the cluster.</p> <p><code>dma_id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_id_width_in-type","title":"dma_id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_id_width_in-default-value","title":"dma_id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#user_width","title":"user_width","text":"<p>User width of the narrower AXI plug into the cluster.</p> <p><code>user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#user_width-type","title":"user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#user_width-default-value","title":"user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_user_width","title":"dma_user_width","text":"<p>User width of the wide AXI plug into the cluster.</p> <p><code>dma_user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_user_width-type","title":"dma_user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_user_width-default-value","title":"dma_user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#hart_base_id","title":"hart_base_id","text":"<p>Base hart id of the cluster. All cores get the respective cluster id plus their cluster position as the final <code>hart_id</code>.</p> <p><code>hart_base_id</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#hart_base_id-type","title":"hart_base_id Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#mode","title":"mode","text":"<p>Supported mode by the processor, can be msu.</p> <p>Currently ignored.</p> <p><code>mode</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#mode-type","title":"mode Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster/#vm_support","title":"vm_support","text":"<p>Whether to provide virtual memory support (Sv32).</p> <p><code>vm_support</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#vm_support-type","title":"vm_support Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster/#vm_support-default-value","title":"vm_support Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_axi_req_fifo_depth","title":"dma_axi_req_fifo_depth","text":"<p>Number of AXI FIFO entries of the DMA engine.</p> <p><code>dma_axi_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_axi_req_fifo_depth-type","title":"dma_axi_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_axi_req_fifo_depth-default-value","title":"dma_axi_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_req_fifo_depth","title":"dma_req_fifo_depth","text":"<p>Number of request entries the DMA can keep</p> <p><code>dma_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_req_fifo_depth-type","title":"dma_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_req_fifo_depth-default-value","title":"dma_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#enable_debug","title":"enable_debug","text":"<p>Whether to provide a debug request input and external debug features</p> <p><code>enable_debug</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#enable_debug-type","title":"enable_debug Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster/#enable_debug-default-value","title":"enable_debug Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_expose","title":"sram_cfg_expose","text":"<p>Whether to expose memory cut configuration inputs for implementation</p> <p><code>sram_cfg_expose</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_expose-type","title":"sram_cfg_expose Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields","title":"sram_cfg_fields","text":"<p>The names and widths of memory cut configuration inputs needed for implementation</p> <p><code>sram_cfg_fields</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields-type","title":"sram_cfg_fields Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields-constraints","title":"sram_cfg_fields Constraints","text":"<p>minimum number of properties: the minimum number of properties for this object is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields-default-value","title":"sram_cfg_fields Default Value","text":"<p>The default value is:</p> <pre><code>{\n  \"reserved\": 1\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#timing","title":"timing","text":"<p><code>timing</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Timing and Latency Tuning Parameter)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#timing-type","title":"timing Type","text":"<p><code>object</code> (Timing and Latency Tuning Parameter)</p>"},{"location":"schema-doc/snitch_cluster/#hives","title":"hives","text":"<p>Cores in a hive share an instruction cache and other shared infrastructure such as the PTW or the multiply/divide unit.</p> <p><code>hives</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object[]</code> (Hive Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#hives-type","title":"hives Type","text":"<p><code>object[]</code> (Hive Description)</p>"},{"location":"schema-doc/snitch_cluster/#hives-constraints","title":"hives Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-address/","title":"Untitled number in Snitch Cluster TB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json#/properties/dram/properties/address\n</code></pre> <p>Start address of DRAM.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster_tb.schema.json*"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-length/","title":"Untitled number in Snitch Cluster TB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json#/properties/dram/properties/length\n</code></pre> <p>Total size of DRAM in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster_tb.schema.json*"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/","title":"DRAM Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json#/properties/dram\n</code></pre> <p>Main, off-chip DRAM.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster_tb.schema.json*"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#dram-type","title":"dram Type","text":"<p><code>object</code> (DRAM)</p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#dram-properties","title":"DRAM Properties","text":"Property Type Required Nullable Defined by address <code>number</code> Required cannot be null Snitch Cluster TB Schema length <code>number</code> Required cannot be null Snitch Cluster TB Schema"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#address","title":"address","text":"<p>Start address of DRAM.</p> <p><code>address</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#length","title":"length","text":"<p>Total size of DRAM in bytes.</p> <p><code>length</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb/","title":"Snitch Cluster TB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json\n</code></pre> <p>Description for a very simple single-cluster testbench. That is the most minimal system available. Most of the hardware is emulated by the testbench.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster_tb.schema.json"},{"location":"schema-doc/snitch_cluster_tb/#snitch-cluster-tb-schema-type","title":"Snitch Cluster TB Schema Type","text":"<p><code>object</code> (Snitch Cluster TB Schema)</p>"},{"location":"schema-doc/snitch_cluster_tb/#snitch-cluster-tb-schema-properties","title":"Snitch Cluster TB Schema Properties","text":"Property Type Required Nullable Defined by cluster <code>object</code> Required cannot be null Snitch Cluster TB Schema dram <code>object</code> Required cannot be null Snitch Cluster TB Schema"},{"location":"schema-doc/snitch_cluster_tb/#cluster","title":"cluster","text":"<p>Base description of a Snitch cluster and its internal structure and configuration.</p> <p><code>cluster</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object</code> (Snitch Cluster Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb/#cluster-type","title":"cluster Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/snitch_cluster_tb/#dram","title":"dram","text":"<p>Main, off-chip DRAM.</p> <p><code>dram</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object</code> (DRAM)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb/#dram-type","title":"dram Type","text":"<p><code>object</code> (DRAM)</p>"},{"location":"ug/benchmarking/","title":"Benchmarking","text":""},{"location":"ug/benchmarking/#choosing-the-right-platform","title":"Choosing the right platform","text":"<p>To start developing and benchmarking applications on Snitch, we advise to start developing on <code>banshee</code> and in a later step benchmark them on the RTL for cycle-accurate results. <code>banshee</code> is a good starting point to functionaly verify your application and to get a first impression of the performance. <code>banshee</code> can generate traces for you which allows to already have a rough estimate of the FPU utilization for instance. However, <code>banshee</code> does not model delays for instructions and memory accesses. Therefore, the cycle-accurate results are only possible with RTL simulations or on the FPGA.</p>"},{"location":"ug/benchmarking/#generating-traces","title":"Generating traces","text":"<p>To generate traces, <code>spike-dasm</code> must be installed and available in the <code>PATH</code>. Using the source from this repository supports disassembly of Snitch-custom instructions. We refer to the Quick Start to install <code>spike-dasm</code>.</p> <p>traces are automatically generated if you run the simulation when running the following target for RTL simulations from the <code>build</code> folder:</p> <pre><code>make run-rtl-my_binary\n</code></pre> <p>respectively for <code>banshee</code>:</p> <pre><code>make run-banshee-my_binary\n</code></pre> <p>Alternatively you can also generate traces for the RTL by running the following target in the <code>hw/system/my_platform</code> folder:</p> <pre><code>make traces\n</code></pre>"},{"location":"ug/benchmarking/#rtl-traces","title":"RTL Traces","text":"<p>The traces will be stored in the <code>logs</code> folder. The traces are generated for each core. The trace for core 0 is stored in <code>trace_hart_00000000.txt</code>. The trace for core 1 is stored in <code>trace_hart_00000001.txt</code> and so on. A trace file contains a summary of few statistics for the specific core that is appended at the end of the trace file. The following example shows such a summary:</p> <pre><code>## Performance metrics\n\nPerformance metrics for section 0 @ (11, 3459):\nsnitch_loads                                    89\nsnitch_stores                                   89\nfpss_loads                                       0\nsnitch_avg_load_latency                    22.9888\nsnitch_occupancy                            0.1334\nsnitch_fseq_rel_offloads                    0.0650\nfseq_yield                                     1.0\nfseq_fpu_yield                                 1.0\nfpss_section_latency                             0\nfpss_avg_fpu_latency                           1.0\nfpss_avg_load_latency                            0\nfpss_occupancy                              0.0093\nfpss_fpu_occupancy                          0.0093\nfpss_fpu_rel_occupancy                         1.0\ncycles                                        3449\ntotal_ipc                                   0.1427\n</code></pre> <p>The trace script also allows to split the execution into multiple sections. The sections are defined by reading from the <code>mcycle</code> CSR register. This register will return the current cycle count, but also serves as a trigger for the trace script, to start a new section. The following example shows how to split the execution into two sections:</p> <pre><code>#include \"sw/vendor/riscv-opcodes/encoding.h\"\nsize_t benchmark_get_cycle() { return read_csr(mcycle); }\n\n// End of section 0, Start of section 1\nbenchmark_get_cycle();\n\n// Execute kernel to be benchmarked\nmy_kernel();\n\n// End of section 1, Start of section 2\nbenchmark_get_cycle();\n</code></pre>"},{"location":"ug/directory_structure/","title":"Directory Structure","text":"<p>The project is organized as a monolithic repository. Both hardware and software are co-located. The top-level ist structured as follows:</p> <ul> <li><code>docs</code>: Documentation of the generator and software.   Contains additional user guides.</li> <li><code>hw</code>: All hardware components.</li> <li><code>sw</code>: Hardware independent software, libraries, runtimes etc.</li> <li><code>util</code>: Utility and helper scripts.</li> </ul>"},{"location":"ug/directory_structure/#hardware","title":"Hardware","text":"<ul> <li><code>ip</code>: Blocks which are instantiated in the design e.g., they are not   stand-alone.<ul> <li><code>src</code>: RTL sources</li> <li><code>test</code>: Test-benches</li> </ul> </li> <li><code>vendor</code>: \"Third-party\" components which are updated using the vendor script.   They are not (primarily) developed as part of this repository.</li> <li><code>system</code>: Specific systems built around Snitch components.<ul> <li><code>snitch-cluster</code>: Single cluster with a minimal environment to run   meaningful applications.</li> <li><code>occamy</code>: Multi-cluster system with an environment to run applications.</li> </ul> </li> </ul>"},{"location":"ug/directory_structure/#software","title":"Software","text":"<ul> <li><code>vendor</code>: Software components which come with their own license requirements   from third parties.</li> </ul>"},{"location":"ug/directory_structure/#vendored-source-directories","title":"Vendored Source Directories","text":"<p>This repo is organized in a monolithic fashion, i.e., all resources are checked in, we do not use git submodules or other ways of obtaining (HW) source files. But not all IPs are developed with this repository. We rely on the <code>vendor</code> tool to copy data from other repositories into the tree. We keep separate patches if changes are necessary. Ideally, patches should be upstreamed to the originating repository once things stabilize.</p>"},{"location":"ug/directory_structure/#creating-patches","title":"Creating Patches","text":"<p>If you need to make changes to one of the IPs in the <code>hw/vendor</code> subdirectory you need to obtain a set of patches which should be applied. CI will check whether there are any changes without patches. Upon obtaining the sources the vendor tool can automatically apply the patches for you.</p> <p>To create patches you first need to commit the changes. Then, in the current directory create a set of patches (it will create a file for each commit) for the commit (range) you are interested:</p> <pre><code>git format-patch --relative -o &lt;path/to/patch/folder&gt; HEAD^1\n</code></pre> <p>In the vendor file specify the path to the patches:</p> <pre><code>patch_dir: \"&lt;path/to/patch/folder&gt;\"\n</code></pre>"},{"location":"ug/directory_structure/#updating-sources","title":"Updating Sources","text":"<p>The vendor tool supports updating the sources. If you are in a clean directory with no changes (you can <code>git stash</code> to achieve this), the vendor tool can automatically commit the updates (<code>--commit</code>). For the <code>common_cells</code> for example:</p> <pre><code>./util/vendor.py hw/vendor/pulp_platform_common_cells.vendor.hjson --update --commit\n</code></pre>"},{"location":"ug/docker/","title":"Docker Container","text":"<p>Docker container based on Ubuntu 18.04 LTS containing various hardware and software development tools for Snitch.</p>"},{"location":"ug/docker/#pre-built-container","title":"Pre-built Container","text":"<p>There is an experimental version of the container available. To download, first login to the GitHub container registry: <pre><code>$ docker login ghcr.io\n</code></pre> You will be asked for a username (your GitHub username). As a password you should use a PAT that at least has package registry read permission.</p> <p>Then you can run:</p> <pre><code>$ docker pull ghcr.io/pulp-platform/snitch\n</code></pre>"},{"location":"ug/docker/#using-the-container","title":"Using the Container","text":"<p>To run container in interactive mode:</p> <pre><code>$ docker run -it -v $REPO_TOP:/repo -w /repo ghcr.io/pulp-platform/snitch\n</code></pre>"},{"location":"ug/docker/#local-build-instructions","title":"Local Build Instructions","text":"<p>In case you do not want to use the pre-built container you can also build the container in local mode:</p> <pre><code>$ cd $REPO_TOP\n$ sudo docker build -t ghcr.io/pulp-platform/snitch -f util/container/Dockerfile .\n</code></pre>"},{"location":"ug/docker/#limitations","title":"Limitations","text":"<p>Some operations require more memory than the default Docker VM might provide by default (2 GB on OS X for example). We recommend at least 16 GB of memory.</p> <p>The memory resources can be adjusted in the Docker daemon's settings.</p> <p>The swap space is limited to 4 GB in OS X default VM image. It doesn't seem as this is enough for using <code>verilator</code>, <code>cc</code> keeps crashing because it runs out of swap space (at least that is what <code>dmesg</code> tells us). Also 8 GB of swap space don't seem to be enough.</p> <pre><code>dd if=/dev/zero of=/var/lib/swap bs=1k count=8388608\nchmod go= /var/lib/swap &amp;&amp; mkswap /var/lib/swap\nswapon -v /var/lib/swap\n</code></pre>"},{"location":"ug/documentation/","title":"Documentation","text":"<p>Documentation of the generator and related infrastructure is hosted under <code>docs</code>. Static <code>html</code> documentation is build from the latest <code>master</code> branch by the CI. We use mkdocs together with the material theme. Before building the documentation, make sure you have the required dependencies installed:</p> <pre><code>pip install -r docs/requirements.txt\n</code></pre> <p>After everything is installed, you can build and serve a local copy by executing (in the root directory):</p> <pre><code>mkdocs serve\n</code></pre> <p>This opens a local webserver listening on http://127.0.0.1:8000/.</p>"},{"location":"ug/documentation/#organization","title":"Organization","text":"<p>The <code>docs</code> folder is organized as follows:</p> <ul> <li><code>rm</code>: Reference manuals, listings and detailed design decisions.</li> <li><code>ug</code>: User guides, more tutorial style texts to get contributors and user   up-to-speed.</li> <li><code>schema</code>: Contains the JSON schema used for data validation and generation.</li> <li><code>schema-doc</code>: Contains auto-generated documentation from the schema in the   <code>schema</code> folder. The documentation is generated using   <code>adobe/jsonschema2md</code>.</li> </ul>"},{"location":"ug/documentation/#re-generate-documentation","title":"Re-generate Documentation","text":"<p>Unfortunately, there isn't a good Python tool that generates schema to markdown documents, hence, we rely on <code>adobe/jsonschema2md</code> which requires <code>node</code> and <code>npm</code>. To re-generate the documentation execute (in the repository root):</p> <pre><code>jsonschema2md -d docs/schema/ -o docs/schema-doc -n\n</code></pre>"},{"location":"ug/getting_started/","title":"Getting Started","text":""},{"location":"ug/getting_started/#quick-start","title":"Quick Start","text":"<p>This will take you through the necessary steps to get a sample program running on a cluster of Snitch cores.</p> <ol> <li>Clone the repository.    <pre><code>git clone https://github.com/pulp-platform/snitch.git\n</code></pre></li> <li>Start the Docker container containing all necessary development tools. If you    do not want (or can not) use Docker please see the    prerequisites sections on how to obtain all required tools.     <pre><code>docker run -it -v `pwd`/snitch:/repo -w /repo ghcr.io/pulp-platform/snitch\n</code></pre></li> <li>To simulate a cluster of Snitch cores go to <code>hw/system/snitch_cluster</code> and build the Verilator model for the Snitch cluster.     <pre><code>cd hw/system/snitch_cluster\nmake bin/snitch_cluster.vlt\n</code></pre></li> <li>Build the software.     <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre></li> <li>Run a sample application on the Verilator model.     <pre><code>./bin/snitch_cluster.vlt sw/build/benchmark/benchmark-matmul-all\n</code></pre></li> <li>Generate the annotated traces and inspect the trace for core 0.     <pre><code>make traces\nless trace_hart_00000000.txt\n</code></pre>     Optionally you can inspect the dumped waveforms (<code>snitch_cluster.vcd</code>).     <code>spike-dasm</code> is required to generate the traces. Using the source from this repository supports disassembly of Snitch-custom instructions:     <pre><code>cd sw/vendor/riscv-isa-sim\nmkdir build; cd build\n../configure; make spike-dasm\n</code></pre></li> <li>Visualize the traces with the <code>util/trace/tracevis.py</code> script.     <pre><code>./util/trace/tracevis.py -o trace.json sw/build/benchmark/benchmark-matmul-all hw/system/snitch_cluster/logs/trace_hart_*.txt\n</code></pre>     The generated JSON file can be visualized with Trace-Viewer, or by loading it into Chrome's <code>about:tracing</code>. You can check out an example trace here.</li> <li>Annotate the traces with the <code>util/trace/annotate.py</code> script.     <pre><code>./util/trace/annotate.py -o annotated.s sw/build/benchmark/benchmark-matmul-all hw/system/snitch_cluster/logs/trace_hart_00001.txt\n</code></pre>     The generated <code>annotated.s</code> interleaves source code with retired instructions.</li> </ol>"},{"location":"ug/getting_started/#prerequisites","title":"Prerequisites","text":"<p>We recommend using the Docker container. If that should not be possible (because of missing privileges for example) you can install the required tools and components yourself.</p> <p>We recommend a reasonable new Linux distribution, for example, Ubuntu 18.04:</p> <ul> <li>Install essential packages:     <pre><code>sudo apt-get install build-essential python3 python3-pip python3-setuptools python3-wheel\n</code></pre></li> <li>Install the Python requirements using:     <pre><code>pip3 install --user -r python-requirements.txt\n</code></pre></li> <li>We are using <code>Bender</code> for file list generation. The easiest way to obtain <code>Bender</code> is through its binary release channel:     <pre><code>curl --proto '=https' --tlsv1.2 https://pulp-platform.github.io/bender/init -sSf | sh\n</code></pre></li> <li>Finally, get a RISC-V toolchain. We recommend obtaining binary releases for your operating system from SiFive's SW site.<ul> <li>Unpack the toolchain to a location of your choice (assuming <code>$RISCV</code> here). For example for Ubuntu you do:   <pre><code>mkdir -p $RISCV &amp;&amp; tar -x -f riscv64-unknown-elf-gcc-8.3.0-2020.04.0-x86_64-linux-ubuntu14.tar.gz --strip-components=1 -C $RISCV\n</code></pre></li> <li>Add the <code>$RISCV/bin</code> folder to your path variable.   <pre><code>export PATH=$RISCV/bin:$PATH\n</code></pre></li> <li>The downloaded toolchain is a multi-lib toolchain, nevertheless our SW scripts currently expect binaries named <code>riscv32-*</code>. You can just alias <code>riscv64-*</code> to <code>riscv32-*</code> using:   <pre><code>cd $RISCV/bin &amp;&amp; for file in riscv64-*; do ln -s $file $(echo \"$file\" | sed 's/^riscv64/riscv32/g'); done\n</code></pre></li> </ul> </li> </ul> <p>An alternative way, if you have Rust installed, is <code>cargo install bender</code>.</p>"},{"location":"ug/getting_started/#tool-requirements","title":"Tool Requirements","text":"<ul> <li><code>bender &gt;= 0.21</code></li> <li><code>verilator &gt;= 4.100</code></li> </ul>"},{"location":"ug/getting_started/#software-development","title":"Software Development","text":"<ul> <li>The <code>banshee</code> simulator is built using Rust. We recommend <code>rustup</code> if you haven't installed Rust already.</li> <li>C/C++ code is formatted using <code>clang-format</code>.</li> </ul>"},{"location":"ug/getting_started/#hardware-development","title":"Hardware Development","text":"<ul> <li>We use <code>verible</code> for style linting. Either build it from source or, if available for your platform,  use one of the pre-built images.</li> <li>We support simulation with Verilator, VCS and Modelsim.</li> </ul>"},{"location":"ug/occamy/","title":"Occamy Manycore System","text":"<p>Based on the Manticore architecture. The system itself is described in System Overview.</p> <p>The Occamy system is located in <code>hw/system/occamy</code>. Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy/#hardware-generation","title":"Hardware Generation","text":"<p>Go to the occamy directory, where most of your efforts will take place:</p> <pre><code>cd hw/system/occamy\n</code></pre> <p>Note: from now on, assume all the path to be relative to <code>hw/system/occamy</code>.</p> <p>Occamy is generated based on the config file <code>src/occamy_cfg.hjson</code>. In addition many peripherals are based on memory-mapped Register-files generated by the <code>Reggen</code> tool. To generate all HW and SW sources, run the following command:</p> <pre><code>make all\n</code></pre> <p>In case you want to run a smaller Occamy configuration with, e.g. only 1 snitch cluster (for faster RTL simulation), you can open <code>./src/occamy_cfg.hjson</code>, and reduce <code>nr_s1_quadrant</code> and <code>nr_clusters</code> (e.g. both to <code>1</code>). To make the changes effective,  you can run again the previously mentioned command:</p> <pre><code>make all\n</code></pre> <p>Then compile the hardware, e.g. for Questasim (see <code>setup-iis.md</code> for the needed environment to run the simulation on the ETH IIS machines):</p> <pre><code># Compile the RTL for Questasim\nmake bin/occamy_top.vsim\n\n# Compile the RTL for VCS\nmake bin/occamy_top.vcs\n</code></pre> <p>This <code>make</code> target compiled the RTL simulation model in <code>./work-vsim</code> and the frontend server (fesvr) C++ sources into <code>./work</code>. It also generated a script <code>./bin/occamy_top.vsim</code> or <code>./bin/occamy_top.vcs</code> (you can read the vsim file, the vcs is a binary) that you can use to start a Questasim or VCS session initialized with the ELF of the app/kernel you want to run. This script relies on the <code>fesvr</code> utilities to connect to the RTL simulation and load your ELF program into the simulated DRAM memory.</p>"},{"location":"ug/occamy/#simulation-of-sw-kernels","title":"Simulation of SW Kernels","text":"<p>All Occamy software is currently compiled with <code>CMake</code> so you might also want to look into <code>./sw/CMakeLists.txt</code> in this directory to see which applications or tests are included. In general you can run the following commands to build applications:</p> <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre> <p>Cmake tests can be run with:</p> <pre><code>make tests\n</code></pre> <p>You can now simulate a single binary as follows:</p> <pre><code># Questasim example\n#bin/occamy_top.vsim &lt;path-to-riscv-binary&gt;\nbin/occamy_top.vsim sw/build/snRuntime/test-snRuntime-simple\n\n# VCS example\nbin/occamy_top.vcs sw/build/snRuntime/test-snRuntime-simple\n</code></pre>"},{"location":"ug/occamy/#makefile-structure","title":"Makefile Structure","text":"<p>Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy/#utility-targets","title":"Utility Targets","text":"<p>In general, the Makefile includes the <code>Makefrag</code> in <code>util/Makefrag</code> at the root of this repository. In this <code>util</code> directory also contains scripts to analyze and visualize traces generated by the RTL simulations. Have a look at the following utility Makefile targets (you can execute them after running RTL simulation):</p> <ul> <li><code>traces</code> Generate the better readable traces in .logs/trace_hart_.txt with spike-dasm <li><code>annotate</code> Annotate the better readable traces in .logs/trace_hart_.s with the source code related with the retired instructions. <p>In addition, we have some general clean targets:</p> <ul> <li><code>clean</code> Clean everything except traces in logs directory.</li> <li><code>clean.logs</code> Delete all traces in logs director</li> </ul>"},{"location":"ug/occamy/#hw-and-source-generation","title":"HW and Source Generation","text":"<ul> <li><code>update-source</code> Update all SW and HW related sources (by, e.g., re-generating the RegGen registers and their c-header files).</li> </ul>"},{"location":"ug/occamy/#simulator-compilations","title":"Simulator Compilations","text":"<ul> <li><code>bin/occamy_top.vcs</code> Build compilation script and compile all sources for VCS simulation.</li> <li>@IIS: run the command as follows: <code>vcs-2020.12 make bin/occamy_top.vcs</code></li> <li> <p><code>clean.vcs</code> Clean all build directories and temporary files for VCS simulation.</p> </li> <li> <p><code>bin/occamy_top.vlt</code> Build compilation script and compile all sources for Verilator simulation.</p> </li> <li> <p><code>clean.vlt</code> Clean all build directories and temporary files for Verilator simulation.</p> </li> <li> <p><code>bin/occamy_top.vsim</code> Build compilation script and compile all sources for Questasim simulation.</p> </li> <li>@IIS: <code>QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/ CC=/gcc-5.3.0-linux_x86_64/bin/gcc CXX=/gcc-5.3.0-linux_x86_64/bin/g++ LD=/gcc-5.3.0-linux_x86_64/bin/ld make bin/occamy_top.vsim</code></li> <li><code>clean.vsim</code> Clean all build directories and temporary files for Questasim simulation.</li> </ul>"},{"location":"ug/occamy/#addressmap-generation","title":"Addressmap Generation","text":"<p>The following command generate various graphics of Occamy's Address Map based on the config file <code>src/occamy_cfg.hjson</code>. Therefore, the commands run in the background the <code>all</code> target.</p> <ul> <li><code>update-addrmap</code> Generate the addressmap in the following formats: MD, TEX.</li> <li><code>addrmap</code> Generate the addressmap in the following formats: MD, PNG, TEX, PDF.</li> <li><code>addrmap.tex</code> Generate the TEX addrmap source.</li> <li><code>addrmap.md</code> Generate the MD addrmap graphic.</li> <li><code>addrmap.png</code> Generate the PNG addrmap graphic.</li> <li><code>addrmap.pdf</code> Generate the PDF addrmap graphic.</li> <li><code>clean.addrmap</code> Delete all addrmap outputs.</li> <li><code>clean.addrmap.pdf</code> Delete all Latex outputs when generating the addrmap.pdf from addrmap.tex</li> </ul>"},{"location":"ug/occamy/#software","title":"Software","text":"<p>The runtime and tests can be compiled as follows:</p> <pre><code>make DEBUG=ON update-sw\n</code></pre> <p>The <code>DEBUG</code> flag is used to include debugging symbols in the binaries, and can be omitted if this is not required. It is required if you later want to annotate the traces.</p>"},{"location":"ug/occamy/#running","title":"Running","text":"<p>You can run a Snitch binary on the simulator by passing it as a command-line argument to <code>bin/occamy_top</code>, for example:</p> <pre><code>bin/occamy_top.vsim sw/build/&lt;some test&gt;\n</code></pre>"},{"location":"ug/occamy/#sw-build","title":"SW Build","text":"<p>Depending on which toolchain you want to use and whether you target <code>banshee</code> (our instruction-accurate emulator) you cann add the following flags when calling <code>cmake</code>: Interesting CMake options that can be set via <code>-D&lt;option&gt;=&lt;value&gt;</code>: Each simulation will generate a unique trace file for each hart in the system. The trace file can be disassembled to instruction mnemonics by using the <code>traces</code> target.</p> <ul> <li><code>CMAKE_TOOLCHAIN_FILE</code>: The compiler toolchain configuration to use. Acceptable values:<ul> <li><code>toolchain-gcc</code> for a GNU tolchain</li> <li><code>toolchain-llvm</code> for a LLVM/Clang toolchain (coming soon)</li> <li>Your own custom <code>&lt;toolchain&gt;.cmake</code> file; see <code>${SNITCH_REPO_ROOT}/cmake/toolchain-gcc.cmake</code> for reference</li> </ul> </li> <li><code>SNITCH_SIMULATOR</code>: Path to simulation binary absolute or relaive from the <code>sw/build/</code> directory such as <code>../../../../../hw/system/snitch_cluster/bin/snitch_cluster.vsim</code></li> <li><code>SNITCH_BANSHEE</code>: The <code>banshee</code> simulator binary to use for test execution.</li> <li><code>BUILD_TESTS</code>: Build Cmake tests. Can be <code>ON</code> or <code>OFF</code></li> </ul> <p>The following Makefile targets do set these command already:</p> <ul> <li><code>sw</code> Build SW into sw/build with the LLVM.</li> <li><code>sw.vcs</code> Build SW into sw/build with the LLVM (incl. tests) for VCS simulator.</li> <li><code>sw.vlt</code> Build SW into sw/build with the LLVM (incl. tests) for Verilator simulator.</li> <li><code>sw.vsim</code> Build SW into sw/build with the LLVM (incl. tests) for Questasim simulator.</li> <li><code>clean.sw</code> Delete sw/build.</li> </ul> <p>The following command build and run all specified cmake tests with the corresponding simulator:</p> <ul> <li><code>sw.test.vcs</code> Build SW and run all tests with VCS simulator.</li> <li><code>sw.test.vlt</code> Build SW and run all tests with Verilator simulator.</li> <li><code>sw.test.vsim</code> Build SW and run all tests with Questasim simulator.</li> </ul>"},{"location":"ug/occamy/#fpga","title":"FPGA","text":"<p>For the FPGA build flow have a look at the directory <code>fpga</code>. The following Makefile target basically enters this directory and builds Occamy's FPGA version:</p> <ul> <li> <p><code>fpga</code> Build a small Occamy version (CVA6 + 1xcluster) for the VCU128 FPGA board. In addition to generating readable traces, the above command also dumps several performance metrics to file for each hart. These can be collected into a single CSV file with the following target:</p> <p>make perf-csv</p> </li> </ul> <p>Among these performance metrics are start and end times of particular regions marked in the traces (via mcycle CSR reads). It can sometimes be useful to visualize these regions in a timeline. You can use the <code>util/trace/eventvis.py</code> tool to generate a JSON file starting from a CSV file (similar to the output of the previous command) which can be visualized in a Chrome browser at <code>chrome://tracing</code>. A detailed description of the expected CSV file format can be found in the tool's source code.</p> <p>A source-code annotated trace can be generated using the <code>annotate</code> target. The Snitch binary with the debugging symbols should be passed to the target:</p> <pre><code>make BINARY=sw/build/sn_&lt;some test&gt;.elf annotate\n</code></pre>"},{"location":"ug/occamy/#notes","title":"Notes","text":"<p>All Snitch cores are initially isolated and are not able to fetch instructions from the <code>bootrom</code>. The <code>cva6</code> manager core de-isolates the Snitch cores during booting. After that the manager core is trapped in an exception loop.</p>"},{"location":"ug/setup-iis/","title":"Getting Started at IIS","text":"<p>Below you can find the flow to run</p> <p>First, be aware of the shell which you are using. - We recommend using bash:     <pre><code>bash\n</code></pre></p>"},{"location":"ug/setup-iis/#scratch-folder","title":"Scratch folder","text":"<p>Due to the limited size of your home directory, we recomment working in your scratch. You can select between <code>/scratch</code>, <code>/scratch2</code>, <code>/scratch3</code>.</p> <ul> <li>Create yourself a scratch folder to work in it:     <pre><code># get your machine name\nexport MACHINE=$(hostname | cut -d . -f 1)\n# Look how much free space there is in the scratch folders\ndf -h | grep scratch\n# Pick one and create your folder in there, example :\nmkdir -p /scratch/${USER}\n# Note, contrary to your home folder, the scratch folder is local to your machine, but you can access it on any other machine over the network as follows:\ncd /usr/scratch/${MACHINE}/${USER}\n</code></pre></li> </ul>"},{"location":"ug/setup-iis/#installation","title":"Installation","text":"<p>At IIS the default version of some tools (<code>gcc</code>, <code>cmake</code>, ...) might be too old for certain projects.</p> <ul> <li> <p>Create a install directory to install the needed tools:     <pre><code>export INSTALL_DIR=/usr/scratch/${MACHINE}/${USER}/install-snitch\nmkdir $INSTALL_DIR\ncd $INSTALL_DIR\n</code></pre></p> </li> <li> <p>Use the pre-installed LLVM toolchain by adding the following to your path:     <pre><code>export PATH=/usr/pack/riscv-1.0-kgf/pulp-llvm-0.12.0/bin/:$PATH\n</code></pre></p> <p>or download the latest toolchain (andd add the location to your path): <pre><code>mkdir -p riscv-llvm\nexport LATEST_TAG=`curl -s -H \"Accept: application/vnd.github.v3+json\" https://api.github.com/repos/pulp-platform/llvm-project/releases/latest | grep '\"tag_name\":' | sed -E 's/.*\"([^\"]+)\".*/\\1/'`\nwget -qO- https://github.com/pulp-platform/llvm-project/releases/download/${LATEST_TAG}/riscv32-pulp-llvm-centos7-${LATEST_TAG}.tar.gz  | tar xvz --strip-components=1 -C riscv-llvm\n# go back to installation directory\ncd ${INSTALL_DIR}\n# add location to path\nexport PATH=${INSTALL_DIR}/riscv-llvm/bin/:${PATH}\n# unset temporary variables\nunset LATEST_TAG\n</code></pre></p> </li> <li> <p>Install the correct python version:     <pre><code>export PYTHON_VERSION=3.9.10\nmkdir -p python-${PYTHON_VERSION}\n# download into temporary directory\nmkdir tmp\ncd tmp\ncurl https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz | tar -xz --strip-components=1\n# install into location /usr/scratch/${MACHINE}/${USER}/python-${PYTHON_VERSION}\n./configure --prefix=${INSTALL_DIR}/python-${PYTHON_VERSION} --enable-ipv6\nmake -j$(nproc)\nmake install\n# go back to installation directory\ncd ${INSTALL_DIR}\n# delete temporary installation directory\nrm -rf tmp\n# add location to path\nexport PATH=${PWD}/python-${PYTHON_VERSION}/bin/:$PATH\n# unset temporary variables\nunset PYTHON_VERSION\n</code></pre></p> </li> <li> <p>Install the correct verilator version:     <pre><code>export VERILATOR_VERSION=4.100\nmkdir tmp\nwget -qO- https://github.com/verilator/verilator/archive/refs/tags/v${VERILATOR_VERSION}.tar.gz  | tar xvz --strip-components=1 -C tmp\nmkdir -p verilator-${VERILATOR_VERSION}\ncd tmp\nautoconf\nunset VERILATOR_ROOT\n./configure --prefix=${INSTALL_DIR}/verilator-${VERILATOR_VERSION}\nmake -j$(nproc)\nmake install\n# unset temporary variables\nunset VERILATOR_VERSION\n# go back to installation directory\ncd ${INSTALL_DIR}\n# create symbolic link\nexport PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/bin/:$PATH\"\n# export INCLUDE_PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/include/:$INCLUDE_PATH\"\n# export INCLUDE_PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/include/vltstd/:$INCLUDE_PATH\"\n</code></pre></p> </li> <li> <p>Install the correct <code>verible-verilog-lint</code> tool version:     <pre><code>export VERIBLE_VERSION=0.0-3222-gb19cdf44\nmkdir -p verible-${VERIBLE_VERSION}\ncd verible-${VERIBLE_VERSION}\ncurl -Ls -o verible.tar.gz https://github.com/google/verible/releases/download/v$VERIBLE_VERSION/verible-v$VERIBLE_VERSION-CentOS-7.9.2009-Core-x86_64.tar.gz\nchmod 777 ${INSTALL_DIR}/verible-${VERIBLE_VERSION}\ntar -C ${INSTALL_DIR}/verible-${VERIBLE_VERSION} -xf verible.tar.gz --strip-components=1\n# add location to path\nexport PATH=\"${INSTALL_DIR}/verible-${VERIBLE_VERSION}/bin/:$PATH\"\n# unset temporary variables\nunset VERIBLE_VERSION\n</code></pre></p> </li> </ul> <p>For installing the last missing pieces you need to clone the repository.</p> <ul> <li>Clone the repository:     <pre><code>cd /usr/scratch/${MACHINE}/${USER}\ngit clone git@github.com:pulp-platform/snitch.git\n</code></pre></li> <li> <p>Create virtual environment and install the <code>python-requirements.txt</code>:     <pre><code># create virtual environment with correct and newly installed python version\npython3.9 -m venv ~/.venvs/snitch\n# activate the virtual environment\nsource ~/.venvs/snitch/bin/activate\n# enter the cloned snitch directory\ncd snitch\n# install python requirements\npip install -r python-requirements.txt\n</code></pre></p> </li> <li> <p>Create a location for all you binaries in your home directory and create it to your path:     <pre><code>mkdir -p /home/${USER}/.snitch-bin\n# Add the created binary location to your path\nexport PATH=/home/${USER}/.snitch-bin:$PATH\n</code></pre></p> </li> <li> <p>Install the correct <code>spike-dasm</code> and create a symbolic link to your binary location <code>/home/${USER}/.snitch-bin</code>:     <pre><code>cd sw/vendor/riscv-isa-sim\nmkdir build\ncd build\n../configure\nmake spike-dasm\n# create symbolic link\nln -s /usr/scratch/${MACHINE}/${USER}/snitch/sw/vendor/riscv-isa-sim/build/spike-dasm /home/${USER}/.snitch-bin/spike-dasm\n</code></pre></p> </li> <li> <p>Use a newer <code>cmake</code> versions:     <pre><code># make sure you are in /home/${USER}/.snitch-bin\ncd /home/${USER}/.snitch-bin\nln -s /usr/sepp/bin/cmake-3.18.1 cmake\n</code></pre></p> </li> </ul>"},{"location":"ug/setup-iis/#tool-specific-versions","title":"Tool Specific Versions","text":"<p>Unfortunately, depending on which RTL simulator you are using, you need to use a different GCC version. Therefore, you have to set the following variables in addition to the above commands.</p> <p>Let's go to the system <code>snitch_cluster</code>:</p> <pre><code>cd /usr/scratch/${MACHINE}/${USER}/snitch\ncd hw/system/snitch_cluster\n</code></pre>"},{"location":"ug/setup-iis/#questasim","title":"Questasim","text":"<p>First, let's prepare the environment to use Questasim and let's run some tests:</p> <pre><code># Use Questasim's older GCC version for correct DPI compilation\nexport QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/\nexport CC=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/gcc\nexport CXX=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/g++\nexport LD=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/ld\n\n# compile HW for Questasim\nmake bin/snitch_cluster.vsim\n\n# build and run all snRuntime SW tests on Questasim\nmake sw.test.vsim\n\n# undo the variables if you change simulator\nunset QUESTA_HOME\nunset CC\nunset CXX\nunset LD\n</code></pre>"},{"location":"ug/setup-iis/#vcs","title":"VCS","text":"<p>Next, let's test prepare the environment for VCS and let's run some tests:</p> <pre><code># set GCC and G++ to version 9.2\nexport GCC_DIR=\"/usr/pack/gcc-9.2.0-af\"\nexport GCC_DIR2=\"${GCC_DIR}/linux-x64\"\n# use correct CC and CXX\nexport CC=\"${GCC_DIR2}/bin/gcc\"\nexport CXX=\"${GCC_DIR2}/bin/g++\"\n# set correct libraries\nexport LD_LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\nexport LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\n# set correct include paths\nexport C_INCLUDE_PATH=\"${GCC_DIR}/include\"\nexport CPLUS_INCLUDE_PATH=\"${GCC_DIR}/include\"\n# set correct PATH\nexport PATH=\"${GCC_DIR2}/linux-x64/bin:${PATH}\"\n\n# compile HW for VCS with correct VCS version prefix\nvcs-2020.12 make bin/snitch_cluster.vcs\n\n# build and run all snRuntime SW tests on VCS\nvcs-2020.12 make sw.test.vcs\n\n# undo the variables if you change simulator\nunset CC\nunset CXX\n</code></pre>"},{"location":"ug/setup-iis/#verilator","title":"Verilator","text":"<p>Verilator uses the same GCC compiler as VCS:</p> <pre><code># compile HW for Verilator\nmake bin/snitch_cluster.vlt\n\n# build and run all snRuntime SW tests on Verilator\nmake sw.test.vlt\n</code></pre>"},{"location":"ug/setup-iis/#summary","title":"Summary","text":"<p>Next time you start with a fresh terminal, you can execute the following commands to use the correct tools:</p> <pre><code>bash\n# set all required variables\nexport MACHINE=$(hostname | cut -d . -f 1)\nexport INSTALL_DIR=/usr/scratch/${MACHINE}/${USER}/install-snitch\nexport PYTHON_VERSION=3.9.10\nexport VERILATOR_VERSION=4.100\nexport VERIBLE_VERSION=0.0-3222-gb19cdf44\n\n# LLVM\n# pre-installed\nexport PATH=/usr/pack/riscv-1.0-kgf/pulp-llvm-0.12.0/bin/:$PATH\n# or manually installad\n#export PATH=${INSTALL_DIR}/riscv-llvm/bin/:${PATH}\n# Correct Python version\nexport PATH=${INSTALL_DIR}/python-${PYTHON_VERSION}/bin/:$PATH\n# Activate the virtual python environment\nsource ~/.venvs/snitch/bin/activate\n# Correct Verilator version\nexport PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/bin/:$PATH\"\n# Correct Verible version\nexport PATH=\"${INSTALL_DIR}/verible-${VERIBLE_VERSION}/bin/:$PATH\"\n# Use correct `cmake` and `spike-dasm` version\nexport PATH=/home/${USER}/.snitch-bin:$PATH\n\n# unset all temporary variables\nunset MACHINE\nunset INSTALL_DIR\nunset PYTHON_VERSION\nunset VERILATOR_VERSION\nunset VERIBLE_VERSION\n</code></pre> <p>If you use Questasim, set the following variables:</p> <pre><code>export QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/\nexport CC=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/gcc\nexport CXX=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/g++\nexport LD=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/ld\n</code></pre> <p>If you use VCS or Verilator, set the following variables:</p> <pre><code># set GCC and G++ to version 9.2\nexport GCC_DIR=\"/usr/pack/gcc-9.2.0-af\"\nexport GCC_DIR2=\"${GCC_DIR}/linux-x64\"\n# use correct CC and CXX\nexport CC=\"${GCC_DIR2}/bin/gcc\"\nexport CXX=\"${GCC_DIR2}/bin/g++\"\n# set correct libraries\nexport LD_LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\nexport LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\n# set correct include paths\nexport C_INCLUDE_PATH=\"${GCC_DIR}/include\"\nexport CPLUS_INCLUDE_PATH=\"${GCC_DIR}/include\"\n# set correct PATH\nexport PATH=\"${GCC_DIR2}/linux-x64/bin:${PATH}\"\n</code></pre>"},{"location":"ug/snitch_cluster/","title":"Snitch Cluster System","text":"<p>The Snitch cluster system (<code>hw/system/snitch_cluster</code>) is a fundamental system around a Snitch core. The cluster can be configured using a config file.</p> <p>The configuration parameters are documented using JSON schema, and documentation is generated for the schema. The configuration options can be found here.</p> <p>The cluster testbench simulates an infinite memory. The RISC-V ELF file is preloaded using RISC-V's Front-end Server (<code>fesvr</code>).</p>"},{"location":"ug/snitch_cluster/#getting-started","title":"Getting Started","text":"<p>In <code>hw/system/snicht_cluster</code>:</p> <ul> <li>Build the software:     <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre></li> <li> <p>Compile the model for your simulator:</p> Verilator <pre><code>make bin/snitch_cluster.vlt\n</code></pre> Questasim <pre><code>make bin/snitch_cluster.vsim\n</code></pre> VCS <pre><code>make bin/snitch_cluster.vcs\n</code></pre> </li> <li> <p>Run a binary on the simulator:</p> Verilator <pre><code>bin/snitch_cluster.vlt path/to/riscv/binary\n</code></pre> Questasim <pre><code># Headless\nbin/snitch_cluster.vsim path/to/riscv/binary\n# GUI\nbin/snitch_cluster.vsim.gui path/to/riscv/binary\n</code></pre> VCS <pre><code>bin/snitch_cluster.vcs path/to/riscv/binary\n</code></pre> </li> <li> <p>Build the traces in .logs/trace_hart_.txt with the help of spike-dasm:     <pre><code>make traces\n</code></pre> <li> <p>Annotate the traces in .logs/trace_hart_.s with the source code related with the retired instructions:     <pre><code>make annotate\n</code></pre> <li> <p>Get an overview of all Makefile targets:     <pre><code>make help\n</code></pre></p> </li>"},{"location":"ug/snitch_cluster/#configure-the-cluster","title":"Configure the Cluster","text":"<p>To configure the cluster with a different configuration, either edit the configuration files in the <code>cfg</code> folder or create a new configuration file and pass it to the Makefile:</p> <pre><code>make bin/snitch_cluster.vlt CFG=cfg/single-core.hjson\n</code></pre> <p>The default config is in <code>cfg/cluster.default.hjson</code>. Alternatively, you can also set your <code>CFG</code> environment variable, the Makefile will pick it up and override the standard config.</p>"},{"location":"ug/snitch_cluster/#using-verilator-with-llvm","title":"Using Verilator with LLVM","text":"<p>LLVM+clang can be used to build the Verilator model. Optionally specify a path to the LLVM toolchain in <code>CLANG_PATH</code> and set <code>VLT_USE_LLVM=ON</code>. For the verilated model itself to be complied with LLVM, verilator must be built with LLVM (<code>CC=clang CXX=clang++ ./configure</code>). The <code>VLT</code> environment variable can then be used to point to the verilator binary.</p> <pre><code># Optional: Specify which llvm to use\nexport CLANG_PATH=/path/to/llvm-12.0.1\n# Optional: Point to a verilator binary compiled with LLVM\nexport VLT=/path/to/verilator-llvm/bin/verilator\nmake VLT_USE_LLVM=ON bin/snitch_cluster.vlt\n</code></pre>"},{"location":"ug/occamy_system/1_overview/","title":"Occamy Overview","text":"<p>Occamy is the chiplet of a 2.5D integrated dual-chiplet system with 8GB private high-bandwidth memory (HBM) per chiplet. The scalable architecture, designed to operate at 1GHz, is organized around an extremely efficient integer RISC-V core coupled with a powerful FPU with SIMD, Minifloat (8-bit, 16-bit) and fused sum-dot-product capabilities. Thanks to two custom ISA extensions the RISC-V core can keep FPU utilization above 90% for ultra-efficient computation of data-parallel floating-point workloads. Each chiplet contains more than 200 such cores organized in groups of four compute clusters. Each cluster shares a tightly-coupled memory among eight compute cores and a dedicated DMA core orchestrating the flow of data. All clusters and system peripherals are managed by a linux-capable RISC-V core.</p> <p>The main architecture is developed in the open and is available on Github: https://github.com/pulp-platform/snitch/tree/occamy-tapeout</p> <p>The following tag was used for the tapeout: https://github.com/pulp-platform/snitch/tree/occamy-tapeout</p>"},{"location":"ug/occamy_system/1_overview/#features","title":"Features","text":"<ul> <li>GF12LP+ technology</li> <li>73 :math:<code>mm^2</code> die area</li> <li>6 Groups: 216 32-bit RISC-V Snitch cores</li> <li>4 cluster per group</li> <li>8 compute cores per cluster</li> <li>1 DMA core per cluster</li> <li>Linux-capable 64-bit manager core CVA6</li> <li>two AXI interconnet subsytems: 64-bit and 512-bit</li> <li>6x2 FLLs</li> <li>GF's Digital Frequency Generator (DFG)</li> <li>ETH FL</li> <li>Peripherals:</li> <li>JTAG</li> <li>SPI</li> <li>I2C</li> <li>UART</li> <li>Serial Link</li> <li>Timer</li> <li>8GB HBM2e memory</li> <li>Custom Die-to-Die IP:</li> <li>source synchronous</li> <li>Bunch-of-Wires (BoW)</li> <li>DDR</li> <li>Low speed: &lt;125 MHz</li> <li>Low bandwidth: &lt;128 Gb/s Dubplex</li> </ul>"},{"location":"ug/occamy_system/2_addrmap/","title":"Address Map","text":"<p>This is the current address map of occamy. Note that the Quadrants address map has its own table below.</p>"},{"location":"ug/occamy_system/2_addrmap/#occamy-address-map","title":"Occamy Address Map","text":"Name Size Status Start End DEBUG 4.0 KB used 0x0000_0000 0x0000_0fff - 16.0 MB free 0x0000_1000 0x00ff_ffff BOOTROM 128.0 KB used 0x0100_0000 0x0101_ffff - 15.9 MB free 0x0102_0000 0x01ff_ffff SOC_CTRL 4.0 KB used 0x0200_0000 0x0200_0fff FLL_SYSTEM 1.0 KB used 0x0200_1000 0x0200_13ff FLL_PERIPH 1.0 KB used 0x0200_1400 0x0200_17ff FLL_HBM2E 1.0 KB used 0x0200_1800 0x0200_1bff - 1023.0 B free 0x0200_1c00 0x0200_1fff UART 4.0 KB used 0x0200_2000 0x0200_2fff GPIO 4.0 KB used 0x0200_3000 0x0200_3fff I2C 4.0 KB used 0x0200_4000 0x0200_4fff CHIP_CTRL 4.0 KB used 0x0200_5000 0x0200_5fff TIMER 4.0 KB used 0x0200_6000 0x0200_6fff HBM_XBAR_CFG 4.0 KB used 0x0200_7000 0x0200_7fff - 16.0 MB free 0x0200_8000 0x02ff_ffff SPIM 128.0 KB used 0x0300_0000 0x0301_ffff - 15.9 MB free 0x0302_0000 0x03ff_ffff CLINT 1.0 MB used 0x0400_0000 0x040f_ffff - 15.0 MB free 0x0410_0000 0x04ff_ffff PCIE_CFG 128.0 KB used 0x0500_0000 0x0501_ffff - 15.9 MB free 0x0502_0000 0x05ff_ffff HBI_WIDE_CFG 64.0 KB used 0x0600_0000 0x0600_ffff - 15.9 MB free 0x0601_0000 0x06ff_ffff HBI_NARROW_CFG 64.0 KB used 0x0700_0000 0x0700_ffff - 15.9 MB free 0x0701_0000 0x07ff_ffff HBM_CFG_TOP 4.0 MB used 0x0800_0000 0x083f_ffff - 12.0 MB free 0x0840_0000 0x08ff_ffff HBM_CFG_PHY 1.0 MB used 0x0900_0000 0x090f_ffff - 15.0 MB free 0x0910_0000 0x09ff_ffff HBM_CFG_SEQ 64.0 KB used 0x0a00_0000 0x0a00_ffff - 7.9 MB free 0x0a01_0000 0x0a7f_ffff HBM_CFG_CTRL 64.0 KB used 0x0a80_0000 0x0a80_ffff - 7.9 MB free 0x0a81_0000 0x0aff_ffff QUAD_0_CFG 64.0 KB used 0x0b00_0000 0x0b00_ffff QUAD_1_CFG 64.0 KB used 0x0b01_0000 0x0b01_ffff QUAD_2_CFG 64.0 KB used 0x0b02_0000 0x0b02_ffff QUAD_3_CFG 64.0 KB used 0x0b03_0000 0x0b03_ffff QUAD_4_CFG 64.0 KB used 0x0b04_0000 0x0b04_ffff QUAD_5_CFG 64.0 KB used 0x0b05_0000 0x0b05_ffff - 15.6 MB free 0x0b06_0000 0x0bff_ffff PLIC 64.0 MB used 0x0c00_0000 0x0fff_ffff QUADRANTS 6.0 MB used 0x1000_0000 0x105f_ffff - 10.0 MB free 0x1060_0000 0x10ff_ffff SYS_IDMA_CFG 64.0 KB used 0x1100_0000 0x1100_ffff - 239.9 MB free 0x1101_0000 0x1fff_ffff PCIE 640.0 MB used 0x2000_0000 0x47ff_ffff PCIE 640.0 MB used 0x4800_0000 0x6fff_ffff SPM_NARROW 512.0 KB used 0x7000_0000 0x7007_ffff - 15.5 MB free 0x7008_0000 0x70ff_ffff SPM_WIDE 1.0 MB used 0x7100_0000 0x710f_ffff - 239.0 MB free 0x7110_0000 0x7fff_ffff HBM_0 1.0 GB used 0x8000_0000 0xbfff_ffff HBM_1 1.0 GB used 0xc000_0000 0xffff_ffff WIDE_ZERO_MEM 8.0 GB used 0x1_0000_0000 0x2_ffff_ffff - 52.0 GB free 0x3_0000_0000 0xf_ffff_ffff HBM_0 1.0 GB used 0x10_0000_0000 0x10_3fff_ffff HBM_1 1.0 GB used 0x10_4000_0000 0x10_7fff_ffff HBM_2 1.0 GB used 0x10_8000_0000 0x10_bfff_ffff HBM_3 1.0 GB used 0x10_c000_0000 0x10_ffff_ffff HBM_4 1.0 GB used 0x11_0000_0000 0x11_3fff_ffff HBM_5 1.0 GB used 0x11_4000_0000 0x11_7fff_ffff HBM_6 1.0 GB used 0x11_8000_0000 0x11_bfff_ffff HBM_7 1.0 GB used 0x11_c000_0000 0x11_ffff_ffff - 952.0 GB free 0x12_0000_0000 0xff_ffff_ffff HBI 1.0 TB used 0x100_0000_0000 0x1ff_ffff_ffff"},{"location":"ug/occamy_system/2_addrmap/#quadrants-address-map","title":"Quadrants Address Map","text":"Quadrant Cluster Name Size Start End 0 0 CLUSTER_TCDM 128.0 KB 0x1000_0000 0x1001_ffff 0 0 CLUSTER_PERIPHERAL 64.0 KB 0x1002_0000 0x1002_ffff 0 0 CLUSTER_ZERO_MEM 64.0 KB 0x1003_0000 0x1003_ffff 0 1 CLUSTER_TCDM 128.0 KB 0x1004_0000 0x1005_ffff 0 1 CLUSTER_PERIPHERAL 64.0 KB 0x1006_0000 0x1006_ffff 0 1 CLUSTER_ZERO_MEM 64.0 KB 0x1007_0000 0x1007_ffff 0 2 CLUSTER_TCDM 128.0 KB 0x1008_0000 0x1009_ffff 0 2 CLUSTER_PERIPHERAL 64.0 KB 0x100a_0000 0x100a_ffff 0 2 CLUSTER_ZERO_MEM 64.0 KB 0x100b_0000 0x100b_ffff 0 3 CLUSTER_TCDM 128.0 KB 0x100c_0000 0x100d_ffff 0 3 CLUSTER_PERIPHERAL 64.0 KB 0x100e_0000 0x100e_ffff 0 3 CLUSTER_ZERO_MEM 64.0 KB 0x100f_0000 0x100f_ffff 1 0 CLUSTER_TCDM 128.0 KB 0x1010_0000 0x1011_ffff 1 0 CLUSTER_PERIPHERAL 64.0 KB 0x1012_0000 0x1012_ffff 1 0 CLUSTER_ZERO_MEM 64.0 KB 0x1013_0000 0x1013_ffff 1 1 CLUSTER_TCDM 128.0 KB 0x1014_0000 0x1015_ffff 1 1 CLUSTER_PERIPHERAL 64.0 KB 0x1016_0000 0x1016_ffff 1 1 CLUSTER_ZERO_MEM 64.0 KB 0x1017_0000 0x1017_ffff 1 2 CLUSTER_TCDM 128.0 KB 0x1018_0000 0x1019_ffff 1 2 CLUSTER_PERIPHERAL 64.0 KB 0x101a_0000 0x101a_ffff 1 2 CLUSTER_ZERO_MEM 64.0 KB 0x101b_0000 0x101b_ffff 1 3 CLUSTER_TCDM 128.0 KB 0x101c_0000 0x101d_ffff 1 3 CLUSTER_PERIPHERAL 64.0 KB 0x101e_0000 0x101e_ffff 1 3 CLUSTER_ZERO_MEM 64.0 KB 0x101f_0000 0x101f_ffff 2 0 CLUSTER_TCDM 128.0 KB 0x1020_0000 0x1021_ffff 2 0 CLUSTER_PERIPHERAL 64.0 KB 0x1022_0000 0x1022_ffff 2 0 CLUSTER_ZERO_MEM 64.0 KB 0x1023_0000 0x1023_ffff 2 1 CLUSTER_TCDM 128.0 KB 0x1024_0000 0x1025_ffff 2 1 CLUSTER_PERIPHERAL 64.0 KB 0x1026_0000 0x1026_ffff 2 1 CLUSTER_ZERO_MEM 64.0 KB 0x1027_0000 0x1027_ffff 2 2 CLUSTER_TCDM 128.0 KB 0x1028_0000 0x1029_ffff 2 2 CLUSTER_PERIPHERAL 64.0 KB 0x102a_0000 0x102a_ffff 2 2 CLUSTER_ZERO_MEM 64.0 KB 0x102b_0000 0x102b_ffff 2 3 CLUSTER_TCDM 128.0 KB 0x102c_0000 0x102d_ffff 2 3 CLUSTER_PERIPHERAL 64.0 KB 0x102e_0000 0x102e_ffff 2 3 CLUSTER_ZERO_MEM 64.0 KB 0x102f_0000 0x102f_ffff 3 0 CLUSTER_TCDM 128.0 KB 0x1030_0000 0x1031_ffff 3 0 CLUSTER_PERIPHERAL 64.0 KB 0x1032_0000 0x1032_ffff 3 0 CLUSTER_ZERO_MEM 64.0 KB 0x1033_0000 0x1033_ffff 3 1 CLUSTER_TCDM 128.0 KB 0x1034_0000 0x1035_ffff 3 1 CLUSTER_PERIPHERAL 64.0 KB 0x1036_0000 0x1036_ffff 3 1 CLUSTER_ZERO_MEM 64.0 KB 0x1037_0000 0x1037_ffff 3 2 CLUSTER_TCDM 128.0 KB 0x1038_0000 0x1039_ffff 3 2 CLUSTER_PERIPHERAL 64.0 KB 0x103a_0000 0x103a_ffff 3 2 CLUSTER_ZERO_MEM 64.0 KB 0x103b_0000 0x103b_ffff 3 3 CLUSTER_TCDM 128.0 KB 0x103c_0000 0x103d_ffff 3 3 CLUSTER_PERIPHERAL 64.0 KB 0x103e_0000 0x103e_ffff 3 3 CLUSTER_ZERO_MEM 64.0 KB 0x103f_0000 0x103f_ffff 4 0 CLUSTER_TCDM 128.0 KB 0x1040_0000 0x1041_ffff 4 0 CLUSTER_PERIPHERAL 64.0 KB 0x1042_0000 0x1042_ffff 4 0 CLUSTER_ZERO_MEM 64.0 KB 0x1043_0000 0x1043_ffff 4 1 CLUSTER_TCDM 128.0 KB 0x1044_0000 0x1045_ffff 4 1 CLUSTER_PERIPHERAL 64.0 KB 0x1046_0000 0x1046_ffff 4 1 CLUSTER_ZERO_MEM 64.0 KB 0x1047_0000 0x1047_ffff 4 2 CLUSTER_TCDM 128.0 KB 0x1048_0000 0x1049_ffff 4 2 CLUSTER_PERIPHERAL 64.0 KB 0x104a_0000 0x104a_ffff 4 2 CLUSTER_ZERO_MEM 64.0 KB 0x104b_0000 0x104b_ffff 4 3 CLUSTER_TCDM 128.0 KB 0x104c_0000 0x104d_ffff 4 3 CLUSTER_PERIPHERAL 64.0 KB 0x104e_0000 0x104e_ffff 4 3 CLUSTER_ZERO_MEM 64.0 KB 0x104f_0000 0x104f_ffff 5 0 CLUSTER_TCDM 128.0 KB 0x1050_0000 0x1051_ffff 5 0 CLUSTER_PERIPHERAL 64.0 KB 0x1052_0000 0x1052_ffff 5 0 CLUSTER_ZERO_MEM 64.0 KB 0x1053_0000 0x1053_ffff 5 1 CLUSTER_TCDM 128.0 KB 0x1054_0000 0x1055_ffff 5 1 CLUSTER_PERIPHERAL 64.0 KB 0x1056_0000 0x1056_ffff 5 1 CLUSTER_ZERO_MEM 64.0 KB 0x1057_0000 0x1057_ffff 5 2 CLUSTER_TCDM 128.0 KB 0x1058_0000 0x1059_ffff 5 2 CLUSTER_PERIPHERAL 64.0 KB 0x105a_0000 0x105a_ffff 5 2 CLUSTER_ZERO_MEM 64.0 KB 0x105b_0000 0x105b_ffff 5 3 CLUSTER_TCDM 128.0 KB 0x105c_0000 0x105d_ffff 5 3 CLUSTER_PERIPHERAL 64.0 KB 0x105e_0000 0x105e_ffff 5 3 CLUSTER_ZERO_MEM 64.0 KB 0x105f_0000 0x105f_ffff - - EMPTY 10.0 MB 0x1060_0000 0x10ff_ffff"},{"location":"ug/occamy_system/3_system_components/","title":"System Components Description","text":""},{"location":"ug/occamy_system/3_system_components/#harts","title":"Harts","text":"<p>Every core in the system is associated to a unique RISC-V hart (hardware thread), identified by a unique index.</p> <p>The CVA6 core is assigned hart ID 0.</p> <p>The Snitch cores are hierarchically distributed across 6 groups, each containing 4 clusters, each in turn containing 9 cores. The group, cluster and core IDs in this hierarchical subdivision are used to calculate the hart ID:</p> <pre><code>   hart_id = group_id * 4 + cluster_id * 9 + core_id + 1\n</code></pre>"},{"location":"ug/occamy_system/3_system_components/#occamy-toplevel","title":"Occamy Toplevel","text":"<p>The Occamy architecture includes six groups each containing four clusters.</p> <p></p>"},{"location":"ug/occamy_system/3_system_components/#acceleration-groups-and-cluster","title":"Acceleration Groups and Cluster","text":""},{"location":"ug/occamy_system/3_system_components/#group","title":"Group","text":"<p>A group contains four Snitch clusters, a Constant Cache, and a Zero Memory. There are two crossbars for narrow 64-bit accesses used the Snitch LSU and the wide 512-bit AXI bus used by the instruction caches and the DMA. The group is a standalone clock-gated and reset domain and both narrow and wide AXI ports can be isolated.</p> <p></p> <p>The group and its components can be controlled via the :ref:<code>group_control_registers</code>, which are SoC-clocked and SoC-reset to provide reset, gating, and isolation control at all times.</p>"},{"location":"ug/occamy_system/3_system_components/#constant-cache","title":"Constant Cache","text":"<p>The constant cache can be dis-/en-abled and configured via the <code>group_control_registers</code>.</p>"},{"location":"ug/occamy_system/3_system_components/#tlbs","title":"TLBs","text":"<p>Each group features two independent TLBs, one for their narrow and one for their wide interface. They can be enabled, disabled, and configured via the <code>group_control_registers</code>. Accordingly, TLB configuration is system-reset, externally accessible while the group is clock-gated, and persists through internal group resets.</p> <p>After SoC reset, both TLBs are bypassed, passing all internal requests to the external NoC without filtering or translation. This can be toggled by the <code>TLB_WIDE_ENABLE</code> and <code>TLB_NARROW_ENABLE</code> registers, respectively.</p> <p>The TLBs are passive, meaning that their page tables are intended to be explicitly programmed before use. This can be done by the CVA6 host or by the group cores themselves if the TLB is bypassed or its registers are mapped in the narrow TLB's page table beforehand. Thus, the host can reserve full control of the memory mapping of each group or delegate it as needed.</p> <p>Both TLBs provide eight entries, each of which consists of an aligned block of registers. The first three register pairs encode three 36-bit page numbers required to address our 48-bit address space:</p> <ul> <li><code>PAGEIN_FIRST</code>: The first page of this entries' mapped input range</li> <li><code>PAGEIN_LAST</code>: The last page of this entries' mapped input range</li> <li><code>PAGEOUT_BASE</code>: The base page of this entries' output range</li> </ul> <p>Additionally, each entry has a seventh <code>FLAGS</code> register, with a <code>valid</code> bit indicating whether this entries' mapping is active and a <code>read_only</code> bit indicating whether writes to this region are permitted or blocked.</p> <p>When a request enters a non-bypassed TLB, it's base address' page will be matched against all active entries, with lower entry indices taking precedence. If a match is found, the address' page number will be replaced with the entries' <code>PAGEOUT_BASE</code>. If no match is found or the request is a write to a read-only region, an AXI error response is returned and the request does not pass through the TLB.</p> <p>Note: The group cores are not designed to handle AXI error responses in general, and their behavior is generally undefined in this case. Thus, the programmer must correctly configure any accessed external range in the TLBs before running code on group cores that accesses these memory regions.</p>"},{"location":"ug/occamy_system/3_system_components/#cluster","title":"Cluster","text":"<p>A cluster contains eight worker Snitch Cores, each of which combines a small integer core, a trace L0 instruction cache, and a large double-precision Floating Point Unit (FPU) kept busy with the SSR and FREP extensions. An additional ninth Snitch Core controls a cluster-level DMA engine and can be used for cluster coordination. The DMA-core has a smaller configuration FPU. All cores share a tightly-coupled 128 KiB L1 SPM. The Snitch Cores also share a two-way 8KiB L1 instruction cache and an integer Multiply Divide Unit (MulDiv). Finally, the DMA engine and L1 instruction cache share a duplex 512-bit AXI crossbar connection to the global memory system, which all Snitch cores can access through a 64-bit secondary AXI crossbar; both crossbars are internally connected for convenience.</p> <p></p>"},{"location":"ug/occamy_system/3_system_components/#cluster-memories","title":"Cluster Memories","text":"<p>A cluster contains a 128 KiB TCDM acting as a software-managed L1 cache. The TCDM is divided into 32 memory banks, each 64 bit wide, via a single-cycle SPM interconnect. Each core has four 64-bit ports to the TCDM to achieve full utilization on all three SSR streams. Blocks of eight banks form superbanks, which are accessed in parallel by the 512-bit DMA engine through a secondary wide interconnect.</p> <p>Each cluster contains 64KiB of Zero Memory. The Zero Memory is a memory where all read access are returning 0-data and all writes are accepted without an actual data write happening.</p>"},{"location":"ug/occamy_system/3_system_components/#dma","title":"DMA","text":"<p>The ninth Snitch core in the cluster is used for DMA transfers and/or worker cores coordination. It features a tightly-coupled DMA engine that can be controlled with custom ISA extensions. The DMA transfers can be issued asynchronously with the ISA extensions and the DMA supports a configurable number of outstanding DMA transfers. The DMA issues burst-based AXI transfers on the wide 512-bit AXI interconnect. The AXI bus is connected to the cluster crossbar from where a transaction can either be directed to the TCDM or out to the global memory system. The DMA also features a HW extension that allows to issue 2D transfers that are automatically remapped to 1D transfers.\u00a0</p>"},{"location":"ug/occamy_system/3_system_components/#fpu","title":"FPU","text":"<p>The FP-SS, bundles an IEEE-754 compliant FPU with a 32x64 bit registerfile. The FP-SS has its own dedicated scoreboard where it keeps track of all registers in a similar fashion to the integer core. Operations without dependencies can be issued back to back. In addition to the FPU it also contains a separate LSU dedicated to loading and storing floating-point data from/to the floating-point RF, the address calculation is performed in the integer core, which significantly reduces the area of the LSU. Furthermore, the Snitch-CC contains three SSRs  (2.1.1 SSR) which map, upon activation through a CSR write, registers ft0, ft1 and ft2 to memory streams. The FPU is parameterizable in supported precision and operation latency. All floating-point operations are fully pipelined (with possibly different pipeline depths).</p> <p>Supports the following number formats:</p> Format Total Bitwidth Exponent Width Mantissa Width IEEE binary64 (double) 64 11 52 IEEE binary32 (single) 32 8 23 IEEE binary16 (half) 16 5 10 custom binary16alt (bfloat16) 16 8 7 custom binary8 8 5 2 custom binary8alt 8 4 3 <p>The Occamy FPU is a modular design containing hardware units dedicated to each operation group. The enabled operation groups are: ADDMUL (fma, add, mul, ...), CAST (conversions), COMP (comparison), SDOTP (dot products). The support for FP division and square root has been disabled as such instructions will not often be used in the application scenarios targeted by Occamy. If FP division and square root are needed, they can be software emulated on the integer datapath.</p> <p>ADDMUL, CAST, and COMP operations can work on all the enabled formats. In contrast, SDOTP only targets low-mixed-precision operations.</p> <p>The ADDMUL operation group block contains: (i) one 64-bit FMA, (ii) one 32-bit FMA, (iii) two 16-bit FMAs, (iv) four 8-bit FMAs. Larger-precision units support lower-precision computations. That means that per FPU, one FP64 FMA/cycle, two FP32 FMA/cycle, four FP16 FMA/cycle, four FP16ALT FMA/cycle, eight FP8 FMA/cycle, or eight FP8ALT FMA/cycle can be computed.</p> <p></p> <p>The SDOTP operation group block contains two 16-to-32-bit ExSdotp (expanding sum of dot products) units and two 8-to-16-bit ExSdotp units. ExSdotp operations can be performed on operands expressed in FP8/FP8ALT/FP16/FP16ALT and using an accumulator which is expressed with twice as many bits (e.g. source format FP8ALT, accumulator format FP16). Larger precision units support lower-precision computations as well; thus two 16-to-32-bit ExSdotp per cycle per FPU can be carried out, or four 8-to-16-bit ExSdotp per cycle per FPU.</p> <p></p> <p>The CAST operation group block contains a single unit capable of performing all the conversions. The COMP operation group block contains (i) one FP64 unit, (ii) two FP32 units, (iii) four FP16 units, (iv) four FP16ALT units, (v) eight FP8 units, (vi) eight FP8ALT units.</p> <p>Each operation group block contains a parameterized pipeline depth: 3 sets of pipeline registers are used for ADDMUL and SDOTP, 2 for CONV, and 1 for COMP.</p> <p>To sum up:</p> Operation Latency [cycle] Throughput per FPU [output/cycle] FP64 FMA 4 1 FP32 FMA 4 2 FP16/FP16ALT FMA 4 4 FP8/FP8ALT FMA 4 8 All conversions 3 1 FP64 Comparisons 2 1 FP32 Comparisons 2 2 FP16/FP16ALT Comparisons 2 4 FP8/FP8ALT Comparisons 2 8 FP16/FP16ALT-to-FP32 ExSdotp 4 2 FP8/FP8ALT-to-FP16/FP16ALT ExSdotp 4 4 <p></p>"},{"location":"ug/occamy_system/3_system_components/#cluster-peripherals","title":"Cluster Peripherals","text":"<p>Each cluster hosts the following set of peripherals, accessible from the 64-bit AXI crossbar:</p> <ul> <li>Performance counters</li> <li>Cluster CLINT</li> <li>Hardware barrier unit</li> <li>Shared control and status registers (CSRs)</li> </ul> <p>The hardware barrier unit is described in <code>synchronization</code>. The cluster CLINT is described in <code>interrupts</code>.</p> <p>The cluster peripherals are memory-mapped in the <code>PERIPHERAL</code> region of each cluster's address space.</p>"},{"location":"ug/occamy_system/3_system_components/#serial-link","title":"Serial Link","text":"<p>Occamy features multiple custom serial link interfaces to connect the two dies together as well as to provide a connection to a host system like an FPGA. The serial link is a simple all-digital Double-Data-Rate (DDR) link with a source-synchronous interface. The link is scalable in terms of number of channels and lanes and occur in different configurations in Occamy. The Link has an AXI4 interface and implements Network, Data Link and Physical Layer.</p> <p></p>"},{"location":"ug/occamy_system/3_system_components/#die-2-die-wide","title":"Die-2-Die (Wide)","text":"<p>The wide Serial Link is the main Die-2-Die link which is used to transfer large amount of data from one die to the other die with the DMAs in Occamy. It is connected to the wide 512-bit AXI interconnect of the system. The wide Serial Link has a relatively high bandwidth due the large number of channels. The exact configuration is shown below.</p> Parameter Value #Channels 38 #Lanes 8 #Wires 684 Max I/O clock frequency 250 MHz (default 125 MHz) Max Bandwidth (duplex) 304 Gbps @ 250 MHz <p>Transfers over the Wide Serial Link to the other die can be done by issuing DMA requests where the MSB+1 (used bits) of the address is set i.e. adding an offset off <code>0x100_0000_0000</code>. The entire address space of the other die is accessible this way.</p> Address Configuration register base address <code>0x0600_0000</code> Start address <code>0x100_0000_0000</code> End address <code>0x1ff_ffff_ffff</code> <p>The AXI interface of the Wide Serial Link can be isolated with its <code>SERIAL_LINK_CTRL</code> register. Further the Wide Serial Link can be SW reset and clock gated.</p>"},{"location":"ug/occamy_system/3_system_components/#die-2-die-narrow","title":"Die-2-Die (Narrow)","text":"<p>The narrow Serial Link is connected to the narrow AXI interface of Occamy. It can be used to transfer smaller amounts of data from one die to the other die i.e. for the purpose of synchronization. Compared to the Wide serial Link, it has a relatively low bandwidth. The exact configuration is shown below.</p> Parameter Value #Channels 1 #Lanes 8 #Wires 18 Max I/O clock frequency 250 MHz (default 125 MHz) Max Bandwidth (duplex) 8 Gbps @ 250 MHz <p>The Narrow Serial Link can be accessed with normal load stores and by setting the MSB+1 (used bits) bit of the address i.e. adding an offset of <code>0x100_0000_0000</code>. The entire address space of the other die is accessible this way.</p> Address Configuration register base address <code>0x0700_0000</code> Start address <code>0x100_0000_0000</code> End address <code>0x1ff_ffff_ffff</code> <p>The AXI interface of the Narrow Serial Link can be isolated with its <code>SERIAL_LINK_SINGLE_CHANNEL_CTRL</code> register. Further the Narrow Serial Link can be SW reset and clock gated.</p>"},{"location":"ug/occamy_system/3_system_components/#fpga-off-system-link","title":"FPGA / Off-System Link","text":"<p>The FPGA Serial Link is used to connect Occamy to the outside i.e. an FPGA board. This can be used for instance to preload binaries or employ applications remotely.</p> Parameter Value #Channels 1 #Lanes 8 #Wires 18 Max I/O clock frequency 250 MHz (default 125 MHz) Max Bandwidth (duplex) 8 Gbps @ 250 MHz <p>The FPGA Serial Link is always-on and cannot be isolated, clock-gated. It is resetted with the global reset.</p> Address Configuration register base address <code>0x0500_0000</code> Start address <code>0x2000_0000</code> End address <code>0x6fff_ffff</code>"},{"location":"ug/occamy_system/3_system_components/#cva6","title":"CVA6","text":"<p>Occamy features one CVA6 core that serves as a manager of the system. CVA6 is an application-class, in-order, 64-bit RISC-V core. It supports the RV64GC ISA, meaning that it can run a rich operating system such as Linux. For more information on CVA6, refer to the <code>CVA6 GitHub repository</code> or its <code>user manual</code>. This section documents Occamy-specific modifications and the configuration of CVA6.</p>"},{"location":"ug/occamy_system/3_system_components/#configuration","title":"Configuration","text":"<p>CVA6 L1 data cache configuration | Parameter       | Value      | | --------------- | ---------- | | Write policy    | Write-back | | Size            |      2 KiB | | Cacheline width |   16 bytes | | Associativity   |      8-way | | #Sets           |        256 |</p> <p>CVA6 L1 instruction cache configuration | Parameter       | Value      | | --------------- | ---------- | | Size            |     16 KiB | | Cacheline width |   16 bytes | | Associativity   |      4-way | | #Sets           |        256 |</p> <p>CVA6 branch predictors | Component            | Configuration | | -------------------- | ------------- | | Return-address stack |     2 entries | | Branch target buffer |    32 entries | | Branch history table |   128 entries |</p> <p>CVA6 FPU configuration | Parameter           | Value    | | ------------------- | -------- | | XF16                | disabled | | XF16ALT             | disabled | | XF8                 | disabled | | XF8ALT              | disabled | | XFVEC               | disabled | | FP64 comp latency   | 3 cycles | | Div/Sqrt latency    | 2 cycles | | Non-comp latency    | 1 cycles | | Conversion latency  | 2 cycles | | Dot product latency | 2 cycles |</p> <p>Further CVA6 parameters | Parameter                       | Value      | | ------------------------------- | ---------- | | Pysical memory protection (PMP) |  8 entries | | Data TLB                        | 16 entries | | Instruction TLB                 | 16 entries |</p>"},{"location":"ug/occamy_system/3_system_components/#physical-memory-attributes-pmas","title":"Physical Memory Attributes (PMAs)","text":"Start End Description Executable Cached Non-Idempotent <code>0x0000_0000</code> <code>0x0000_0fff</code> Debug module yes no no <code>0x0000_1000</code> <code>0x00ff_ffff</code> unmapped no no yes <code>0x0100_0000</code> <code>0x0101_ffff</code> Bootrom yes no no <code>0x0102_0000</code> <code>0x6fff_ffff</code> Peripherals no no yes <code>0x7000_0000</code> <code>0x7007_ffff</code> SPM yes yes no <code>0x7008_0000</code> <code>0x7fff_ffff</code> unmapped no no yes <code>0x8000_0000</code> <code>0xffff_ffff</code> HBM 0,1 yes yes no <code>0x1_0000_0000</code> <code>0xf_ffff_ffff</code> unmapped no yes no <code>0x10_0000_0000</code> <code>0x11_ffff_ffff</code> HBM 0-7 yes yes no <code>0x12_0000_0000</code> <code>0xff_ffff_ffff</code> unmapped no yes no <code>0x100_0000_0000</code> end unmapped no no no"},{"location":"ug/occamy_system/3_system_components/#axi-interface","title":"AXI Interface","text":"<p>Compared to the upstream version of CVA6, a few minor custom modifications were done to its AXI interface.</p> <ol> <li>For compatibility with the remainder of the Occamy system, AXI requests by CVA6 are marked as modifiable (<code>ax.cache = 0x2</code>).</li> <li>As for all cores within Occamy, the <code>user</code> signal of all AXI requests issued by CVA6 contains <code>hartid + 1</code>. This allows for scalable atomics support.</li> </ol>"},{"location":"ug/occamy_system/3_system_components/#temporal-fence-instruction","title":"Temporal Fence Instruction","text":"<p>For experimental purposes, CVA6 in Occamy is extended by the custom temporal fence instruction (<code>fence.t</code>). <code>fence.t</code> can be used to prevent on-core timing channels, as described in the  <code>fence.t paper</code>_. <code>fence.t</code> is mapped to the opcode <code>0xfffff00b</code>. Furthermore, two custom CSRs that configure <code>fence.t</code> are added to enable a history-independent context-switch latency:</p> CSR Address <code>FENCE_T_PAD</code> 0x702 <code>FENCE_T_CEIL</code> 0x703 <p><code>fence.t</code> will defer completion until <code>FENCE_T_PAD</code> cycles have passed since the most recent CLINT timer interrupt.</p> <p>The <code>FENCE_T_CEIL</code> CSR serves for evaluation purposes and is subdivided into two fields:</p> Bit(s) Field 0 - 31 <code>fence_t_ceil</code> 32 <code>fence_t_src_sel</code> 33 - 63 Reserved <p><code>fence_t_ceil</code> contains the greatest observed number of cycles between the most recent CLINT timer interrupt and the completion of <code>fence.t</code> before padding. It is capped to <code>FENCE_T_PAD</code>. It can be used to determine an upper bound of the context-switch latency and hence a suitable value for <code>FENCE_T_PAD</code>.</p> <p>If <code>fence_t_src_sel</code> is set, <code>fence.t</code> will pad with respect to the most recent privilege switch from U-mode instead of the most recent CLINT timer interrupt. This is required for performance estimations e.g., based on fast-path context switches, which are not triggered by a CLINT timer interrupt.</p> <p>Note: Setting <code>fence_t_src_sel</code> might render the security properties (history-independent context switch latency) of <code>fence.t</code> invalid and should only be used for performance evaluation.</p> <ul> <li>CVA6 GitHub repository: https://github.com/openhwgroup/cva6</li> <li>user manual: https://docs.openhwgroup.org/projects/cva6-user-manual/</li> <li>fence.t paper: https://doi.org/10.1109/TC.2022.3212636</li> </ul>"},{"location":"ug/occamy_system/3_system_components/#system-level-dma","title":"System-level DMA","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#system-memories","title":"System Memories","text":"<p>Occamy has three system-level memories plus the 8GB HBM2e memory:</p> Memory Word width Size Start Address End Address Narrow SPM 64-bit 512 KB 0x00_7000_0000 0x00_7007_ffff Wide SPM 512-bit 1 MB 0x00_7100_0000 0x00_710f_ffff Wide Zero Memory 512-bit 8 GB 0x01_0000_0000 0x02_ffff_ffff HBM0 512-bit 1 GB 0x10_0000_0000 0x02_ffff_ffff HBM0 alias 512-bit 1 GB 0x00_8000_0000 0x00_bfff_ffff HBM1 512-bit 1 GB 0x10_4000_0000 0x02_ffff_ffff HBM1 alias 512-bit 1 GB 0x00_c000_0000 0x00_ffff_ffff HBM2 512-bit 1 GB 0x10_8000_0000 0x02_ffff_ffff HBM3 512-bit 1 GB 0x10_c000_0000 0x02_ffff_ffff HBM4 512-bit 1 GB 0x11_0000_0000 0x02_ffff_ffff HBM5 512-bit 1 GB 0x11_4000_0000 0x02_ffff_ffff HBM6 512-bit 1 GB 0x11_8000_0000 0x02_ffff_ffff HBM7 512-bit 1 GB 0x11_c000_0000 0x02_ffff_ffff <p>The Narrow SPM is mainly utilized by <code>CVA6</code>, the wide SPM can be used to store data or as a SW controlled data cache in front of the HBM. The rather large memory range of 8GB of the Wide Zero Memory helps to preload the HBM with 0s to avoid ECC errors when accessing non-full words with the system-level DMA.</p> <p>The 8GB HBM memory is by default a continous memory region where each bank has the size of 1GB. By changing <code>INTERLEAVED_ENA</code> from 0 to 1, the 8GB gets addressed in an interleaved fashion.</p>"},{"location":"ug/occamy_system/3_system_components/#axi-crossbars","title":"AXI crossbar(s)","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#peripherals","title":"Peripherals","text":"<p>Occamy includes the following peripherals:</p> <ul> <li>bootrom</li> <li>gpio</li> <li>i2c</li> <li>jtag</li> <li>plic</li> <li>clint</li> <li>spi</li> <li>timer</li> <li>uart</li> </ul>"},{"location":"ug/occamy_system/3_system_components/#soc-control-registers","title":"SoC Control Registers","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#chip-control-registers","title":"Chip Control Registers","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#control-register-files-overview","title":"Control Register Files Overview","text":"<p>TODO</p>"},{"location":"ug/occamy_system/4_clocking/","title":"Clocking and Reset Strategy","text":""},{"location":"ug/occamy_system/4_clocking/#general","title":"General","text":"<p>In Occamy we have four high-level reset and clocking domains, three of them are open-source:</p> <ul> <li>SoC: first wake-up domain, contains CVA6, narrow and wide SPM, all peripherals</li> <li>6x Group domains: Each Group can be kept individually in reset, being clock gated and isolated from the global interconnects</li> <li>Die-to-die Serial Links: Each serial link (Narrow and Wide) can be kept individually in reset, being clock gated and isolated from the global interconnects</li> </ul>"},{"location":"ug/occamy_system/4_clocking/#reset-strategy","title":"Reset Strategy","text":"<p>In the following we describe the reset strategy to assert and de-assert various clock/reset domains.</p>"},{"location":"ug/occamy_system/4_clocking/#global-async-reset-soc-domain","title":"Global Async Reset \u2013 SoC Domain","text":"<p>The global reset is asynchronous and is assumed to be asserted for multiple cycles while the FLL\u2019s or bypassed clocks are slow. This should ensure that any FF (async or sync resetable) is reseted and put into an known state. Most likely the clocks need to be disable to de-assert the global reset to ensure the reset de-assertion has propagated to each register before we re-enable the reset.</p>"},{"location":"ug/occamy_system/4_clocking/#group-domains","title":"Group Domains","text":"<p>The Group domains is not reset with the global reset, but contains three control registers to control the isolation from the AXI interconnect, the clock gating and the reset. The global reset ensures that the each Group domain is:</p> <ul> <li>AXI isolated and stays AXI isolated</li> <li>Clock gated</li> <li>Reset is de-asserted to avoid large current spikes</li> </ul> <p>CVA6 is the reset controller and can wake up the domain with the following sequence:</p> <ol> <li>Assert reset (synchronous)</li> <li>De-assert reset (synchronous)</li> <li>Enable clock</li> <li>De-isolate</li> </ol>"},{"location":"ug/occamy_system/4_clocking/#die-to-die-serial-link-domains","title":"Die-to-Die Serial Link Domains","text":"<p>The Die2Die domains is not reset with the global reset, but contains three control registers to control the isolation from the AXI interconnect, the clock gating and the reset. The global reset ensures that the each Die2Die domain is:</p> <ul> <li>AXI isolated and stays AXI isolated</li> <li>Clock gated</li> <li>Reset is de-asserted to avoid large current spikes</li> </ul> <p>CVA6 is the reset controller and can wake up the domain with the following sequence:</p> <ol> <li>Assert reset (synchronous)</li> <li>De-assert reset (synchronous)</li> <li>Enable clock</li> <li>De-isolate</li> </ol>"},{"location":"ug/occamy_system/4_clocking/#clocking-strategy","title":"Clocking Strategy","text":"<p>We have three main clock domains, two of them are open-source. Each of which is driven by the output clock of an FLL instance on the taped-out system. The (open-source) clock domains are listed in the following table:</p> Clock domain Nominal Frequency [GHz] System (CVA6, Cluster, Groups, Serial Links) 1 Peripheral 0.3"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/","title":"Interrupts and Synchronization","text":""},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#interrupts","title":"Interrupts","text":""},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#software-and-timer-interrupts","title":"Software and Timer Interrupts","text":"<p>The system-level CLINT implements machine-level timer and software-generated interrupts, in compliance with the RISC-V priviliged specification. It is described in detail in the <code>system_clint</code> section.</p>"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#cluster-interrupts","title":"Cluster Interrupts","text":"<p>Additionally, each Snitch cluster provides a Cluster-Local CLINT (CL-CLINT) to efficiently raise inter-processor interrupts within each cluster. These cluster interrupts are implemented as a custom machine-level interrupt source, using the reserved register bits indicated by the RISC-V priviliged specification.</p> <p>The CL-CLINT is a Snitch cluster peripheral and is exposed by the <code>CL_CLINT_SET</code> and <code>CL_CLINT_CLEAR</code> registers. As the names imply, these registers can be used to (atomically) set and clear the cluster-interrupt pending bits within the cluster.</p>"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#synchronization","title":"Synchronization","text":"<p>Synchronization among harts in Occamy can be implemented purely in software by exploiting either of two underlying hardware mechanisms:</p> <ul> <li>Inter-processor interrupts (IPIs)</li> <li>Atomics</li> </ul> <p>Several convenience functions are provided in the <code>CVA6Runtime</code> and <code>SnRuntime</code> which make use of these features under the hood, e.g. to implement mutex or barrier primitives.</p>"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#cluster-hardware-barrier-unit","title":"Cluster hardware barrier unit","text":"<p>In addition to the software-based synchronization methods, every Snitch cluster provides a hardware barrier unit to efficiently synchronize the cores in a cluster. The hardware barrier unit is a Snitch cluster peripheral and is mapped to the <code>HW_BARRIER</code> register.</p> <p>To synchronize the cores, each core issues a load instruction to the <code>HW_BARRIER</code> register. The register load is blocking, i.e. it stalls the core, until all cores have arrived at the barrier, i.e. have issued the load instruction. Barrier departure occurs as a result of receiving a return value from the load instruction, thus retiring the load instruction.</p>"},{"location":"ug/occamy_system/occamy_ug/","title":"Occamy Manycore System","text":"<p>Based on the Manticore architecture. The system itself is described in System Overview.</p> <p>The Occamy system is located in <code>hw/system/occamy</code>. Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#hardware-generation","title":"Hardware Generation","text":"<p>Go to the occamy directory, where most of your efforts will take place:</p> <pre><code>cd hw/system/occamy\n</code></pre> <p>Note: from now on, assume all the path to be relative to <code>hw/system/occamy</code>.</p> <p>Occamy is generated based on the config file <code>src/occamy_cfg.hjson</code>. In addition many peripherals are based on memory-mapped Register-files generated by the <code>Reggen</code> tool. To generate all HW and SW sources, run the following command:</p> <pre><code>make all\n</code></pre> <p>In case you want to run a smaller Occamy configuration with, e.g. only 1 snitch cluster (for faster RTL simulation), you can open <code>./src/occamy_cfg.hjson</code>, and reduce <code>nr_s1_quadrant</code> and <code>nr_clusters</code> (e.g. both to <code>1</code>). To make the changes effective,  you can run again the previously mentioned command:</p> <pre><code>make all\n</code></pre> <p>Then compile the hardware, e.g. for Questasim (see <code>setup-iis.md</code> for the needed environment to run the simulation on the ETH IIS machines):</p> <pre><code># Compile the RTL for Questasim\nmake bin/occamy_top.vsim\n\n# Compile the RTL for VCS\nmake bin/occamy_top.vcs\n</code></pre> <p>This <code>make</code> target compiled the RTL simulation model in <code>./work-vsim</code> and the frontend server (fesvr) C++ sources into <code>./work</code>. It also generated a script <code>./bin/occamy_top.vsim</code> or <code>./bin/occamy_top.vcs</code> (you can read the vsim file, the vcs is a binary) that you can use to start a Questasim or VCS session initialized with the ELF of the app/kernel you want to run. This script relies on the <code>fesvr</code> utilities to connect to the RTL simulation and load your ELF program into the simulated DRAM memory.</p>"},{"location":"ug/occamy_system/occamy_ug/#simulation-of-sw-kernels","title":"Simulation of SW Kernels","text":"<p>All Occamy software is currently compiled with <code>CMake</code> so you might also want to look into <code>./sw/CMakeLists.txt</code> in this directory to see which applications or tests are included. In general you can run the following commands to build applications:</p> <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre> <p>Cmake tests can be run with:</p> <pre><code>make tests\n</code></pre> <p>You can now simulate a single binary as follows:</p> <pre><code># Questasim example\n#bin/occamy_top.vsim &lt;path-to-riscv-binary&gt;\nbin/occamy_top.vsim sw/build/snRuntime/test-snRuntime-simple\n\n# VCS example\nbin/occamy_top.vcs sw/build/snRuntime/test-snRuntime-simple\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#makefile-structure","title":"Makefile Structure","text":"<p>Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#utility-targets","title":"Utility Targets","text":"<p>In general, the Makefile includes the <code>Makefrag</code> in <code>util/Makefrag</code> at the root of this repository. In this <code>util</code> directory also contains scripts to analyze and visualize traces generated by the RTL simulations. Have a look at the following utility Makefile targets (you can execute them after running RTL simulation):</p> <ul> <li><code>traces</code> Generate the better readable traces in .logs/trace_hart_.txt with spike-dasm <li><code>annotate</code> Annotate the better readable traces in .logs/trace_hart_.s with the source code related with the retired instructions. <p>In addition, we have some general clean targets:</p> <ul> <li><code>clean</code> Clean everything except traces in logs directory.</li> <li><code>clean.logs</code> Delete all traces in logs director</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#hw-and-source-generation","title":"HW and Source Generation","text":"<ul> <li><code>update-source</code> Update all SW and HW related sources (by, e.g., re-generating the RegGen registers and their c-header files).</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#simulator-compilations","title":"Simulator Compilations","text":"<ul> <li><code>bin/occamy_top.vcs</code> Build compilation script and compile all sources for VCS simulation.</li> <li>@IIS: run the command as follows: <code>vcs-2020.12 make bin/occamy_top.vcs</code></li> <li> <p><code>clean.vcs</code> Clean all build directories and temporary files for VCS simulation.</p> </li> <li> <p><code>bin/occamy_top.vlt</code> Build compilation script and compile all sources for Verilator simulation.</p> </li> <li> <p><code>clean.vlt</code> Clean all build directories and temporary files for Verilator simulation.</p> </li> <li> <p><code>bin/occamy_top.vsim</code> Build compilation script and compile all sources for Questasim simulation.</p> </li> <li>@IIS: <code>QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/ CC=/gcc-5.3.0-linux_x86_64/bin/gcc CXX=/gcc-5.3.0-linux_x86_64/bin/g++ LD=/gcc-5.3.0-linux_x86_64/bin/ld make bin/occamy_top.vsim</code></li> <li><code>clean.vsim</code> Clean all build directories and temporary files for Questasim simulation.</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#addressmap-generation","title":"Addressmap Generation","text":"<p>The following command generate various graphics of Occamy's Address Map based on the config file <code>src/occamy_cfg.hjson</code>. Therefore, the commands run in the background the <code>all</code> target.</p> <ul> <li><code>update-addrmap</code> Generate the addressmap in the following formats: MD, TEX.</li> <li><code>addrmap</code> Generate the addressmap in the following formats: MD, PNG, TEX, PDF.</li> <li><code>addrmap.tex</code> Generate the TEX addrmap source.</li> <li><code>addrmap.md</code> Generate the MD addrmap graphic.</li> <li><code>addrmap.png</code> Generate the PNG addrmap graphic.</li> <li><code>addrmap.pdf</code> Generate the PDF addrmap graphic.</li> <li><code>clean.addrmap</code> Delete all addrmap outputs.</li> <li><code>clean.addrmap.pdf</code> Delete all Latex outputs when generating the addrmap.pdf from addrmap.tex</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#software","title":"Software","text":"<p>The runtime and tests can be compiled as follows:</p> <pre><code>make DEBUG=ON update-sw\n</code></pre> <p>The <code>DEBUG</code> flag is used to include debugging symbols in the binaries, and can be omitted if this is not required. It is required if you later want to annotate the traces.</p>"},{"location":"ug/occamy_system/occamy_ug/#running","title":"Running","text":"<p>You can run a Snitch binary on the simulator by passing it as a command-line argument to <code>bin/occamy_top</code>, for example:</p> <pre><code>bin/occamy_top.vsim sw/build/&lt;some test&gt;\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#sw-build","title":"SW Build","text":"<p>Depending on which toolchain you want to use and whether you target <code>banshee</code> (our instruction-accurate emulator) you cann add the following flags when calling <code>cmake</code>: Interesting CMake options that can be set via <code>-D&lt;option&gt;=&lt;value&gt;</code>: Each simulation will generate a unique trace file for each hart in the system. The trace file can be disassembled to instruction mnemonics by using the <code>traces</code> target.</p> <ul> <li><code>CMAKE_TOOLCHAIN_FILE</code>: The compiler toolchain configuration to use. Acceptable values:<ul> <li><code>toolchain-gcc</code> for a GNU tolchain</li> <li><code>toolchain-llvm</code> for a LLVM/Clang toolchain (coming soon)</li> <li>Your own custom <code>&lt;toolchain&gt;.cmake</code> file; see <code>${SNITCH_REPO_ROOT}/cmake/toolchain-gcc.cmake</code> for reference</li> </ul> </li> <li><code>SNITCH_SIMULATOR</code>: Path to simulation binary absolute or relaive from the <code>sw/build/</code> directory such as <code>../../../../../hw/system/snitch_cluster/bin/snitch_cluster.vsim</code></li> <li><code>SNITCH_BANSHEE</code>: The <code>banshee</code> simulator binary to use for test execution.</li> <li><code>BUILD_TESTS</code>: Build Cmake tests. Can be <code>ON</code> or <code>OFF</code></li> </ul> <p>The following Makefile targets do set these command already:</p> <ul> <li><code>sw</code> Build SW into sw/build with the LLVM.</li> <li><code>sw.vcs</code> Build SW into sw/build with the LLVM (incl. tests) for VCS simulator.</li> <li><code>sw.vlt</code> Build SW into sw/build with the LLVM (incl. tests) for Verilator simulator.</li> <li><code>sw.vsim</code> Build SW into sw/build with the LLVM (incl. tests) for Questasim simulator.</li> <li><code>clean.sw</code> Delete sw/build.</li> </ul> <p>The following command build and run all specified cmake tests with the corresponding simulator:</p> <ul> <li><code>sw.test.vcs</code> Build SW and run all tests with VCS simulator.</li> <li><code>sw.test.vlt</code> Build SW and run all tests with Verilator simulator.</li> <li><code>sw.test.vsim</code> Build SW and run all tests with Questasim simulator.</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#fpga","title":"FPGA","text":"<p>For the FPGA build flow have a look at the directory <code>fpga</code>. The following Makefile target basically enters this directory and builds Occamy's FPGA version:</p> <ul> <li> <p><code>fpga</code> Build a small Occamy version (CVA6 + 1xcluster) for the VCU128 FPGA board. In addition to generating readable traces, the above command also dumps several performance metrics to file for each hart. These can be collected into a single CSV file with the following target:</p> <p>make perf-csv</p> </li> </ul> <p>Among these performance metrics are start and end times of particular regions marked in the traces (via mcycle CSR reads). It can sometimes be useful to visualize these regions in a timeline. You can use the <code>util/trace/eventvis.py</code> tool to generate a JSON file starting from a CSV file (similar to the output of the previous command) which can be visualized in a Chrome browser at <code>chrome://tracing</code>. A detailed description of the expected CSV file format can be found in the tool's source code.</p> <p>A source-code annotated trace can be generated using the <code>annotate</code> target. The Snitch binary with the debugging symbols should be passed to the target:</p> <pre><code>make BINARY=sw/build/sn_&lt;some test&gt;.elf annotate\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#notes","title":"Notes","text":"<p>All Snitch cores are initially isolated and are not able to fetch instructions from the <code>bootrom</code>. The <code>cva6</code> manager core de-isolates the Snitch cores during booting. After that the manager core is trapped in an exception loop.</p>"}]}